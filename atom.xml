<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Here is Lee Blog.</title>
  
  <subtitle>Keep fighting,Keep your mind,Be patient,and Never give up!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fightlee.fun/"/>
  <updated>2020-09-19T03:51:49.621Z</updated>
  <id>http://fightlee.fun/</id>
  
  <author>
    <name>Lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javaweb篇-servlet(一)</title>
    <link href="http://fightlee.fun/javaweb%E7%AF%87-servlet.html"/>
    <id>http://fightlee.fun/javaweb%E7%AF%87-servlet.html</id>
    <published>2020-09-19T01:02:22.000Z</published>
    <updated>2020-09-19T03:51:49.621Z</updated>
    
    <content type="html"><![CDATA[ <img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919092820.png" alt="20200919092820" style="zoom:67%;" /><a id="more"></a><h1 id="JavaWeb-Servlet-一"><a href="#JavaWeb-Servlet-一" class="headerlink" title="JavaWeb-Servlet(一)"></a>JavaWeb-Servlet(一)</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><blockquote><p>系统 : win7,10(64 位)</p><p>jdk : jdk-8u181-windows-x64.exe</p><p>Eclispe/STS/IDEA : Eclipse&lt;Photon Release (4.8.0)&gt;</p><p>Tomcat : apache-tomcat-8.0.53</p></blockquote><h2 id="Servlet-的基本概念"><a href="#Servlet-的基本概念" class="headerlink" title="Servlet 的基本概念"></a>Servlet 的基本概念</h2><blockquote><p>Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。</p><p>使用 Servlet，您可以收集来自网页表单的用户输入，呈现来自数据库或者其他源的记录，还可以动态创建网页。</p><p>Java Servlet 通常情况下与使用 CGI（Common Gateway Interface，公共网关接口）实现的程序可以达到异曲同工的效果。但是相比于 CGI，Servlet 有以下几点优势：</p><ul><li>性能明显更好。</li><li>Servlet 在 Web 服务器的地址空间内执行。这样它就没有必要再创建一个单独的进程来处理每个客户端请求。</li><li>Servlet 是独立于平台的，因为它们是用 Java 编写的。</li><li>服务器上的 Java 安全管理器执行了一系列限制，以保护服务器计算机上的资源。因此，Servlet 是可信的。</li><li>Java 类库的全部功能对 Servlet 来说都是可用的。它可以通过 sockets 和 RMI 机制与 applets、数据库或其他软件进行交互。</li></ul></blockquote><p>以上全是网站上随意 Copy 的,对于 Servlet 而言,同学们只需要认识一点 :</p><p>Servlet 就是一个在服务器中的 Java 小程序,有了 Servlet,我们可以接收来自网页表单的输入内容,或者将数据库&amp;其他源的内容反馈给用户进行显示.</p><p>Servlet 这个 Java 程序需要运行在一个容器中,而这个容器就是我们环境中所提到的 Tomcat,由 Servlet 组成的 Java 应用程序我们又可以称之为 Web 应用程序.</p><p>要注意的是 : Servlet 默认是以多线程模式执行的.</p><h2 id="Eclipse-的配置"><a href="#Eclipse-的配置" class="headerlink" title="Eclipse 的配置"></a>Eclipse 的配置</h2><blockquote><p>安装好 Jdk,Tomcat 和 Eclipse 之后就可以对 Eclipse 进行服务器配置了.</p></blockquote><p>打开 Eclipse,选择熟悉的工作空间.选择 JavaEE 开发界面(一般是默认),在窗口下方找到 Servers 窗口</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919095416.png" alt="20200919095416" style="zoom: 67%;" /><p>点击超链接后进行服务器配置.选择好对应的 Tomcat 版本后点击 Next</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919100717.png" alt="20200919100717" style="zoom: 67%;" /><p>如果是第一次配置,在 Browse 处选择在本地的 Tomcat 根目录即可.JRE 的选择可以是默认也可以选择本地 JDK.配置好后点击 Finish 即可.</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919105808.png" alt="20200919105808" style="zoom: 67%;" /><p>Finish 后在之前的超链接处,出现刚刚配置好的 Tomcat 服务器,直接双击进入 Tomcat 服务器中继续进行发布路径的配置,修改完毕后<strong>,ctrl + s</strong>保存文件配置.</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919110035.png" alt="20200919110035" style="zoom:50%;" /><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919110244.png" alt="20200919110244" style="zoom:67%;" /><h2 id="创建第一个-Servlet"><a href="#创建第一个-Servlet" class="headerlink" title="创建第一个 Servlet"></a>创建第一个 Servlet</h2><blockquote><p>在对 Eclipse 的 Tomcat 环境进行配置后,就可以开始创建第一个 Servlet 程序了.</p></blockquote><p>创建 Web 工程,右键 new — 选择 Dynamic Web Project , 填写 ProjectName 和修改 module version 为 2.5(如图),再点击 Finish.</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919111018.png" alt="20200919111018" style="zoom: 67%;" /><p>在工程中的 src 文件夹下创建包和 java 文件.(代码如下)</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919111448.png" alt="20200919111448" style="zoom:80%;" /><strong>HelloServlet.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Servlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest arg0, ServletResponse arg1)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  arg1.getWriter().write(<span class="string">"Hello World!"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig arg0)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>代码解析 : 创建一个 HelloServlet 的 Java 文件,然后让其实现 Servlet 接口,在重写的 service 方法中使用 arg1 这个变量得到一个 Writer 对象写出一个字符串”Hello World!”.</p><p>如果想要实现后的形参的名称不是 arg0,arg1 这种需要添加对应源码.添加源码的操作如下.</p></blockquote><h4 id="如何在项目中添加源码"><a href="#如何在项目中添加源码" class="headerlink" title="如何在项目中添加源码"></a>如何在项目中添加源码</h4><p>按住 ctrl + 左键点击 Servlet 接口</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919112049.png" alt="20200919112049" style="zoom: 67%;" /><p>点击 Attach Source 按钮 , 然后选择下方的 External Folder 浏览到 Tomcat 的源码根路径,继续点击 OK 即可</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919112202.png" alt="20200919112202" style="zoom: 67%;" /><p>等几秒后 Eclipse 加载完毕,再删掉之前的方法重新实现可得到正确的参数名称.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Servlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest req, ServletResponse res)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  res.getWriter().write(<span class="string">"Hello World!"</span>);</span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着需要在WebContet目录中的WEB-INF目录下的web.xml中进行配置,打开web.xml文件</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919113208.png" alt="20200919113208" style="zoom:67%;" /><p>在web.xml文件中添加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>01_Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!-- 此处为HelloServlet的配置信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.web.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>右键选择当前项目 然后 Run as —- Run  on Server , 在出现的界面直接点击 Finish 即可, 等待服务器运行.</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919113646.png" alt="20200919113646" style="zoom:67%;" /><p>当Console控制台出现 Server Startup 的log信息,就可以在浏览器中输入路径访问Servlet了.</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919113909.png" alt="20200919113909" style="zoom:67%;" /><p>在浏览器中输入路径(推荐使用Google或者微软自带的Edge浏览器),查看HelloServlet.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919114123.png" alt="20200919114123"></p><blockquote><p>OK , 到这里我们第一个Servlet已经创建完毕并成功运行查看到了HelloServlet中 service方法中的输出.在下一篇中我们来具体的学习Servlet的基本知识.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200919092820.png&quot; alt=&quot;20200919092820&quot; style=&quot;zoom:67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="web" scheme="http://fightlee.fun/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Part8·面向对象编程·三(图文)</title>
    <link href="http://fightlee.fun/09-java.html"/>
    <id>http://fightlee.fun/09-java.html</id>
    <published>2020-01-04T01:15:28.000Z</published>
    <updated>2020-01-05T07:17:31.245Z</updated>
    
    <content type="html"><![CDATA[<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200105112811.png" alt="20200105112811.png" style="zoom: 67%;" /><a id="more"></a><h1 id="前文回顾"><a href="#前文回顾" class="headerlink" title="前文回顾"></a>前文回顾</h1><p>在前文中我们学习到 Java 面向对象编程中的俩个核心概念 , 类(class) 和 对象 . 一个类有 2 个成员,一个<strong>成员属性</strong> 和 <strong>成员方法</strong>,并对方法进行了详细的讲述,现在我们来看一下类中的另一个成员 : <strong>成员属性</strong>.</p><h1 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h1><p>类中的属性其实就是变量的一种表现形式, 在初学变量之时,我们提到过变量的书写位置不同,作用域也不同,详细请回顾 <a href="http://fightlee.fun/08-java.html">Part 1-5 补充</a> 这一章节.在类中定义的变量,我们一般称之为全局变量,也叫<strong>成员变量.</strong></p><p>根据类<strong>创建出对应对象后</strong>,<strong>成员变量便赋予了初始值</strong>. 常见的类型初始化值如下 :</p><table><thead><tr><th align="center">类型</th><th align="center">初始值</th></tr></thead><tbody><tr><td align="center">String or 引用类型</td><td align="center">null</td></tr><tr><td align="center">整型</td><td align="center">0</td></tr><tr><td align="center">浮点型</td><td align="center">0.0</td></tr><tr><td align="center">Boolean</td><td align="center">false</td></tr></tbody></table><h4 id="例-1-创建-Dog-类-并创建其对象-观察对象属性的初始值"><a href="#例-1-创建-Dog-类-并创建其对象-观察对象属性的初始值" class="headerlink" title="例 1 : 创建 Dog 类,并创建其对象,观察对象属性的初始值"></a>例 1 : 创建 Dog 类,并创建其对象,观察对象属性的初始值</h4><p>Dog 类 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义成员变量</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestDog 类 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDog</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Dog dog = <span class="keyword">new</span> Dog();</span><br><span class="line">        System.out.prinlnt(dog.name); <span class="comment">// 输出 null</span></span><br><span class="line">        System.out.prinlnt(dog.age);  <span class="comment">// 输出 0</span></span><br><span class="line"></span><br><span class="line">        dog.name = <span class="string">"旺财"</span>;</span><br><span class="line">        dog.age = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        System.out.prinlnt(dog.name); <span class="comment">// 输出 旺财</span></span><br><span class="line">        System.out.prinlnt(dog.age);  <span class="comment">// 输出 1</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>从上例可以看出 在创建对象后,没有赋值前的类中的 name 和 age 就已经具备了初始化的值 . 赋值后, 初始值被替换.</strong></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>面向对象编程不是一个很难理解的概念,大家始终记住 2 点 :</p><ol><li>类中存在 2 个成员 , 成员变量 和 成员方法 .</li><li>成员变量和成员方法的调用需要通过对象(<strong>类的实例</strong>)来调用 .</li></ol><h1 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h1><p>重载 : 在同一个类中,方法名相同,参数列表不相同的不同方法称之为 方法的重载 . 举例说明 .</p><h4 id="例-2-计算器类中的加法运算"><a href="#例-2-计算器类中的加法运算" class="headerlink" title="例 2 : 计算器类中的加法运算"></a>例 2 : 计算器类中的加法运算</h4><p>Calucator 类 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calucator</span></span>&#123;</span><br><span class="line">    <span class="comment">//计算2个数的和</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算3个数的和</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b + c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算3个浮点型数的和</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b,<span class="keyword">double</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b + c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//报错</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">       System.out.println(a + b + c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从例 2 我们可以总结出以下几点 :</p><ol><li>一个类中不同的方法可以重名 , 但必须保证这些方法为重载</li><li>重载的表现为参数列表不相同 –&gt; 即 参数的个数不同 或者 参数的类型不同</li><li>重载于返回值类型无关.</li></ol><h1 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h1><h2 id="构造函数的语法"><a href="#构造函数的语法" class="headerlink" title="构造函数的语法"></a>构造函数的语法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] 构造函数名([参数列表])&#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造函数的作用"><a href="#构造函数的作用" class="headerlink" title="构造函数的作用"></a>构造函数的作用</h2><ol><li>创建对象 new XXX(); 需要通过构造函数</li><li>初始化 在创建对象后,对该对象进行初始化</li></ol><h2 id="构造函数的使用"><a href="#构造函数的使用" class="headerlink" title="构造函数的使用"></a>构造函数的使用</h2><h4 id="例-3-创建-Student-类-并添加构造函数"><a href="#例-3-创建-Student-类-并添加构造函数" class="headerlink" title="例 3 : 创建 Student 类,并添加构造函数"></a>例 3 : 创建 Student 类,并添加构造函数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String gender;</span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//带参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name,<span class="keyword">int</span> age,String gender)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="为什么要使用构造函数"><a href="#为什么要使用构造函数" class="headerlink" title="为什么要使用构造函数"></a>为什么要使用构造函数</h2><p>根据例 3 我们创建 TestStudent 类来演示构造函数的作用 :</p><p>TestStudenet 类 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestStudent</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建Student对象</span></span><br><span class="line">        Student student1 = <span class="keyword">new</span> Student();</span><br><span class="line">        <span class="comment">//再给对象赋值</span></span><br><span class="line">        student1.name = <span class="string">"zhangsan"</span>;</span><br><span class="line">        student1.age = <span class="number">12</span>;</span><br><span class="line">        student1.gender = <span class="string">"男"</span>;</span><br><span class="line">      <span class="comment">//上面创建对象并赋值的过程分为了2步,如果我们想创建对象的同时对 对象的属性进行初始化的操作,可以通过构造函数来实现</span></span><br><span class="line">        Student student2 = <span class="keyword">new</span> Student(<span class="string">"王五"</span>,<span class="number">12</span>,<span class="string">"女"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造函数注意"><a href="#构造函数注意" class="headerlink" title="构造函数注意"></a>构造函数注意</h2><ol><li><strong>构造函数的名称必须和类名一致,并且没有返回值类型</strong></li><li><strong>如果一个类中没有添加任何构造函数,Java 虚拟机会默认给类添加空参构造函数,如果手动添加了其他带参构造函数,则 Java 虚拟机不会添加默认空参构造函数</strong></li><li><strong>创建对象时,如果是 new Student(), 该类中必须要有空参构造函数. 如果是 new Student (xxx,xxx,xxx),则该类中必须要有对应数据类型的带参构造函数.否则程序将会报错</strong></li><li><strong>构造函数其实也是体现了函数的重载,方法名相同,参数列表不相同.</strong></li></ol><h1 id="this-关键字"><a href="#this-关键字" class="headerlink" title="this 关键字"></a>this 关键字</h1><p>在例 3 中,我们在 Student 类中的带参构造函数中使用了 this.name 的形式给 类中的成员变量 name 赋值.下面我们来具体学习 this 关键字的作用和使用</p><h2 id="为什么要使用-this-关键字"><a href="#为什么要使用-this-关键字" class="headerlink" title="为什么要使用 this 关键字"></a>为什么要使用 this 关键字</h2><h4 id="例-4-修改之前-Student-类中的带参构造"><a href="#例-4-修改之前-Student-类中的带参构造" class="headerlink" title="例 4 : 修改之前 Student 类中的带参构造"></a>例 4 : 修改之前 Student 类中的带参构造</h4><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200105144458.png" alt="20200105144458.png"></p><p><strong>如果在此处没有添加 this 关键字,我们从图片可以看出 name = name … 下有黄色波浪线,即 name 变量的值 赋值给了本身 name 空间,编译器认为此操作毫无意义,所以报出警告.由此可以看出,这里并不是我们想要实现的将 name 赋值给成员变量 name. 分析小技巧 : 变量就近使用原则.在 Student 的构造函数中,俩个 name 都和方法参数中的 name 挨的最近,所以都是同一 name 变量</strong></p><p><strong>添加 this 后 : 警告消失. this.name 调用的不再是参数中的 name 变量 而是 类中的成员变量 name , <span style="color:red">this 的使用解决了方法中的参数名和成员变量名冲突的问题.</span></strong></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200105145137.png" alt="20200105145137.png"></p><h2 id="this-关键字的使用方式"><a href="#this-关键字的使用方式" class="headerlink" title="this 关键字的使用方式"></a>this 关键字的使用方式</h2><h3 id="this-作用"><a href="#this-作用" class="headerlink" title="this 作用"></a>this 作用</h3><p>对象创建后,Java 虚拟机会给当前对象分配一个引用当前对象本身的指针,该指针称之为 this.</p><h3 id="在构造方法中使用"><a href="#在构造方法中使用" class="headerlink" title="在构造方法中使用"></a>在构造方法中使用</h3><h4 id="例-5-创建-Teacher-类"><a href="#例-5-创建-Teacher-类" class="headerlink" title="例 5 : 创建 Teacher 类"></a>例 5 : 创建 Teacher 类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String gender;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">(String name,<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.通过this.xx 调用成员变量赋值</span></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">(String name,<span class="keyword">int</span> age,String gender)</span></span>&#123;</span><br><span class="line">        <span class="comment">//2.在构造函数中还可以通过this()来调用其他构造函数</span></span><br><span class="line">        <span class="keyword">this</span>(name,age);</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在成员方法中使用"><a href="#在成员方法中使用" class="headerlink" title="在成员方法中使用"></a>在成员方法中使用</h3><h4 id="例-6"><a href="#例-6" class="headerlink" title="例 6 :"></a>例 6 :</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"写"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用this.name调用成员变量name</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.name + <span class="string">"在朗诵"</span>);</span><br><span class="line">        <span class="comment">//省略this. System.out.println(name + "在朗诵");</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exam</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//使用this.write()调用成员方法</span></span><br><span class="line">        <span class="keyword">this</span>.write();</span><br><span class="line">        <span class="comment">//write();省略this.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在成员方法中如果名称没有冲突可以省略 this. Java 虚拟机会自动给我们加上</strong></p><h3 id="this-关键字代表谁"><a href="#this-关键字代表谁" class="headerlink" title="this 关键字代表谁?"></a>this 关键字代表谁?</h3><h4 id="例-7-结合例-6"><a href="#例-7-结合例-6" class="headerlink" title="例 7 : 结合例 6"></a>例 7 : 结合例 6</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestStudent</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Student stu = <span class="keyword">new</span> Student(<span class="string">"zhangsan"</span>);</span><br><span class="line">        stu.read();<span class="comment">//stu对象调用read 则 read方法中的this即为stu对象,stu对象name为zhangsan</span></span><br><span class="line">        <span class="comment">//输出 zhangsan 在朗诵</span></span><br><span class="line"></span><br><span class="line">        Student stu1 = <span class="keyword">new</span> Student(<span class="string">"wangwu"</span>);</span><br><span class="line">        stu1.read();<span class="comment">//stu1对象调用read 则 read方法中的this即为stu1对象,stu1对象name为wangwu</span></span><br><span class="line">        <span class="comment">//输出 wangwu 在朗诵</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结论 : 谁调用,this 就是谁.</strong></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>成员变量(<strong>重点</strong>)</li><li>函数重载(<strong>重点</strong>)</li><li>构造函数(<strong>重点</strong>)</li><li>this 关键字(<strong>重点</strong>)</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200105112811.png&quot; alt=&quot;20200105112811.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Part7.Vue速学(图文)</title>
    <link href="http://fightlee.fun/07-vue.html"/>
    <id>http://fightlee.fun/07-vue.html</id>
    <published>2020-01-03T08:59:20.000Z</published>
    <updated>2020-01-03T17:25:58.960Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cn.vuejs.org/images/logo.png" alt="20191223092306.png" style="zoom: 67%;" /><a id="more"></a><p>在上一章中我们学习了组件的使用,这一章我们继续来深入学习组件…</p><h1 id="子父组件"><a href="#子父组件" class="headerlink" title="子父组件"></a><b style="color:rgb(65,184,131)">子父组件</b></h1><p>所谓子父组件和组件树结构,我们可以等同理解为 dom 树,在 JavaScript 中的 dom 树中,一个 dom 元素中可能包含另一个 dom 元素,同理一个组件中可能包含着另一个组件.我们通过图片和代码来说明</p><p><strong>来自官网图片</strong> : 其中浅灰色区域代表 <strong>父组件</strong> , 深灰色区域代表 <strong>子组件</strong><br><img src="https://cn.vuejs.org/images/components.png" alt="20191223092306.png" style="zoom: 50%;" /></p><h4 id="例-1"><a href="#例-1" class="headerlink" title="例 1"></a>例 1</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 在Vue实例中使用父组件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">m-parent</span>&gt;</span><span class="tag">&lt;/<span class="name">m-parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是父组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 在父组件中使用子组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">m-child</span>&gt;</span><span class="tag">&lt;/<span class="name">m-child</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"child"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是子组件中的内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//1.创建子组件对象</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> child = &#123;</span></span><br><span class="line"><span class="actionscript">        template: <span class="string">'#child'</span></span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="comment">//2.创建父组件对象,并在父组件中注册子组件</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> parent = &#123;</span></span><br><span class="line"><span class="actionscript">        template: <span class="string">'#parent'</span>,</span></span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">'m-child'</span>: child</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="comment">//3.在Vue实例中注册父组件对象</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;&#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">'m-parent'</span>: parent</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>总结 : A 组件在 B 组件中注册,则 A 是 B 的子组件, 并且 A 只能在注册过的组件中使用.在例 1 中组件的关系为 , child 在 parent 中注册 , parent 在 Vue 实例中注册 , 也就是说 child 为 parent 的子组件, parent 为 Vue 实例的子组件, 如果我们在 Vue 实例中直接使用 child 组件就会出错,因为 child 组件没有在 Vue 实例中注册.</strong></p><h1 id="子父组件之间传值"><a href="#子父组件之间传值" class="headerlink" title="子父组件之间传值"></a><b style="color:rgb(65,184,131)">子父组件之间传值</b></h1><p>在下面的例子介绍中我们只定义一个组件在 vue 实例中进行注册, 即 该组件和 Vue 实例存在子父之间的关系.</p><h2 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a><b style="color:rgb(65,184,131)">父传子</b></h2><h4 id="例-2-在-Vue-实例中的-data-属性中初始化数组-将数组中的数据传递给组件"><a href="#例-2-在-Vue-实例中的-data-属性中初始化数组-将数组中的数据传递给组件" class="headerlink" title="例 2 : 在 Vue 实例中的 data 属性中初始化数组,将数组中的数据传递给组件"></a>例 2 : 在 Vue 实例中的 data 属性中初始化数组,将数组中的数据传递给组件</h4><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200103183950.png" alt="20200103183950.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>父传子<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 3.在vue实例中 的组件上 给子组件中的props定义的orders赋值 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">m-test</span> <span class="attr">:orders</span>=<span class="string">"orders"</span> <span class="attr">:category</span>=<span class="string">"category"</span>&gt;</span><span class="tag">&lt;/<span class="name">m-test</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义组件内容--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;category&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 在组件中接收父组件data中的数据 , 并显示 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"order in orders"</span>&gt;</span></span><br><span class="line">            &#123;&#123;order.id&#125;&#125;--&#123;&#123;order.name&#125;&#125;--&#123;&#123;order.price&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//创建组件对象</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> test = &#123;</span></span><br><span class="line"><span class="actionscript">        template: <span class="string">'#test'</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//2.在子组件中定义props, 有2种方式,这里使用的是数组方式,可以同时定义多个props</span></span></span><br><span class="line"><span class="actionscript">        props: [<span class="string">'orders'</span>, <span class="string">'category'</span>]</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="comment">//在Vue实例中注册组件对象</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//1.在vue实例中初始化数据</span></span></span><br><span class="line">        data: &#123;</span><br><span class="line">          orders: [</span><br><span class="line">            &#123;</span><br><span class="line">              id: 1,</span><br><span class="line">              price: 4,</span><br><span class="line"><span class="actionscript">              name: <span class="string">'营养快线'</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              id: 2,</span><br><span class="line">              price: 2,</span><br><span class="line"><span class="actionscript">              name: <span class="string">'AD钙奶'</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              id: 3,</span><br><span class="line">              price: 3.5,</span><br><span class="line"><span class="actionscript">              name: <span class="string">'旺仔牛奶'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line"><span class="actionscript">          category: <span class="string">'饮料'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">'m-test'</span>: test</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200103181929.png" alt="20200103181929.png" style="zoom: 80%;" /><h3 id="props-的使用"><a href="#props-的使用" class="headerlink" title="props 的使用"></a>props 的使用</h3><p>在代码中我提到了 props 有 2 种使用方式,一种是数组,一种是对象.数组用法在<strong>例 2</strong>中已经学习过了,我们来看看 对象用法.</p><h4 id="例-3-通过-prop-对象的使用-可以对传入的属性的值的类型校验-定义默认值等功能"><a href="#例-3-通过-prop-对象的使用-可以对传入的属性的值的类型校验-定义默认值等功能" class="headerlink" title="例 3 : 通过 prop 对象的使用,可以对传入的属性的值的类型校验,定义默认值等功能"></a>例 3 : 通过 prop 对象的使用,可以对传入的属性的值的类型校验,定义默认值等功能</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = &#123;</span><br><span class="line">  template: <span class="string">'#test'</span>,</span><br><span class="line">  <span class="comment">//2.在子组件中定义props,对象写法</span></span><br><span class="line">  props: &#123;</span><br><span class="line">    orders: &#123;</span><br><span class="line">      type: <span class="built_in">Array</span>, <span class="comment">//传入类型检查</span></span><br><span class="line">      <span class="keyword">default</span>() &#123;</span><br><span class="line">        <span class="keyword">return</span> [] <span class="comment">//默认值</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    category: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">'商品'</span>,</span><br><span class="line">      required: <span class="literal">true</span> <span class="comment">//必须传入</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型检查"><a href="#类型检查" class="headerlink" title="类型检查"></a>类型检查</h3><ul><li>String</li><li>Number</li><li>Boolean</li><li>Array</li><li>Object</li><li>Date</li><li>Function</li><li>Symbol</li></ul><h3 id="prop-的驼峰命名问题"><a href="#prop-的驼峰命名问题" class="headerlink" title="prop 的驼峰命名问题"></a>prop 的驼峰命名问题</h3><p>在 props,如果定义的属性为驼峰形式,我们则在 html 中需要使用 kebab-case 命名方式来进行替换 如 :</p><h4 id="例-4"><a href="#例-4" class="headerlink" title="例 4"></a>例 4</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父组件中给props传值 props为驼峰命名 使用  kebab-case 短横线来代替 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">m-test</span> <span class="attr">:my-category</span>=<span class="string">"category"</span>&gt;</span><span class="tag">&lt;/<span class="name">m-test</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 子组件中使用属性为props中定义的属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;myCategory&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">//创建组件对象</span></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">const</span> test = &#123;</span></span><br><span class="line"><span class="actionscript">    template: <span class="string">'#test'</span>,</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.props为驼峰命名</span></span></span><br><span class="line"><span class="actionscript">    props: [<span class="string">'myCategory'</span>]</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="单向数据流"><a href="#单向数据流" class="headerlink" title="单向数据流"></a>单向数据流</h3><p>来自官网的解释 : 所有的 prop 都使得其父子 prop 之间形成了一个单向下行绑定：父级 prop 的更新会向下流动到子组件中，但是反过来则不行。这样会防止从子组件意外改变父级组件的状态，从而导致你的应用的数据流向难以理解。</p><p>额外的，每次父级组件发生更新时，子组件中所有的 prop 都将会刷新为最新的值。这意味着你<strong>不</strong>应该在一个子组件内部改变 prop。如果你这样做了，Vue 会在浏览器的控制台中发出警告。</p><p>简单理解 : 父组件通过 prop 向子组件传值时,如果父组件的数据更新后子组件的也会同时更新,但是反过来就不行. 并且我们不能在子组件中修改 prop , 如果我们试图在子组件中更新父组件的数据,Vue 中会提示警告 原因 : 避免数据混乱 .</p><h4 id="例-5"><a href="#例-5" class="headerlink" title="例 5"></a>例 5</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Props 单向数据流<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 2.count 通过 props 传递给 子组件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">m-test</span> <span class="attr">:count</span>=<span class="string">"count"</span>&gt;</span><span class="tag">&lt;/<span class="name">m-test</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 3.在子组件中直接修改 count --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;count&#125;&#125; <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"count++"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> test = &#123;</span></span><br><span class="line"><span class="actionscript">        template: <span class="string">'#test'</span>,</span></span><br><span class="line"><span class="actionscript">        props: [<span class="string">'count'</span>]</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 1.父组件中初始化 count</span></span></span><br><span class="line">        data: &#123;</span><br><span class="line">          count: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">'m-test'</span>: test</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200104002730.png" alt="20200104002730.png"></p><p><strong>为了解决这个问题我们有 2 种方案</strong></p><ol><li>props 中的数据用 data 来接收</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 模板中使用 子组件中定义的myCount --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;myCount&#125;&#125; <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"myCount++"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> test = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#test'</span>,</span></span><br><span class="line"><span class="actionscript">      props: [<span class="string">'count'</span>],</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//在子组件中使用data来接收props中的值</span></span></span><br><span class="line">      data()&#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123; myCount : <span class="keyword">this</span>.count&#125;</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line">     ...</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>props 中的数据用 computed 来处理</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Props 单向数据流<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 传递给子组件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-test</span> <span class="attr">:name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">m-test</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 子组件中使用computed计算属性 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;myName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> test = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#test'</span>,</span></span><br><span class="line"><span class="actionscript">      props: [<span class="string">'name'</span>],</span></span><br><span class="line">      computed: &#123;</span><br><span class="line">        myName() &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">//将父组件传递的名称大写再显示</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.name.toUpperCase()</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//父组件中定义名称</span></span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        name: <span class="string">'zhangsan'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      ...</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>提示 : 如果在子组件中更新的是父组件中的对象或者数组，Vue 不会报错</strong></p><h2 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a><b style="color:rgb(65,184,131)">子传父</b></h2><p>前文讲述了如何将父组件中的数值传递给子组件, 这里我们来看一下子组件如何来修改父组件的状态.</p><h4 id="例-6-比如我们想从子组件中修改父组件中的字体大小"><a href="#例-6-比如我们想从子组件中修改父组件中的字体大小" class="headerlink" title="例 6 : 比如我们想从子组件中修改父组件中的字体大小"></a>例 6 : 比如我们想从子组件中修改父组件中的字体大小</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">:style</span>=<span class="string">"&#123;fontSize: fs + 'px'&#125;"</span>&gt;</span>父组件中的字体<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">m-test</span> <span class="attr">:font-size</span>=<span class="string">"fs"</span>&gt;</span><span class="tag">&lt;/<span class="name">m-test</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>子组件修改父组件状态<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>当前父组件字体大小 : &#123;&#123;parentFontSize + "px"&#125;&#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> test = &#123;</span></span><br><span class="line"><span class="actionscript">        template: <span class="string">'#test'</span>,</span></span><br><span class="line">        methods: &#123;</span><br><span class="line">          increment() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.parentFontSize++</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        props: [<span class="string">'fontSize'</span>],</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">            parentFontSize: <span class="keyword">this</span>.fontSize</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">          fs: 12</span><br><span class="line">        &#125;,</span><br><span class="line">        components: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">'m-test'</span>: test</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>我们看此代码的效果 : 现在 在 子组件中 正确的显示出父组件所传入的字体大小为定义的 12</strong></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200104010023.png" alt="20200104010023.png"></p><p>但是当我们点击 按钮 + 时，只能修改子组件中的 fontSize, 父组件中的状态没有更新，还是之前的单向数据流原因，我们想要更新父组件的状态，需要通过$emit()内置函数触发自定义事件来更新父组件的状态 , 修改代码 :</p><p><strong>1. 修改子组件中的 increment 方法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">   increment()&#123;</span><br><span class="line">    <span class="comment">//子组件中字体大小递增</span></span><br><span class="line">    <span class="keyword">this</span>.parentFontSize++</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                通过$emit()触发自定义事件,修改父组件字体</span></span><br><span class="line"><span class="comment">                参数1 ： 自定义事件名称</span></span><br><span class="line"><span class="comment">                参数2 ： 事件触发函数中所接收的参数</span></span><br><span class="line"><span class="comment">                注, $emit需要通过this.来调用</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'change-size'</span>,<span class="number">1</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>2. 修改父组件中 html 代码 在子组件上声明自定义事件 change-size 并触发函数 changeFontSize</strong><br><strong>注 ： 这里也应当注意驼峰的使用，尽量用 使用 kebab-case 短横线来替代</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">m-test</span> <span class="attr">:font-size</span>=<span class="string">"fs"</span> @<span class="attr">change-size</span>=<span class="string">"changeFontSize"</span>&gt;</span><span class="tag">&lt;/<span class="name">m-test</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3.在父组件中，即 vue 实例中定义触发的函数 change-size</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    fs: <span class="number">12</span></span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">'m-test'</span>: test</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">//此处的value为 $emit函数传递的第二个参数</span></span><br><span class="line">    changeFontSize(value) &#123;</span><br><span class="line">      <span class="comment">//对当前的字体大小进行累加</span></span><br><span class="line">      <span class="keyword">this</span>.fs += value</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>效果 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/cccc.gif" alt=""></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a><b style="color:rgb(65,184,131)">总结</b></h1><ol><li>在Vue中如何使用子父组件（<strong>重点</strong>）</li><li>子父组件之间传值（<strong>重点</strong>）</li><li>props的使用（<strong>重点</strong>）</li></ol><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200104012547.png" alt="20200104012547.png" style="zoom:80%;" />]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://cn.vuejs.org/images/logo.png&quot; alt=&quot;20191223092306.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://fightlee.fun/categories/web/"/>
    
    
      <category term="vue" scheme="http://fightlee.fun/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>人为什么要学习?</title>
    <link href="http://fightlee.fun/01-other.html"/>
    <id>http://fightlee.fun/01-other.html</id>
    <published>2019-12-31T14:02:03.000Z</published>
    <updated>2019-12-31T14:53:01.259Z</updated>
    
    <content type="html"><![CDATA[<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231220252.png" alt="20191231220252.png" style="zoom: 67%;" /><h4 style="color:red;text-align:center;font">点下面阅读进入观看</h4><a id="more"></a><div style="position: relative; width: 100%; height: 0;padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=26260219&cid=45094724&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute;width: 100%;height: 100%;left: 0;top: 0;"> </iframe></div><h3 id="来自评论的截图"><a href="#来自评论的截图" class="headerlink" title="来自评论的截图 :"></a>来自评论的截图 :</h3><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231222940.png" alt="20191231222940.png"></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231224807.png" alt="20191231224807.png"></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231224836.png" alt="20191231224836.png"></p><h5 id="120-分钟完整版链接-https-www-bilibili-com-video-av16681945"><a href="#120-分钟完整版链接-https-www-bilibili-com-video-av16681945" class="headerlink" title="120 分钟完整版链接 : https://www.bilibili.com/video/av16681945/"></a>120 分钟完整版链接 : <a href="https://www.bilibili.com/video/av16681945/" target="_blank" rel="noopener">https://www.bilibili.com/video/av16681945/</a></h5><h1 style="color:red;text-align:center;font">同学们,还颓废么?你想做一辈子的咸鱼么?</h1>这里我给出我的学习Java或者编程的经验 :<ol><li><strong>多敲多练,多敲多练,多敲多练,重要的事情来三遍</strong></li><li>提高英语和数学水平</li></ol><p><strong>1 决定了你学习编程的下限,你有多勤奋,下限就有多高.</strong></p><p><strong>2 决定了你的上限,英语提高了观看英文文档的能力,数学提高逻辑思维能力.</strong></p><h1 style="color:red;text-align:center;font">干吧!</h1><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231223621.png" alt="20191231223621.png" style="zoom:50%;" />]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231220252.png&quot; alt=&quot;20191231220252.png&quot; style=&quot;zoom: 67%;&quot; /&gt;

&lt;h4 style=&quot;color:red;text-align:center;font&quot;&gt;点下面阅读进入观看&lt;/h4&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://fightlee.fun/categories/study/"/>
    
    
      <category term="学习" scheme="http://fightlee.fun/tags/study/"/>
    
  </entry>
  
  <entry>
    <title>Part6.Vue速学(图文)</title>
    <link href="http://fightlee.fun/06-vue.html"/>
    <id>http://fightlee.fun/06-vue.html</id>
    <published>2019-12-31T03:22:09.000Z</published>
    <updated>2020-01-03T09:51:19.493Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cn.vuejs.org/images/logo.png" alt="20191223092306.png" style="zoom: 67%;" /><a id="more"></a><h1 id="组件化开发"><a href="#组件化开发" class="headerlink" title="组件化开发"></a><b style="color:rgb(65,184,131)">组件化开发</b></h1><h2 id="为什么要使用组件"><a href="#为什么要使用组件" class="headerlink" title="为什么要使用组件?"></a><b style="color:rgb(65,184,131)">为什么要使用组件?</b></h2><p><strong>来自官网的解释 :</strong> 组件系统是 Vue 的另一个重要概念，因为它是一种抽象，允许我们使用小型、独立和通常可复用的组件构建大型应用。</p><p>这里我们来思考一下上一章的例子 , 在上一章的购物车小案例中,我们使用到了四个部分内容, <strong>头部登陆,商品列表,购物车 和 登陆表单 , 来总结一下之前我们的写法缺陷.</strong></p><ol><li>所有部分都在一个页面中,代码的编写和维护及其不方便,人类的思维都是喜欢将一个比较复杂或者困难的事情拆分成几个部分来完成,所以我们将一个完整的页面拆分成不同部分来进行编写和单独维护更为方便.</li><li>将页面的组成部分拆开后,更利于内容的复用,一个页面的组成部分可能在不同的页面多次使用,比如登陆表单,头部登陆,购物车 等 首页,商品详情页,订单页面,都可能会使用到这些内容.</li></ol><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231114539.png" alt="20191231114539.png"></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231114952.png" alt="20191231114952.png"></p><h1 id="组件的基本使用"><a href="#组件的基本使用" class="headerlink" title="组件的基本使用"></a><b style="color:rgb(65,184,131)">组件的基本使用</b></h1><p>组件的使用一般分为 3 步 :</p><ol><li>定义组件内容</li><li>注册组件</li><li>使用组件</li></ol><p><strong>通常定义组件内容可以和注册组件合成一步 :</strong></p><h4 id="例-1"><a href="#例-1" class="headerlink" title="例 1"></a>例 1</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- vue实例部分 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 3. 使用组件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">      /*</span><br><span class="line">         通过component方法注册组件</span><br><span class="line">         方法arg1 : 自定义组件在vue实例中使用的标签名称</span><br><span class="line">         arg2 : 组件模板内容</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">      Vue.component(<span class="string">'m-cpn'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//通过template属性来定义组件内容,这里为了方便定义html内容字符串使用 ` `符号可以换行(1左边的符号)</span></span></span><br><span class="line">        template: `</span><br><span class="line"><span class="handlebars"><span class="xml">                  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;<span class="name">header</span>&gt;</span>我是组件的头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;<span class="name">main</span>&gt;</span>我是组件的主要部分<span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `</span><br><span class="line">      &#125;)</span><br><span class="line"><span class="actionscript">      <span class="comment">//在注册完组件后 实例vue</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;&#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果 :</strong> 从组件的使用效果来看,可以在<strong>vue 实例</strong>中通过组件定义组件时提供的自定义标签名来自定义网页内容.并可以重复使用.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200102101717.png" alt="20200102101717.png"></p><h2 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h2><h3 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h3><p>在例 1 中使用的注册方式即为全局注册,即所有 vue 的实例中都能使用</p><h4 id="例-2"><a href="#例-2" class="headerlink" title="例 2"></a>例 2</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- vue实例部分1 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第一个app实例<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 使用组件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- vue实例部分2 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第二个app1实例<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 使用组件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//全局注册</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'m-cpn'</span>, &#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">                  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;<span class="name">header</span>&gt;</span>我是组件的头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;<span class="name">main</span>&gt;</span>我是组件的主要部分<span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">//在每一个vue实例中都能使用</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;&#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app1'</span>,</span></span><br><span class="line">      data: &#123;&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200102102226.png" alt="20200102102226.png"></p><h3 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h3><p>如果我们想要当前组件只能在某一个 vue 实例中使用,那我们可以在对应的 vue 实例中单独注册,<strong>事实上在实际操作中我们使用的更多的时局部注册 .</strong></p><h4 id="例-3"><a href="#例-3" class="headerlink" title="例 3"></a>例 3</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- vue实例部分1 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第一个app实例<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 使用组件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第二个app1实例<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 使用组件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 局部注册 通过 options参数对象中的components属性注册</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;&#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">'m-cpn'</span>: &#123;</span></span><br><span class="line">          template: `</span><br><span class="line"><span class="handlebars"><span class="xml">                  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;<span class="name">header</span>&gt;</span>我是组件的头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                   <span class="tag">&lt;<span class="name">main</span>&gt;</span>我是组件的主要部分<span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">//没注册的组件,实例不能使用</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app1'</span>,</span></span><br><span class="line">      data: &#123;&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果 : 第二个 app1 实例中没有注册,所以不会显示并提示报错.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200102111111.png" alt="20200102111111.png"></p><h3 id="局部注册更优的写法"><a href="#局部注册更优的写法" class="headerlink" title="局部注册更优的写法"></a>局部注册更优的写法</h3><p>直接将组件内容定义在 options 参数中会让 vue 实例显得很臃肿,特别是在组件内容比较多的时候,所以我们一般将组件中的 html 代码定义在外部,然后在通过相应的方式引入到 options 参数中的 components 属性中进行注册</p><h4 id="例-4"><a href="#例-4" class="headerlink" title="例 4"></a>例 4</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>组件的使用<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 4. 使用组件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 1.定义组件模板内容 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"m-cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">header</span>&gt;</span>我是组件的头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">main</span>&gt;</span>我是组件的主要部分<span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.创建组件对象并给template属性赋值</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> myCpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#m-cpn'</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.注册组件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;&#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">'m-cpn'</span>: myCpn</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果 : 这样我们就可以将组件的 html 代码抒写在 template 标签中,避免了写在字符串中没有提示的尴尬.</p><p><span style="color:red;font-weight:bolder;">注意 : 无论是在 template 标签中书写还是直接在组件对象中使用字符串中写,当组件内部中有多个标签时,需要将组件内容包裹在一个根标签中,一般我们用 div 做为根标签使用.</span></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200102103902.png" alt="20200102103902.png"></p><h3 id="组件中-data-的使用"><a href="#组件中-data-的使用" class="headerlink" title="组件中 data 的使用"></a>组件中 data 的使用</h3><p>有时我们需要在组件中使用变量来呈现数据,就要和之前学习一样使用到 vue 实例中的 data 属性,我们来看看组件中 data 的使用.</p><h4 id="例-5-与之前的方式一样"><a href="#例-5-与之前的方式一样" class="headerlink" title="例 5 : 与之前的方式一样"></a>例 5 : 与之前的方式一样</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>组件的data使用<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">m-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"m-cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">header</span>&gt;</span>我是组件的头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"count++"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> myCpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#m-cpn'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        count: 1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;&#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">'m-cpn'</span>: myCpn</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果 : 我们可以看出, count 中的数字并没有正确显示,并且在控制台中还出现大量报错 .</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200102105938.png" alt="20200102105938.png"></p><p>我们截取对应报错信息 :</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue.js:<span class="number">634</span> [Vue warn]: The "data" <span class="keyword">option</span> should be a <span class="keyword">function</span> that <span class="keyword">returns</span> a per-instance <span class="keyword">value</span> <span class="keyword">in</span> component definitions.</span><br></pre></td></tr></table></figure><p>这里提示我们的 “data” 选项如果要定义在组件中应当是一个方法(function),并且需要返回一个实例对象.</p><h4 id="例-6-正确使用方法"><a href="#例-6-正确使用方法" class="headerlink" title="例 6 : 正确使用方法"></a>例 6 : 正确使用方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myCpn = &#123;</span><br><span class="line">  template: <span class="string">'#m-cpn'</span>,</span><br><span class="line">  <span class="comment">//data属性 为 function 并 返回一个实例对象.</span></span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      count: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3.注册组件</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">'m-cpn'</span>: myCpn</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>效果 : 下图使用正确,没有出错.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/bbbb.gif" alt=""></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a><b style="color:rgb(65,184,131)">总结</b></h1><ol><li>组件的基本使用</li><li>全局注册和<strong>局部注册</strong> (<strong>重点</strong>)</li><li>组件中 data 的使用 (<strong>重点</strong>)</li></ol><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20200102110717.png" alt="20200102110717.png" style="zoom: 67%;" />]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://cn.vuejs.org/images/logo.png&quot; alt=&quot;20191223092306.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://fightlee.fun/categories/web/"/>
    
    
      <category term="vue" scheme="http://fightlee.fun/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Part1-5·Java补充(图文)</title>
    <link href="http://fightlee.fun/08-java.html"/>
    <id>http://fightlee.fun/08-java.html</id>
    <published>2019-12-31T01:24:32.000Z</published>
    <updated>2020-01-05T03:29:09.138Z</updated>
    
    <content type="html"><![CDATA[<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231111023.png" alt="20191231111023.png" style="zoom:67%;" /><a id="more"></a><h1 id="回顾前文"><a href="#回顾前文" class="headerlink" title="回顾前文"></a>回顾前文</h1><p>在 Part1-Part5 的学习过程中,我们重点要掌握如下内容</p><ol><li>Java 环境配置和 Eclipse 工具的使用<ul><li><strong>Eclipse 工具创建项目的过程</strong></li></ul></li><li>标识符&amp;关键字&amp;注释</li><li><strong>变量&amp;数据类型</strong></li><li>转义符&amp;<strong>运算符</strong></li><li><strong>if&amp;switch&amp;while&amp;for 语句</strong></li></ol><h1 id="内容补充"><a href="#内容补充" class="headerlink" title="内容补充"></a>内容补充</h1><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>在 Java 中,使用{}来标识代码块.比如我们常见的 main 方法后的{},if,switch,while 等语法机构后的{}都可以称之为代码块,if 这些语句的代码块我们通常称之为<strong>普通代码块</strong>,在后面的学习过程中我们会接触到<strong>static 静态代码块</strong>,<strong>构造代码块</strong>,<strong>同步代码块</strong></p><h4 id="局部代码块"><a href="#局部代码块" class="headerlink" title="局部代码块"></a>局部代码块</h4><p>通常在一个方法内部出现的{}代码块,我们将其称之为局部代码块,比如 main 方法中的{},我们看下面代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//声明变量name,并赋值</span></span><br><span class="line">        String name = <span class="string">"zhangsan"</span>;</span><br><span class="line">        <span class="comment">//声明变量number,并赋值</span></span><br><span class="line">        <span class="keyword">int</span> number = <span class="number">10</span>;</span><br><span class="line">        <span class="comment">//输出name和number</span></span><br><span class="line">        System.out.println(<span class="string">"名字 : "</span> + name + <span class="string">" , number : "</span> + number);</span><br><span class="line">        <span class="comment">//定义循环,循环10000次 , 输出</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt;= <span class="number">10000</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"...."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//....下方代码省略</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们来分析一下上面代码, 首先我们声明了 2 个变量并赋值,最后使用了变量. 然后进入循环…</p><p>现在我们回顾一下变量是什么? <strong>Java 内存中的一块存储空间,这块空间中存储的数据是可变的</strong> , 既然变量是一块存储空间,那肯定会占用 Java 中的一部分内存,而在上个例子中 2 个变量创建后,也就是说这 2 块空间在 Java 内存中开辟后,我们对变量中的内容进行输出,然后在接下来的代码中再没有使用到这 2 个变量,也就是说在接下来的 Java 程序运行中,这俩块空间犹如垃圾一样存在 Java 内存中,当我们一个完整的程序中,这种垃圾变量(<strong>创建后,未使用的变量</strong>)越来越多,肯定会占用越来越多的内存空间,这个时候我们就应当合理的去释放掉这些空间,那怎么在方法中来控制变量的释放,限定变量的生命周期呢?(<strong>生命周期 : 一个事物从创建到销毁的过程.</strong>) 那这里就要使用到我们的局部代码块了.</p><p><strong>局部代码块 : 在方法中使用,用来限定变量生命周期，及早释放，提高内存利用率。</strong></p><p>修改过后的代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">              &#123; &#125; 即为代码块,在方法中的 &#123; &#125; 即为局部代码块</span></span><br><span class="line"><span class="comment">              当此大括号中的内容执行结束就会被释放掉</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//声明变量name,并赋值</span></span><br><span class="line">            String name = <span class="string">"zhangsan"</span>;</span><br><span class="line">            <span class="comment">//声明变量number,并赋值</span></span><br><span class="line">            <span class="keyword">int</span> number = <span class="number">10</span>;</span><br><span class="line">            <span class="comment">//输出name和number</span></span><br><span class="line">            System.out.println(<span class="string">"名字 : "</span> + name + <span class="string">" , number : "</span> + number);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 循环代码体代码...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>变量作用域就代表变量的作用范围.<br><strong>通常变量的作用域就代表当前变量所处的大括号{ }的范围,根据大括号{ }的位置不同,变量的作用范围也不一样,我们目前将变量根据作用域的划分为不同的级别的变量,类级,对象级,方法级,块级</strong></p><ol><li>类级 : 在类中由 static 关键字修饰 (后面分析)</li><li>对象级 : 又称之为成员属性或<b style="color:red">全局变量  </b>(后面分析)</li><li>方法级 : 在方法中定义的变量,又称之为<b style="color:red">局部变量</b></li><li>块级 : 代码块中的定义的变量,比如上文中的局部代码块中的 name 和 number</li></ol><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a><b style="color:red">局部变量</b></h4><ul><li>在同一个作用域下使用局部变量时,多个变量名的名称不能相同,如</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo02</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">       String name = <span class="string">"张三"</span>;</span><br><span class="line">       String name = <span class="string">"李四"</span>; <span class="comment">//错误 , 因为 2个 name 所处的 &#123;&#125;位置是同一作用域,都在同一个main方法中</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>不能使用不同作用域下的局部变量,如</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo03</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">"a = "</span> + a);<span class="comment">//在main方法中声明的变量可以在该方法内部的if代码块中使用</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"b = "</span> + b);<span class="comment">//错误 在 if 代码块中声明的变量只能 在 if代码块中使用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo03</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;= <span class="number">100</span>;i++)&#123;</span><br><span class="line">         System.out.println(<span class="string">"i = "</span> + i);</span><br><span class="line">     &#125;</span><br><span class="line">        System.out.println(<span class="string">"i = "</span> + i);<span class="comment">//错误,在for代码块中声明的变量 i 只能在 for代码块中使用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231104546.png" alt="20191231104546.png"></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="char"><a href="#char" class="headerlink" title="char"></a>char</h3><p>这里主要提一下 char 类型的算术运算,在计算机中的运算其实在底层都是二进制的运算,在 Java 中字符对应着一张字符编码表 ASCII 码表 .<br><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231102947.png" alt="20191231102947.png"></p><p>在此码表中我们看到字符 a 对应着数字 97,所以我们看下面代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo04</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     System.out.println(<span class="string">'a'</span> + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">98</span></span><br></pre></td></tr></table></figure><p><strong>结论 : 在做字符类型运算时,需要将对应字符根据对应的编码表转换成数字来进行运算</strong></p><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><p>这里也主要看一下 String 类型字符串的算术运算,在 Java 中字符串不同于字符 char,在做加法运算时,加法运算符转变成<strong>字符串连接符</strong>,其实在之前的学习之前我们已经练习过很多次了,一个字符串与其他数字或者字符或者多个字符串的相加,就等于字符串的拼接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo05</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">       System.out.println(<span class="string">"a = "</span> + <span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"1"</span> + <span class="number">1</span>);</span><br><span class="line">        String name = <span class="string">"zhangsan"</span>;</span><br><span class="line">        System.out.println(<span class="string">"name = "</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">a</span> = <span class="number">1</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="attribute">name</span> = zhangsan</span><br></pre></td></tr></table></figure><h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h3><h4 id="自动类型提升"><a href="#自动类型提升" class="headerlink" title="自动类型提升"></a>自动类型提升</h4><p>在 Java 中数字和数字之间进行算术运算时,会有着数据类型不同的数字进行运算,如 :</p><p><strong>提示 : 字面量 整数 默认为 int 类型, 字面量 小数 默认为 double 类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo05</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//相同数据类型的运算</span></span><br><span class="line">        System.out.println(<span class="number">2</span> / <span class="number">10</span>);</span><br><span class="line">        <span class="comment">//不同数据类型的运算</span></span><br><span class="line">        System.out.println(<span class="number">2.0</span> / <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">0.2</span></span><br></pre></td></tr></table></figure><p><strong>结论 :</strong></p><ol><li>相同数据类型运算后还是当前数据类型,即:整型 / 整型 = 整型 , 所以第一个输出语句结果为 0.2 取整为 <strong>0</strong> .</li><li>不同数据类型之间的运算,小的数据类型会<strong>自动提升</strong>为大的数据类型然后进行运算, 所以第二个输出语句结果为 整型 10 <strong>自动提升当前类型</strong>为 浮点型 10.0 , 运算后结果为浮点型 <strong>0.2</strong> .</li></ol><h4 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h4><p>在算术运算后如果需要赋值给另一个变量.这时候赋值的变量的数据类型和被赋值的变量数据类型不一致就可能会需要到强制类型转换,如 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo06</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">       <span class="keyword">int</span> a = <span class="number">2.0</span> / <span class="number">10</span>;<span class="comment">//报错</span></span><br><span class="line">       <span class="comment">//强制类型转换</span></span><br><span class="line">       <span class="keyword">int</span> c = (<span class="keyword">int</span>)(<span class="number">2.0</span> / <span class="number">10</span>);</span><br><span class="line">       <span class="keyword">double</span> b = <span class="number">2</span>;<span class="comment">//不报错</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结论 :</strong></p><ol><li>当 = 右边的数据类型大于 左边的数据类型, 就需要 强制类型转换 .</li><li>当 = 右边的数据类型小于 左边的数据类型, 则自动提升为左边的数据类型 .</li></ol><h3 id="整型和浮点型大小"><a href="#整型和浮点型大小" class="headerlink" title="整型和浮点型大小"></a>整型和浮点型大小</h3><table><thead><tr><th>数据类型</th><th>大小</th><th>取值范围</th></tr></thead><tbody><tr><td>byte</td><td>8 位,1 字节</td><td>-128~127</td></tr><tr><td>short</td><td>16 位,2 字节</td><td>-32768~32767</td></tr><tr><td>int</td><td>32 位,4 字节</td><td>-2147483648~2147483647</td></tr><tr><td>long</td><td>64 位,8 字节</td><td>-9223372036854775808~9223372036854775807</td></tr><tr><td>float</td><td>32 位,4 字节</td><td>3.402823e+38 ~ 1.401298e-45</td></tr><tr><td>double</td><td>64 位,8 字节</td><td>1.797693e+308~ 4.9000000e-324</td></tr><tr><td>char</td><td>16 位 unicode 字符</td><td>\u0000 ~ \uffff ( 0 ~ 65535)</td></tr></tbody></table><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="和-的区别"><a href="#和-的区别" class="headerlink" title="= 和 += 的区别"></a>= 和 += 的区别</h3><p>数据类型转换的区别 : 看例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo07</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">byte</span> b = <span class="number">0</span>;</span><br><span class="line">        b = b + a; <span class="comment">//报错</span></span><br><span class="line">        b += a; <span class="comment">//正确</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析 :</p><ol><li>报错 : byte 类型 b 和 int 类型 a 做 算术运算 类型自动提升为 int 类型 , 然后<strong>运算结束后 赋值给 byte 类型 b 报错</strong>.</li><li>正确 : <strong>+= 自动进行类型转换</strong>.</li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>变量作用域 (<strong>重点</strong>)</li><li>字符运算(<strong>掌握</strong>)和字符串拼接(<strong>重点</strong>)</li><li>数据类型大小(<strong>记住谁大谁小就好</strong>)</li><li>数据类型转换(<strong>重点</strong>)</li><li>= 和 += 区别(<strong>理解</strong>)</li></ol><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231110936.png" alt="20191231110936.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191231111023.png&quot; alt=&quot;20191231111023.png&quot; style=&quot;zoom:67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Part5.Vue练习(图文)</title>
    <link href="http://fightlee.fun/05-vue.html"/>
    <id>http://fightlee.fun/05-vue.html</id>
    <published>2019-12-30T11:09:32.000Z</published>
    <updated>2019-12-30T11:51:30.541Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cn.vuejs.org/images/logo.png" alt="20191223092306.png" style="zoom: 67%;" /><a id="more"></a><h1 id="购物车练习"><a href="#购物车练习" class="headerlink" title="购物车练习"></a>购物车练习</h1><p>学了几章的 vue 了,我们来做一个小练习,这里我给出我的效果,和我的代码,大家可以先自己试着做一下然后来参考.</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/aaaaa.gif" alt=""></p><h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1><ol><li>头部登陆框</li><li>显示商品列表</li><li>购物车</li><li>登陆框</li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码 :"></a>代码 :</h1><h2 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式 :"></a>CSS样式 :</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*全局字体*/</span></span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*商品列表和购物车样式*/</span></span><br><span class="line">  <span class="selector-class">.wrap</span> &#123;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">40px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.wrap</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: block;</span><br><span class="line">   <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">   <span class="attribute">clear</span>: both;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.pro</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">float</span>: left;</span><br><span class="line">   <span class="attribute">text-align</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.pro</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">table</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">   <span class="attribute">text-align</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h3</span> &#123;</span><br><span class="line">   <span class="attribute">color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*登陆框样式*/</span></span><br><span class="line">  <span class="comment">/*是否显示*/</span></span><br><span class="line">  <span class="selector-class">.active</span>&#123;</span><br><span class="line">   <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.box</span> &#123;</span><br><span class="line">   <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">40px</span>;</span><br><span class="line">   <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">6</span>);</span><br><span class="line">   <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">15px</span> <span class="number">25px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span>;</span><br><span class="line">   <span class="attribute">text-align</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-class">.inputBox</span> &#123;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-class">.inputBox</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">border</span>: none;</span><br><span class="line">   <span class="attribute">outline</span>: none;</span><br><span class="line">   <span class="attribute">background-color</span>: transparent;</span><br><span class="line">   <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-class">.inputBox</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">   <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">   <span class="attribute">pointer-events</span>: none;</span><br><span class="line">   <span class="attribute">transition</span>: .<span class="number">4s</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-class">.inputBox</span> <span class="selector-tag">input</span><span class="selector-pseudo">:valid</span>~<span class="selector-tag">label</span>,</span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-class">.inputBox</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>~<span class="selector-tag">label</span> &#123;</span><br><span class="line">   <span class="attribute">top</span>: -<span class="number">18px</span>;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#6AC653</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"submit"</span>]</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: transparent;</span><br><span class="line">   <span class="attribute">border</span>: none;</span><br><span class="line">   <span class="attribute">outline</span>: none;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#6AC653</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">   <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">cursor</span>: pointer;</span><br><span class="line">   <span class="attribute">transition</span>: .<span class="number">4s</span>;</span><br><span class="line">   <span class="attribute">display</span>: block;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.box</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"submit"</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">   <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Vue实例部分 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 头部登陆 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"isLogin"</span>&gt;</span>欢迎您 : &#123;&#123;userName&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>请<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> @<span class="attr">click.prevent</span>=<span class="string">"showLogin"</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 商品列表,购物车,登陆框 容器  --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 商品列表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h3</span>&gt;</span>商品列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pro"</span> <span class="attr">v-for</span>=<span class="string">"(pro,index) in proList"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"pro.imgSrc"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123;pro.name&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       商品价格: <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123;pro.price&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"buy(index)"</span>&gt;</span>点击购买<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 购物车 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"isLogin"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"cartList.length &gt; 0"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1px"</span> <span class="attr">cellpadding</span>=<span class="string">"20px"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>商品编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>商品名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>单价<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>商品操作<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>实付款<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>#<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">"(cart,index) in cartList"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;cart.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;cart.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;cart.price&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"cart.number--"</span> <span class="attr">v-if</span>=<span class="string">"cart.number &gt; 1"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          &#123;&#123;cart.number&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"cart.number++"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"cart.status == 0"</span>&gt;</span>未发货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">"cart.status == 1"</span>&gt;</span>已发货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>交易成功<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;(cart.price * cart.number).toFixed(2)&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"deleteCart(index)"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>实付总价 : &#123;&#123;getTotalPrice()&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>亲,您的购物车还没添加任何商品哦~~~<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h3</span>&gt;</span>很抱歉!您还没有登陆,请登陆后查看购物车!!<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!-- 登陆框 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">:class</span>=<span class="string">"&#123;active:!isShow&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 模拟登陆效果,登陆成功后,不需要跳转路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> @<span class="attr">submit.prevent</span>=<span class="string">"formSubmit"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inputBox"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"userName"</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>UserName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inputBox"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue部分"><a href="#Vue部分" class="headerlink" title="Vue部分"></a>Vue部分</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">   new Vue(&#123;</span><br><span class="line">    el: &#39;#app&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">     &#x2F;&#x2F;商品列表</span><br><span class="line">     proList: [&#123;</span><br><span class="line">       id: 1,</span><br><span class="line">       name: &#39;李宁卫衣&#39;,</span><br><span class="line">       imgSrc: &#39;img&#x2F;1.jpg&#39;,</span><br><span class="line">       price: 210,</span><br><span class="line">       status: 0,</span><br><span class="line">       number: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">       id: 2,</span><br><span class="line">       name: &#39;Nike T恤&#39;,</span><br><span class="line">       price: 180,</span><br><span class="line">       imgSrc: &#39;img&#x2F;4.jpg&#39;,</span><br><span class="line">       status: 0,</span><br><span class="line">       number: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">       id: 3,</span><br><span class="line">       name: &#39;李宁卫裤&#39;,</span><br><span class="line">       price: 114,</span><br><span class="line">       imgSrc: &#39;img&#x2F;2.jpg&#39;,</span><br><span class="line">       status: 0,</span><br><span class="line">       number: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">       id: 4,</span><br><span class="line">       name: &#39;Muscletech&#39;,</span><br><span class="line">       price: 510,</span><br><span class="line">       imgSrc: &#39;img&#x2F;3.jpg&#39;,</span><br><span class="line">       status: 0,</span><br><span class="line">       number: 1</span><br><span class="line">      &#125;</span><br><span class="line">     ],</span><br><span class="line">     &#x2F;&#x2F;购物车列表</span><br><span class="line">     cartList: [],</span><br><span class="line">     &#x2F;&#x2F;是否登陆</span><br><span class="line">     isLogin: false,</span><br><span class="line">     &#x2F;&#x2F;用户名</span><br><span class="line">     userName: &#39;&#39;,</span><br><span class="line">     &#x2F;&#x2F;是否显示登陆框</span><br><span class="line">     isShow:false</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">     &#x2F;&#x2F; 点击购买的 点击事件</span><br><span class="line">     buy(index) &#123;</span><br><span class="line">      if(this.isLogin)&#123;</span><br><span class="line">       let pro &#x3D; this.proList[index]</span><br><span class="line">       if (this.cartList.some(v &#x3D;&gt; v.id &#x3D;&#x3D; pro.id)) &#123;</span><br><span class="line">        pro.number++</span><br><span class="line">       &#125; else &#123;</span><br><span class="line">        this.cartList.push(pro)</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">       alert(&#39;很抱歉!您还没有登陆哦!&#39;)</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;,</span><br><span class="line">     &#x2F;&#x2F; 获取总价格的 方法</span><br><span class="line">     getTotalPrice() &#123;</span><br><span class="line">      &#x2F;&#x2F;普通写法</span><br><span class="line">      &#x2F;&#x2F;       let sum &#x3D; 0;</span><br><span class="line">      &#x2F;&#x2F;       for(let i &#x3D; 0;i&lt;this.cartList.length;i++)&#123;</span><br><span class="line">      &#x2F;&#x2F;        sum +&#x3D; this.cartList[i].number * this.cartList[i].price</span><br><span class="line">      &#x2F;&#x2F;       &#125;</span><br><span class="line">      &#x2F;&#x2F;reduce函数调用</span><br><span class="line">      &#x2F;&#x2F;       let sum &#x3D; this.cartList.reduce(function(prev,cart)&#123;</span><br><span class="line">      &#x2F;&#x2F;        return cart.price * cart.number + prev</span><br><span class="line">      &#x2F;&#x2F;       &#125;,0)</span><br><span class="line">      &#x2F;&#x2F;箭头函数调用</span><br><span class="line">      let sum &#x3D; this.cartList.map(cart &#x3D;&gt; cart.price * cart.number).reduce((prev, price) &#x3D;&gt; prev + price);</span><br><span class="line">      return sum</span><br><span class="line">     &#125;,</span><br><span class="line">     </span><br><span class="line">     &#x2F;&#x2F; 删除购物车中的商品</span><br><span class="line">     deleteCart(index) &#123;</span><br><span class="line">      this.cartList.splice(index, 1)</span><br><span class="line">     &#125;,</span><br><span class="line">     </span><br><span class="line">     &#x2F;&#x2F; 点击登陆 显示登陆框</span><br><span class="line">     showLogin()&#123;</span><br><span class="line">      this.isShow &#x3D; true;</span><br><span class="line">     &#125;,</span><br><span class="line">     </span><br><span class="line">     &#x2F;&#x2F;登陆表单提交的事件</span><br><span class="line">     formSubmit()&#123;</span><br><span class="line">      this.isLogin &#x3D; true;</span><br><span class="line">      this.isShow &#x3D; false;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="这里我界面的CSS没有怎么写-登陆框直接拿了上课讲的例子过来偷懒了-主要是练习之前Vue中的各种指令"><a href="#这里我界面的CSS没有怎么写-登陆框直接拿了上课讲的例子过来偷懒了-主要是练习之前Vue中的各种指令" class="headerlink" title="这里我界面的CSS没有怎么写, 登陆框直接拿了上课讲的例子过来偷懒了,主要是练习之前Vue中的各种指令"></a>这里我界面的CSS没有怎么写, 登陆框直接拿了上课讲的例子过来偷懒了,主要是练习之前Vue中的各种指令</h2><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191230194809.png" alt="20191230194809.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://cn.vuejs.org/images/logo.png&quot; alt=&quot;20191223092306.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://fightlee.fun/categories/web/"/>
    
    
      <category term="vue" scheme="http://fightlee.fun/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Part5·Java语法结构(二)(图文)</title>
    <link href="http://fightlee.fun/07-java.html"/>
    <id>http://fightlee.fun/07-java.html</id>
    <published>2019-12-27T09:03:49.000Z</published>
    <updated>2019-12-29T16:41:05.754Z</updated>
    
    <content type="html"><![CDATA[<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191229220831.png" alt="20191229220831.png" style="zoom:80%;" /><a id="more"></a><h1 id="循环结构-1-While"><a href="#循环结构-1-While" class="headerlink" title="循环结构 1 While"></a>循环结构 1 While</h1><h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><h3 id="语法结构"><a href="#语法结构" class="headerlink" title="语法结构"></a>语法结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*整个语法我们可以这么来理解, 首先看while的翻译 : 当..   那我们就这么讲</span></span><br><span class="line"><span class="comment"> 当 小括号中的表达式的结果为true时,代码进入大括号循环体 开始循环. 直到 布尔表达式的结果为false则跳出.如果布尔表达式的结果永远都为true,那此时循环进入无限循环,也可以称之为死循环,一般我们尽量要避免出现死循环的情况.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">while</span>(布尔表达式)&#123;</span><br><span class="line">    <span class="comment">//当布尔表达式的结果为true时,循环执行大括号中的代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>学习循环我们还是和上节一样举个栗子 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226153157.png" alt="20191226153157.png"></p><h4 id="例-1-在控制台中输出100次-“好好学习-天天向上”"><a href="#例-1-在控制台中输出100次-“好好学习-天天向上”" class="headerlink" title="例 1 : 在控制台中输出100次 “好好学习,天天向上”"></a>例 1 : 在控制台中输出100次 “好好学习,天天向上”</h4><p>代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.定义一个计数器来 记录当前输出到第几次</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//2.开始循环 输出 好好学习,天天向上 ,</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        按照上面我们的理解,我们可以这么写,</span></span><br><span class="line"><span class="comment">        (1)当计数器中记录的数字小于等于100时,我们就开始循环,</span></span><br><span class="line"><span class="comment">        (2)输出 好好学习,天天向上</span></span><br><span class="line"><span class="comment">        (3)循环一次后,计数器中的数字要自增一次,然后自增到101时退出循环,程序结束</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">while</span>(count &lt;= <span class="number">100</span>)&#123;<span class="comment">//(1)</span></span><br><span class="line">            System.out.println(<span class="string">"好好学习,天天向上"</span>);<span class="comment">//(2)</span></span><br><span class="line">            count++;<span class="comment">//(3)----&gt;回到(1)判断</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序结束..."</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">好好学习,天天向上</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span>.</span><br><span class="line">好好学习,天天向上</span><br><span class="line">程序结束</span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结 :"></a>小结 :</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(循环条件)&#123;</span><br><span class="line">    循环操作</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*执行while循环时, 我们先要判断循环条件是否满足,然后再来执行大括号中的循环操作,执行完一次循环后,继续判断循环条件,....*/</span></span><br></pre></td></tr></table></figure><h4 id="例-2-求1-10的和"><a href="#例-2-求1-10的和" class="headerlink" title="例 2 : 求1-10的和"></a>例 2 : 求1-10的和</h4><p>代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析 :</span></span><br><span class="line"><span class="comment">需要求和, 我们先定义和的变量 sum .</span></span><br><span class="line"><span class="comment">   .分析1-10求和的过程 :</span></span><br><span class="line"><span class="comment"> 第一次 和 sum = 0 + 1</span></span><br><span class="line"><span class="comment"> 第二次   sum = 1 + 2</span></span><br><span class="line"><span class="comment"> 第三次   sum = 3 + 3</span></span><br><span class="line"><span class="comment"> 第四次   sum = 6 + 4</span></span><br><span class="line"><span class="comment"> ...</span></span><br><span class="line"><span class="comment"> 第10次  sum = 前一次的sum + 10 </span></span><br><span class="line"><span class="comment">得出结论</span></span><br><span class="line"><span class="comment">循环操作 : 求和 为 sum =  sum + n;</span></span><br><span class="line"><span class="comment">     n 为计数器,用来计算当前累加到第几个数,每次循环 计数器都自增一次</span></span><br><span class="line"><span class="comment">循环条件 : 当 n 的值小于等于10时,进入循环开始循环操作.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo02</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     <span class="comment">//1.定义 和 : sum 和 计数器 : n</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>,n = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//2.判断当前计数器是否小于等于10</span></span><br><span class="line">        <span class="keyword">while</span>(n &lt;= <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="comment">//3.如果count&lt;= 10 执行循环操作</span></span><br><span class="line">            sum += n;<span class="comment">//为 sum = sum + n; 的简写</span></span><br><span class="line">            <span class="comment">//4.每执行一次和的累加 n 自增一次</span></span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.程序结束 输出 sum = 多少?</span></span><br><span class="line">        System.out.println(<span class="string">"sum = "</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sum</span> = <span class="number">55</span></span><br></pre></td></tr></table></figure><h4 id="练习-求-1-10-的偶数和-奇数和"><a href="#练习-求-1-10-的偶数和-奇数和" class="headerlink" title="练习 : 求 1 - 10 的偶数和,奇数和"></a>练习 : 求 1 - 10 的偶数和,奇数和</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">小提示 :</span><br><span class="line">偶数和 : 累加的是能被<span class="number">2</span>整除的数</span><br><span class="line">奇数和 : 除<span class="number">2</span>余<span class="number">1</span>的数才能累加</span><br><span class="line">或者修改计数器的增量也可以.</span><br></pre></td></tr></table></figure><h2 id="do…while循环"><a href="#do…while循环" class="headerlink" title="do…while循环"></a>do…while循环</h2><h3 id="语法结构-1"><a href="#语法结构-1" class="headerlink" title="语法结构"></a>语法结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="comment">//当布尔表达式的结果为true时,循环执行大括号中的代码</span></span><br><span class="line">&#125;<span class="keyword">while</span>(布尔表达式)</span><br></pre></td></tr></table></figure><h3 id="do…while循环和while循环的区别"><a href="#do…while循环和while循环的区别" class="headerlink" title="do…while循环和while循环的区别"></a>do…while循环和while循环的区别</h3><p>俩者本质上都是循环结构,唯一区别就是执行顺序的问题 :</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>循环 : 先判断循环条件 , 再执行循环语句</span><br><span class="line"><span class="keyword">do</span>...<span class="keyword">while</span>循环 : 先执行循环语句 , 再判断循环条件.</span><br></pre></td></tr></table></figure><h4 id="例-3"><a href="#例-3" class="headerlink" title="例 3"></a>例 3</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo03</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     <span class="comment">//while循环</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &gt; <span class="number">2</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"while 循环 执行...."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//do...while循环</span></span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"do...while 循环 执行...."</span>);</span><br><span class="line">        &#125;<span class="keyword">while</span>(i &gt; <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span><span class="built_in">..</span>.<span class="keyword">while</span> 循环 执行<span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><p>从这里可以看出 , i = 1, i &gt; 2的结果为false 则,while循环体中的循环操作不执行,但是 do语句中的循环操作执行并且只执行一次,执行一次后 i &gt; 2结果为false 退出循环正好验证之前的区别.</p><p>注 : do..while 基本见不到,以while为主</p><h1 id="循环结构-2-For"><a href="#循环结构-2-For" class="headerlink" title="循环结构 2 For"></a>循环结构 2 For</h1><h3 id="语法结构-2"><a href="#语法结构-2" class="headerlink" title="语法结构"></a>语法结构</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span><span class="params">(定义计数器;循环条件;修改计数器)</span></span>&#123;</span><br><span class="line"> 循环操作</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="回顾-例-1"><a href="#回顾-例-1" class="headerlink" title="回顾 例 1 :"></a>回顾 例 1 :</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo04</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">/*例1 的代码 使用 while 循环</span></span><br><span class="line"><span class="comment">        int count = 1;</span></span><br><span class="line"><span class="comment">        while(count &lt;= 100)&#123;</span></span><br><span class="line"><span class="comment">            System.out.println("好好学习,天天向上");</span></span><br><span class="line"><span class="comment">            count++;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        System.out.println("程序结束...")</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*使用for循环*/</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> count = <span class="number">1</span>;count &lt;= <span class="number">100</span>;count++)&#123;</span><br><span class="line">           System.out.println(<span class="string">"好好学习,天天向上"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序结束..."</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">好好学习,天天向上</span><br><span class="line">...</span><br><span class="line">好好学习,天天向上</span><br><span class="line">程序结束...</span><br></pre></td></tr></table></figure><p><strong>注意执行顺序即可,先初始化 count , 判断 count 是否 &lt;= 100 再 执行 循环操作,然后 count++</strong></p><h4 id="例-4-求1-100的和"><a href="#例-4-求1-100的和" class="headerlink" title="例 4 :  求1 - 100的和"></a>例 4 :  求1 - 100的和</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo05</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;<span class="comment">//定义总和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> count = <span class="number">1</span>;count &lt;= <span class="number">100</span>;count++)&#123;</span><br><span class="line">            sum += count;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"sum = "</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sum</span> = <span class="number">5050</span></span><br></pre></td></tr></table></figure><p><strong>从上面的学习中发现,while和for循环都是用来执行循环操作,那在实际使用时我们应该怎么去选择哪一种循环?</strong></p><ol><li>for循环一般在循环次数确定的情况时使用.(因为for循环体中一般需要初始化计数器来计算循环次数)</li><li>while循环一般在循环次数不确定,但清楚循环的退出条件时使用.</li></ol><h1 id="break-amp-continue"><a href="#break-amp-continue" class="headerlink" title="break&amp;continue"></a>break&amp;continue</h1><h2 id="break"><a href="#break" class="headerlink" title="break"></a>break</h2><p>break : 其实在学习switch中我们已经认识了关键字 <strong>break</strong>,break,故名思意,起阻断的作用.在循环中使用会打断循环的执行.跳出循环语句.</p><h4 id="例-5-小明和同学做游戏-小明在心中默念一个1-10中间的数字-同学如果猜中则游戏结束-小明受到惩罚-罚做100个俯卧撑-游戏只能猜5次-5次结束-同学受到惩罚-每个同学罚做50个俯卧撑"><a href="#例-5-小明和同学做游戏-小明在心中默念一个1-10中间的数字-同学如果猜中则游戏结束-小明受到惩罚-罚做100个俯卧撑-游戏只能猜5次-5次结束-同学受到惩罚-每个同学罚做50个俯卧撑" class="headerlink" title="例 5 : 小明和同学做游戏,小明在心中默念一个1-10中间的数字,同学如果猜中则游戏结束,小明受到惩罚,罚做100个俯卧撑,游戏只能猜5次,5次结束,同学受到惩罚.每个同学罚做50个俯卧撑"></a>例 5 : 小明和同学做游戏,小明在心中默念一个1-10中间的数字,同学如果猜中则游戏结束,小明受到惩罚,罚做100个俯卧撑,游戏只能猜5次,5次结束,同学受到惩罚.每个同学罚做50个俯卧撑</h4><p>代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo06</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.定义游戏结果(结果要么 猜中,要么未猜中 可以定义为 布尔类型)</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;<span class="comment">//初始化 为 未猜中</span></span><br><span class="line">        <span class="comment">//2.定义一个数字来作为小明心中的数字,此处我们使用一个1-10的随机值,不懂的暂时可以先直接照着抄</span></span><br><span class="line">        <span class="comment">//Math.random() 得到一个 0-1的随机小数,包含0,不包含1</span></span><br><span class="line">        <span class="keyword">int</span> num = (<span class="keyword">int</span>) (Math.random() * <span class="number">10</span> + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//3.(作弊)输出小明心中的数字,不作弊怕你们猜不到,哈哈哈哈哈</span></span><br><span class="line">        System.out.println(<span class="string">"小明心中的数字 : "</span> + num);</span><br><span class="line">        <span class="comment">//4.游戏只能玩5次,确定循环次数 使用for循环,并创建扫描仪(扫描仪的创建不要放在循环体内,想想,我们要打印5份卷子,需要5个打印机嘛?)</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);<span class="comment">//创建扫描仪</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">4</span>; i &gt;= <span class="number">0</span>; i--)&#123;<span class="comment">//注意这里是从4开始的哦,每循环一次,游戏次数-1</span></span><br><span class="line">            <span class="comment">//5.提示同学开始猜测 :</span></span><br><span class="line">            System.out.print(<span class="string">"请输入小明心中的数字 : "</span>);</span><br><span class="line">            <span class="comment">//6.得到同学输入的数字</span></span><br><span class="line">            <span class="keyword">int</span> number = scanner.nextInt();</span><br><span class="line">            <span class="comment">//7.判断是否为小明心中的数字,如果猜中,则跳出循环,不需要再次猜测,游戏结果为 猜中 true</span></span><br><span class="line">            <span class="keyword">if</span>(number == num)&#123;</span><br><span class="line">                <span class="comment">//猜中</span></span><br><span class="line">                flag = <span class="keyword">true</span>;<span class="comment">//重新定义游戏结果</span></span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//结束循环</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//没猜中</span></span><br><span class="line">                System.out.println(<span class="string">"很遗憾,您没有猜中,您还有"</span> + i + <span class="string">"次机会"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断游戏结果,</span></span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="comment">//如果游戏结果为true</span></span><br><span class="line">            System.out.println(<span class="string">"恭喜您猜中了!小明受到惩罚,做100个俯卧撑"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="comment">//如果游戏结果为false</span></span><br><span class="line">            System.out.println(<span class="string">"太惨了,同学受到惩罚,每个人做50个俯卧撑"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">小明心中的数字 : <span class="number">9</span></span><br><span class="line">请输入小明心中的数字 : <span class="number">3</span></span><br><span class="line">很遗憾,您没有猜中,您还有<span class="number">4</span>次机会</span><br><span class="line">请输入小明心中的数字 : <span class="number">2</span></span><br><span class="line">很遗憾,您没有猜中,您还有<span class="number">3</span>次机会</span><br><span class="line">请输入小明心中的数字 : <span class="number">1</span></span><br><span class="line">很遗憾,您没有猜中,您还有<span class="number">2</span>次机会</span><br><span class="line">请输入小明心中的数字 : <span class="number">8</span></span><br><span class="line">很遗憾,您没有猜中,您还有<span class="number">1</span>次机会</span><br><span class="line">请输入小明心中的数字 : <span class="number">9</span></span><br><span class="line">恭喜您猜中了!小明受到惩罚,做<span class="number">100</span>个俯卧撑</span><br></pre></td></tr></table></figure><h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h2><p>continue,故名思意,继续, 准确的意思为 中止当前循环操作,继续下一次循环</p><h4 id="例-6-1-10-的奇数和"><a href="#例-6-1-10-的奇数和" class="headerlink" title="例 6 : 1 - 10 的奇数和"></a>例 6 : 1 - 10 的奇数和</h4><p>(不知道之前的while的练习大家有没有做出来?)</p><p>代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo07</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;<span class="comment">//定义和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"sum = "</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sum</span> = <span class="number">25</span></span><br></pre></td></tr></table></figure><p>分析 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191229235239.png" alt="20191229235239.png"></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191229235248.png" alt="20191229235248.png"></p><h1 id="双重循环"><a href="#双重循环" class="headerlink" title="双重循环"></a>双重循环</h1><h3 id="语法结构-3"><a href="#语法结构-3" class="headerlink" title="语法结构"></a>语法结构</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span><span class="comment">()</span>&#123;         for<span class="comment">()</span>&#123;</span><br><span class="line"> <span class="keyword">while</span><span class="comment">()</span>&#123;         for<span class="comment">()</span>&#123;</span><br><span class="line">            </span><br><span class="line"> &#125;           &#125;</span><br><span class="line">&#125;           &#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span><span class="comment">()</span>&#123;         for<span class="comment">()</span>&#123;</span><br><span class="line"> for<span class="comment">()</span>&#123;          <span class="keyword">while</span><span class="comment">()</span>&#123;</span><br><span class="line">            </span><br><span class="line"> &#125;           &#125;</span><br><span class="line">&#125;           &#125;</span><br></pre></td></tr></table></figure><p><strong>注:结构嵌套时,不管是if嵌套if还是 while嵌套if或者 while嵌套for 等等 注意 结构的完整嵌套 即可.</strong></p><h4 id="例-7-打印5-6的矩形"><a href="#例-7-打印5-6的矩形" class="headerlink" title="例 7 : 打印5*6的矩形"></a>例 7 : 打印5*6的矩形</h4><p>代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo08</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">5</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">6</span>;j++)&#123;</span><br><span class="line">              System.out.print(<span class="string">"*"</span>);<span class="comment">//输出 * 注意不能换行</span></span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println(<span class="string">""</span>);<span class="comment">//输出换行</span></span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*****<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>****<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>****<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>****<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>****<span class="strong">*</span></span><br></pre></td></tr></table></figure><p>分析 :</p><ol><li>外层for循环 用来控制矩形的行数 <strong>int i = 1;i &lt;=5 5行</strong>..</li><li>内层for循环 用来控制矩形的列数 <strong>int j = 1; j &lt;= 6 6列</strong></li><li>内层for循环 每输出一列不能换行,内层循环输出完一行后,才换行</li><li><strong>总结</strong> : 外层循环执行一次,内层循环全部执行一次.</li></ol><h4 id="例-8-打印6行的三角形"><a href="#例-8-打印6行的三角形" class="headerlink" title="例 8 : 打印6行的三角形"></a>例 8 : 打印6行的三角形</h4><p>代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo09</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">6</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i;j++)&#123;</span><br><span class="line">              System.out.print(<span class="string">"*"</span>);<span class="comment">//输出 * 注意不能换行</span></span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println(<span class="string">""</span>);<span class="comment">//输出换行</span></span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*</span></span><br><span class="line"><span class="strong">*</span><span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>*<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>**<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>***<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>****<span class="strong">*</span></span><br></pre></td></tr></table></figure><p>分析 : 和上例一样,外层循环控制行数,内层循环控制列数.</p><h4 id="练习-以下图形"><a href="#练习-以下图形" class="headerlink" title="练习 以下图形 :"></a>练习 以下图形 :</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*****<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>***<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>**<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span>*<span class="strong">*</span></span><br><span class="line"><span class="strong">*</span><span class="strong">*</span></span><br><span class="line"><span class="strong">*</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">     *</span></span><br><span class="line"><span class="code">    ***</span></span><br><span class="line">   <span class="strong">*****</span></span><br><span class="line">  <span class="strong">*****</span>**</span><br><span class="line"> <span class="strong">*****</span><span class="emphasis">***</span>*</span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span>*</span><br></pre></td></tr></table></figure><h4 id="例-9-99乘法表"><a href="#例-9-99乘法表" class="headerlink" title="例 9 : 99乘法表"></a>例 9 : 99乘法表</h4><p>代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo10</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">    System.out.print(j + <span class="string">" * "</span> + i + <span class="string">" = "</span> + i*j + <span class="string">"\t"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   System.out.println();</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">2</span> = <span class="number">2</span> <span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">3</span> = <span class="number">3</span> <span class="number">2</span> * <span class="number">3</span> = <span class="number">6</span> <span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">4</span> = <span class="number">4</span> <span class="number">2</span> * <span class="number">4</span> = <span class="number">8</span> <span class="number">3</span> * <span class="number">4</span> = <span class="number">12</span> <span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">5</span> = <span class="number">5</span> <span class="number">2</span> * <span class="number">5</span> = <span class="number">10</span> <span class="number">3</span> * <span class="number">5</span> = <span class="number">15</span> <span class="number">4</span> * <span class="number">5</span> = <span class="number">20</span> <span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">6</span> = <span class="number">6</span> <span class="number">2</span> * <span class="number">6</span> = <span class="number">12</span> <span class="number">3</span> * <span class="number">6</span> = <span class="number">18</span> <span class="number">4</span> * <span class="number">6</span> = <span class="number">24</span> <span class="number">5</span> * <span class="number">6</span> = <span class="number">30</span> <span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">7</span> = <span class="number">7</span> <span class="number">2</span> * <span class="number">7</span> = <span class="number">14</span> <span class="number">3</span> * <span class="number">7</span> = <span class="number">21</span> <span class="number">4</span> * <span class="number">7</span> = <span class="number">28</span> <span class="number">5</span> * <span class="number">7</span> = <span class="number">35</span> <span class="number">6</span> * <span class="number">7</span> = <span class="number">42</span> <span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">8</span> = <span class="number">8</span> <span class="number">2</span> * <span class="number">8</span> = <span class="number">16</span> <span class="number">3</span> * <span class="number">8</span> = <span class="number">24</span> <span class="number">4</span> * <span class="number">8</span> = <span class="number">32</span> <span class="number">5</span> * <span class="number">8</span> = <span class="number">40</span> <span class="number">6</span> * <span class="number">8</span> = <span class="number">48</span> <span class="number">7</span> * <span class="number">8</span> = <span class="number">56</span> <span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span> </span><br><span class="line"><span class="number">1</span> * <span class="number">9</span> = <span class="number">9</span> <span class="number">2</span> * <span class="number">9</span> = <span class="number">18</span> <span class="number">3</span> * <span class="number">9</span> = <span class="number">27</span> <span class="number">4</span> * <span class="number">9</span> = <span class="number">36</span> <span class="number">5</span> * <span class="number">9</span> = <span class="number">45</span> <span class="number">6</span> * <span class="number">9</span> = <span class="number">54</span> <span class="number">7</span> * <span class="number">9</span> = <span class="number">63</span> <span class="number">8</span> * <span class="number">9</span> = <span class="number">72</span> <span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>while循环(<strong>重点,重点,重点</strong>)</li><li>do…while循环(掌握)</li><li>for循环(<strong>重点,重点,重点</strong>)</li><li>break(<strong>重点,重点,重点</strong>),continue</li><li>双重循环(<strong>重点,重点,重点,但是使用场景基本不会是让咱们去做什么三角形和矩形和九九乘法表..理解使用</strong>)</li></ol><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191230001906.png" alt="20191230001906.png" style="zoom: 67%;" />]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191229220831.png&quot; alt=&quot;20191229220831.png&quot; style=&quot;zoom:80%;&quot; /&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Part4·Java语法结构(一)(图文)</title>
    <link href="http://fightlee.fun/06-java.html"/>
    <id>http://fightlee.fun/06-java.html</id>
    <published>2019-12-27T06:10:36.000Z</published>
    <updated>2019-12-29T14:14:26.005Z</updated>
    
    <content type="html"><![CDATA[<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227141614.png" alt="20191227141614.png" style="zoom: 80%;" /><a id="more"></a><h1 id="程序结构设计"><a href="#程序结构设计" class="headerlink" title="程序结构设计"></a>程序结构设计</h1><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226153157.png" alt="20191226153157.png"></p><p>打个比方我们现在要设计一款游戏程序,在游戏中玩家可以控制人物来在程序中有打怪,练级,强化装备等任务,那此时玩家正在执行的任务是强化装备,那在强化装备的时候,该装备是有几率损坏的,也就是说<strong>如果强化成功,则武器星星+1,否则强化失败,武器损坏.</strong>,在游戏中类似的操作有很多,那我们在java程序中如何用语言来描述这一些过程呢?那我们慢慢往下看把.</p><p><span style="color:red; font-weight:bolder;">这里重点强调一下,我们编写java程序其实就是使用Java的语言来对实际的例子进行描述而已.关键点就是我们要知道如何去描述!!!</span></p><h1 id="选择结构-1-—-if"><a href="#选择结构-1-—-if" class="headerlink" title="选择结构 1 — if"></a>选择结构 1 — if</h1><h2 id="1-if"><a href="#1-if" class="headerlink" title="1. if"></a>1. if</h2><p>if : 如果 的意思. </p><h3 id="语法结构"><a href="#语法结构" class="headerlink" title="语法结构 :"></a>语法结构 :</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式)&#123;</span><br><span class="line">    <span class="comment">//代码块,当布尔表达式的结果为true时,才执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="例1-小明正在强化装备-如果装备幸运值大于10-则强化成功"><a href="#例1-小明正在强化装备-如果装备幸运值大于10-则强化成功" class="headerlink" title="例1 : 小明正在强化装备,如果装备幸运值大于10,则强化成功."></a>例1 : 小明正在强化装备,如果装备幸运值大于10,则强化成功.</h4><p>根据题目的描述,我们直接来分析代码怎么写 : </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo01</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.我们先用一条输出语句来输出 当前小明正在强化装备</span></span><br><span class="line">        System.out.println(<span class="string">"小明正在强化装备..."</span>);</span><br><span class="line">        <span class="comment">//2.然后声明变量来保存当前装备的幸运值</span></span><br><span class="line">        <span class="keyword">int</span> lucky = <span class="number">30</span>;<span class="comment">//假设当前武器幸运值为30</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        按照分析 : 得出结构</span></span><br><span class="line"><span class="comment">        如果(幸运值 大于 10)&#123;</span></span><br><span class="line"><span class="comment">        装备强化成功.因为只有当lucky的值大于10时,布尔表达式的结果为true,才会执行此语句.</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">if</span>(lucky &gt; <span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"装备强化成功...装备锻造等级+1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"装备强化完成..."</span>);    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 : </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">装备强化成功<span class="built_in">..</span><span class="built_in">..</span>装备锻造等级+1</span><br><span class="line">装备强化完成<span class="built_in">..</span>.</span><br></pre></td></tr></table></figure><p><strong>但是如果我们修改变量 lucky = 5,</strong></p><p>输出结果 : </p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">装备强化完成...</span><br></pre></td></tr></table></figure><p><strong>这里也告诉我们,当if语句中的布尔表达式的结果是一个false的话,if结构中的语句不会执行,但是不影响程序继续往下运行…,那如果我们想要输出幸运值如果没有大于10,装备就损坏的语句应该怎么做了?接着往下看…</strong></p><h2 id="2-if-…-else"><a href="#2-if-…-else" class="headerlink" title="2. if … else"></a>2. if … else</h2><p>if : 如果. else: 否则</p><h3 id="语法结构-1"><a href="#语法结构-1" class="headerlink" title="语法结构 :"></a>语法结构 :</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">(布尔表达式)</span></span>&#123;</span><br><span class="line"><span class="comment">// 当布尔表达式结果为true时执行此 大括号中的内容</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 当布尔表达式结果为false时执行此 大括号中的内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="例2-小明正在强化装备-如果装备幸运值大于10-则强化成功-否则就强化失败"><a href="#例2-小明正在强化装备-如果装备幸运值大于10-则强化成功-否则就强化失败" class="headerlink" title="例2 : 小明正在强化装备,如果装备幸运值大于10,则强化成功,否则就强化失败"></a>例2 : 小明正在强化装备,如果装备幸运值大于10,则强化成功,否则就强化失败</h4><p>直接上代码 : </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo02</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.输出 当前小明正在强化装备</span></span><br><span class="line">        System.out.println(<span class="string">"小明正在强化装备..."</span>);</span><br><span class="line">        <span class="comment">//2.声明变量来保存当前装备的幸运值</span></span><br><span class="line">        <span class="keyword">int</span> lucky = <span class="number">30</span>;<span class="comment">//假设当前武器幸运值为30</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        分析结构 : </span></span><br><span class="line"><span class="comment">        如果(幸运值 大于 10)&#123;</span></span><br><span class="line"><span class="comment">          输出强化成功</span></span><br><span class="line"><span class="comment">        &#125;否则&#123;</span></span><br><span class="line"><span class="comment">          输出强化失败</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">if</span>(lucky &gt; <span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"装备强化成功...装备锻造等级+1"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"装备强化失败...装备损坏"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"装备强化完成..."</span>);    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 : </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">装备强化成功<span class="string">...</span>装备锻造等级+1</span><br><span class="line">装备强化完成<span class="string">...</span></span><br></pre></td></tr></table></figure><p><strong>现在我们修改变量 lucky = 5,</strong></p><p>输出结果 : </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">装备强化失败<span class="string">...</span>装备损坏</span><br><span class="line">装备强化完成<span class="string">...</span></span><br></pre></td></tr></table></figure><p><strong>这里可以看出 if … else … 语句可以用来对条件进行双重判断,当条件为true时,执行if大括号中的代码,为false时,执行else大括号中的代码</strong></p><h2 id="3-if-…-else-if-…-else"><a href="#3-if-…-else-if-…-else" class="headerlink" title="3. if … else if … else"></a>3. if … else if … else</h2><p>if … else if … else  如果… 否则 如果…. 否则…</p><h3 id="语法结构-2"><a href="#语法结构-2" class="headerlink" title="语法结构 :"></a>语法结构 :</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">//布尔表达式1 结果为 true 则执行</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式<span class="number">2</span>)&#123;</span><br><span class="line"><span class="comment">//布尔表达式2 结果为 true 则执行</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式<span class="number">3</span>)&#123;</span><br><span class="line"><span class="comment">//布尔表达式3 结果为 true 则执行</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//当所有条件都不满足 则执行</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><p><strong>从结构上可以看出 , if else if 结构可以对多个条件进行判断, 比如我们再次修改之前例子</strong></p><h4 id="例3-小明正在强化装备-如果装备幸运值大于20-则强化成功-如果幸运值大于10-则强化失败-装备未发生任何改变-否则幸运值在10以下-装备强化失败并损坏"><a href="#例3-小明正在强化装备-如果装备幸运值大于20-则强化成功-如果幸运值大于10-则强化失败-装备未发生任何改变-否则幸运值在10以下-装备强化失败并损坏" class="headerlink" title="例3 : 小明正在强化装备,如果装备幸运值大于20,则强化成功,如果幸运值大于10,则强化失败,装备未发生任何改变,否则幸运值在10以下,装备强化失败并损坏."></a>例3 : 小明正在强化装备,如果装备幸运值大于20,则强化成功,如果幸运值大于10,则强化失败,装备未发生任何改变,否则幸运值在10以下,装备强化失败并损坏.</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo03</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.输出 当前小明正在强化装备</span></span><br><span class="line">        System.out.println(<span class="string">"小明正在强化装备..."</span>);</span><br><span class="line">        <span class="comment">//2.声明变量来保存当前装备的幸运值</span></span><br><span class="line">        <span class="keyword">int</span> lucky = <span class="number">30</span>;<span class="comment">//假设当前武器幸运值为30</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        分析结构 : </span></span><br><span class="line"><span class="comment">        如果(幸运值 大于 20)&#123;</span></span><br><span class="line"><span class="comment">          输出强化成功</span></span><br><span class="line"><span class="comment">        &#125;否则 如果(幸运值 大于 10)&#123;</span></span><br><span class="line"><span class="comment">          输出强化失败,装备未发生改变</span></span><br><span class="line"><span class="comment">        &#125;否则&#123;</span></span><br><span class="line"><span class="comment">          强化失败.</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">if</span>(lucky &gt; <span class="number">20</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"装备强化成功...装备锻造等级+1"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(lucky &gt; <span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"装备强化失败...装备未发生改变"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"装备强化失败...装备损坏"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"装备强化完成..."</span>);    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 : </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">装备强化成功<span class="string">...</span>装备锻造等级+1</span><br><span class="line">装备强化完成<span class="string">...</span></span><br></pre></td></tr></table></figure><p><strong>如果修改变量lucky = 15</strong></p><p>输出结果 : </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">装备强化失败<span class="string">...</span>装备未发生改变</span><br><span class="line">装备强化完成<span class="string">...</span></span><br></pre></td></tr></table></figure><p><strong>如果修改变量lucky = 5</strong></p><p>输出结果 : </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">装备强化失败<span class="string">...</span>装备损坏</span><br><span class="line">装备强化完成<span class="string">...</span></span><br></pre></td></tr></table></figure><p><strong>OK ! 从这里我们可以看出,if else if else 可以对多种条件进行判断..在实际操作中,根据当前需求来选择具体使用哪种选择结构,并且注意 if else if else 中的 else 不一定要写哦! 但是一般推荐要写!!!</strong></p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227150716.png" alt="20191227150716.png" style="zoom:50%;" /><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/xiapo.gif" alt=""></p><h1 id="选择结构-2-—-switch"><a href="#选择结构-2-—-switch" class="headerlink" title="选择结构 2 — switch"></a>选择结构 2 — switch</h1><h2 id="switch-…-case"><a href="#switch-…-case" class="headerlink" title="switch … case"></a>switch … case</h2><p>switch : 开关,选择</p><p>switch 语句 和 if 语句 都是 选择结构 , 其实意思都很相似 , 我们来看下 switch 的 语法 : </p><h3 id="语法结构-3"><a href="#语法结构-3" class="headerlink" title="语法结构"></a>语法结构</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(数据)&#123;</span><br><span class="line"><span class="keyword">case</span> 数据<span class="number">1</span> : </span><br><span class="line"><span class="comment">//当数据 = 数据1时, 则执行</span></span><br><span class="line">[<span class="keyword">break</span>;]</span><br><span class="line"><span class="keyword">case</span> 数据<span class="number">2</span> : </span><br><span class="line"><span class="comment">//当数据 = 数据2时, 则执行</span></span><br><span class="line">[<span class="keyword">break</span>;]</span><br><span class="line">...</span><br><span class="line">[</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment">//当找不到任何匹配的数据时,则执行</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再来个例子理解一下.</p><h4 id="例4-分析-小明游戏里干不过RMB玩家-于是选择充值-现在有3种充值方式-输入数字1-使用微信支付-2-支付宝支付-3-使用银行卡支付-如果小明输入其他数字-则支付失败"><a href="#例4-分析-小明游戏里干不过RMB玩家-于是选择充值-现在有3种充值方式-输入数字1-使用微信支付-2-支付宝支付-3-使用银行卡支付-如果小明输入其他数字-则支付失败" class="headerlink" title="例4 分析 : 小明游戏里干不过RMB玩家,于是选择充值,现在有3种充值方式,输入数字1.使用微信支付, 2.支付宝支付, 3.使用银行卡支付. 如果小明输入其他数字,则支付失败."></a>例4 分析 : 小明游戏里干不过RMB玩家,于是选择充值,现在有3种充值方式,输入数字1.使用微信支付, 2.支付宝支付, 3.使用银行卡支付. 如果小明输入其他数字,则支付失败.</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析 :  </span></span><br><span class="line"><span class="comment">首先要获取小明输入的数字,根据输入的数字来进行选择</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">选择(输入的数字)&#123;</span></span><br><span class="line"><span class="comment">数字是 1 : </span></span><br><span class="line"><span class="comment">输出 : 使用微信支付;</span></span><br><span class="line"><span class="comment">break;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数字是 2 : </span></span><br><span class="line"><span class="comment">输出 : 使用支付宝支付;</span></span><br><span class="line"><span class="comment">break;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数字是 3 : </span></span><br><span class="line"><span class="comment">输出 : 使用银行卡支付;</span></span><br><span class="line"><span class="comment">break; </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果没有匹配任何数字 : </span></span><br><span class="line"><span class="comment">输出 : 没有对应选项;</span></span><br><span class="line"><span class="comment">break;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>上文的分析中,有一个关键字  : 输入 , 我们前文中只学习了输出,那现在我简单的介绍一下如何在控制台中进行字符或者数字的输入.</strong></p><h3 id="输入-Scanner"><a href="#输入-Scanner" class="headerlink" title="输入 : Scanner"></a>输入 : Scanner</h3><p>Scanner : 扫描仪. 故名思意,我们把此物就理解为打印机上的扫描机器.当我们在控制台输入数据时,扫描仪帮我们对控制台进行扫描,然后获取我们输入的结果.看图</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227153513.png" alt="20191227153513.png"></p><h4 id="例5-获取用户输入的数据"><a href="#例5-获取用户输入的数据" class="headerlink" title="例5 : 获取用户输入的数据."></a>例5 : 获取用户输入的数据.</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">//2.从Java中导入Scanner</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo04</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//1.创建Scanner 扫描仪 使用Scanner需要先导入Scanner</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//3.获取用户输入的数据 , 并输出</span></span><br><span class="line">        System.out.println(<span class="string">"请输入用户名 : "</span>);</span><br><span class="line">        String name = scanner.next();<span class="comment">//点击扫描仪中的next按钮获取字符串数据</span></span><br><span class="line">        System.out.println(<span class="string">"用户名 : "</span> + name);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"请输入存款金额 : "</span>);</span><br><span class="line">        <span class="keyword">int</span> money = scanner.nextInt();<span class="comment">//点击扫描仪中的nextInt按钮获取int数据</span></span><br><span class="line">        System.out.println(<span class="string">"存款金额 : "</span> + money);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我用gif图来带大家怎么操作 : </p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/java11.gif" alt=""></p><p><strong>学会使用 Scanner 之后,我们再来看怎么完成例4</strong> : </p><h4 id="例4-代码"><a href="#例4-代码" class="headerlink" title="例4 代码 :"></a>例4 代码 :</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">//2.从Java中导入Scanner</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo05</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//1.创建Scanner 扫描仪</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//3.提示小明充值的方式</span></span><br><span class="line">        System.out.println(<span class="string">"选择您的充值方式 : "</span>);</span><br><span class="line">        System.out.println(<span class="string">"1. 微信支付"</span>);</span><br><span class="line">        System.out.println(<span class="string">"2. 支付宝支付"</span>);</span><br><span class="line">        System.out.println(<span class="string">"3. 银行卡支付"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//4.得到小明输入的结果,我们这里得到数字</span></span><br><span class="line">        <span class="keyword">int</span> check = scanner.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//5.根据小明输入的结果进行选择 </span></span><br><span class="line">        <span class="keyword">switch</span>(check)&#123;</span><br><span class="line">            <span class="comment">//如果 数字 为 1</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="comment">//输出 正在使用微信支付</span></span><br><span class="line">                System.out.println(<span class="string">"正在使用微信支付..."</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="comment">//输出 正在使用支付宝支付</span></span><br><span class="line">                System.out.println(<span class="string">"正在使用支付宝支付..."</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="comment">//输出 正在使用银行卡支付</span></span><br><span class="line">                System.out.println(<span class="string">"正在使用银行卡支付..."</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"没有对应选项...支付失败"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//5.程序结束</span></span><br><span class="line">        System.out.println(<span class="string">"程序结束..."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 : </p><p>当我们再控制台输入 1 : 则输出 微信支付…</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">选择您的充值方式 : </span><br><span class="line"><span class="number">1.</span> 微信支付</span><br><span class="line"><span class="number">2.</span> 支付宝支付</span><br><span class="line"><span class="number">3.</span> 银行卡支付</span><br><span class="line"><span class="number">1</span></span><br><span class="line">正在使用微信支付...</span><br><span class="line">程序结束...</span><br></pre></td></tr></table></figure><p>对应的输入 4 : 则输出 输入错误…</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">选择您的充值方式 : </span><br><span class="line"><span class="number">1.</span> 微信支付</span><br><span class="line"><span class="number">2.</span> 支付宝支付</span><br><span class="line"><span class="number">3.</span> 银行卡支付</span><br><span class="line"><span class="number">4</span></span><br><span class="line">没有对应选项...支付失败</span><br><span class="line">程序结束...</span><br></pre></td></tr></table></figure><p>从这里也能看出 , 不管输入的结果是什么,也不会影响程序继续向下运行输出 程序结束…</p><h3 id="Scanner和Switch注意项"><a href="#Scanner和Switch注意项" class="headerlink" title="Scanner和Switch注意项"></a>Scanner和Switch注意项</h3><h4 id="Scanner-输入时-如果输入的是字母-但是我们用扫描仪去接收数字时-程序就会出现错误-此时我们可以用-if-结构对其进行进一步完善-保证程序的健壮性"><a href="#Scanner-输入时-如果输入的是字母-但是我们用扫描仪去接收数字时-程序就会出现错误-此时我们可以用-if-结构对其进行进一步完善-保证程序的健壮性" class="headerlink" title="Scanner 输入时 如果输入的是字母,但是我们用扫描仪去接收数字时,程序就会出现错误.此时我们可以用 if 结构对其进行进一步完善,保证程序的健壮性"></a>Scanner 输入时 如果输入的是字母,但是我们用扫描仪去接收数字时,程序就会出现错误.此时我们可以用 if 结构对其进行进一步完善,保证程序的<span style="color:red">健壮性</span></h4><p><strong>出错图</strong> : </p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227161208.png" alt="20191227161208.png"></p><p><strong>修改后代码</strong> : </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">//2.从Java中导入Scanner</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo05</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//1.创建Scanner 扫描仪</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//3.提示小明充值的方式</span></span><br><span class="line">        System.out.println(<span class="string">"选择您的充值方式 : "</span>);</span><br><span class="line">        System.out.println(<span class="string">"1. 微信支付"</span>);</span><br><span class="line">        System.out.println(<span class="string">"2. 支付宝支付"</span>);</span><br><span class="line">        System.out.println(<span class="string">"3. 银行卡支付"</span>);</span><br><span class="line">       </span><br><span class="line">        <span class="comment">//4.判断小明是否输入的是数字 使用 hasNextInt()来判断,使用已学的if来完善</span></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            <span class="comment">//如果扫描仪中有数字,正常执行</span></span><br><span class="line">            <span class="comment">//5.得到小明输入的结果,我们这里得到数字</span></span><br><span class="line">        <span class="keyword">int</span> check = scanner.nextInt();</span><br><span class="line">        <span class="comment">//6.根据小明输入的结果进行选择 </span></span><br><span class="line">        <span class="keyword">switch</span>(check)&#123;</span><br><span class="line">            <span class="comment">//如果 数字 为 1</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="comment">//输出 正在使用微信支付</span></span><br><span class="line">                System.out.println(<span class="string">"正在使用微信支付..."</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="comment">//输出 正在使用支付宝支付</span></span><br><span class="line">                System.out.println(<span class="string">"正在使用支付宝支付..."</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">           <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="comment">//输出 正在使用银行卡支付</span></span><br><span class="line">                System.out.println(<span class="string">"正在使用银行卡支付..."</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"没有对应选项...支付失败"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//否则输出 输入格式有误..支付失败</span></span><br><span class="line">            System.out.println(<span class="string">"输入格式有误...支付失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.程序结束</span></span><br><span class="line">        System.out.println(<span class="string">"程序结束..."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果图 :</strong><br>当我们输入 字母 a</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请输入数字 : </span><br><span class="line">a</span><br><span class="line">输入格式有误<span class="string">...</span>支付失败</span><br><span class="line">程序结束<span class="string">...</span></span><br></pre></td></tr></table></figure><h4 id="Switch在选择数据时-数据的类型-整型-char-枚举和String-并且要注意是等值的判断-而不是区间性的判断-这也是和if的区别-if可以对一个连续的空间进行判断-而switch只能做等值判断"><a href="#Switch在选择数据时-数据的类型-整型-char-枚举和String-并且要注意是等值的判断-而不是区间性的判断-这也是和if的区别-if可以对一个连续的空间进行判断-而switch只能做等值判断" class="headerlink" title="Switch在选择数据时,数据的类型(整型,char,枚举和String),并且要注意是等值的判断,而不是区间性的判断,这也是和if的区别.if可以对一个连续的空间进行判断,而switch只能做等值判断."></a>Switch在选择数据时,数据的类型(整型,char,枚举和String),并且要注意是等值的判断,而不是区间性的判断,这也是和if的区别.if可以对一个连续的空间进行判断,而switch只能做等值判断.</h4><p>如 : </p><p><strong>if(a &gt; 20) else if ( a &gt; 10) else if ( a &gt; 0 ) else  选择的范围为 :</strong></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227162712.png" alt="20191227162712.png"> </p><p>*<em>switch (numer) case 1 : case 2 : case 3的范围为 : *</em> </p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227163008.png" alt="20191227163008.png"></p><h2 id="switch-…-case-中-break的作用"><a href="#switch-…-case-中-break的作用" class="headerlink" title="switch … case 中 break的作用"></a>switch … case 中 break的作用</h2><p>switch 中 的break关键字 起一个拦截跳出语句的作用, 如果case语句中 没有break,那程序就会继续往下运行,直到碰到break;才会跳出跳出switch语句 . 我们用一个例子来看下.</p><h4 id="例-5-看代码-输出对应结果"><a href="#例-5-看代码-输出对应结果" class="headerlink" title="例 5 : 看代码 , 输出对应结果"></a>例 5 : 看代码 , 输出对应结果</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo06</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//选择 a 的值 输出对应结果</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">switch</span>(a)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">               System.out.println(<span class="string">"富强"</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">               System.out.println(<span class="string">"民主"</span>);</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">               System.out.println(<span class="string">"爱国"</span>);</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"程序结束"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当 a = 1 时,输出结果 : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">富强</span><br><span class="line">民主</span><br><span class="line">程序结束</span><br></pre></td></tr></table></figure><p>修改 a = 2 ,输出结果 : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">民主</span><br><span class="line">程序结束</span><br></pre></td></tr></table></figure><p>修改 a = 3 ,输出结果 : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爱国</span><br><span class="line">程序结束</span><br></pre></td></tr></table></figure><p><strong>从这里我们可以看出, 因为case 1 中没有 break, 所以在执行完 System.out.println()后 会继续 case 2 执行 , 碰到break 结束语句, 输出 程序结束</strong></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>选择结构 : </p><ol><li><p>if 的使用    (<strong>重点</strong>,<strong>重点</strong>,<strong>重点</strong>)</p></li><li><p>switch 的使用  (<strong>重点</strong>,<strong>重点</strong>,<strong>重点</strong>)</p></li></ol><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p><strong>练习上面代码即可,并且可以将例1,2,3的幸运值改成输入形式.</strong></p><p>下一篇介绍 Java语法中的 <strong>循环结构</strong>…</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227164448.png" alt="20191227164448.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227141614.png&quot; alt=&quot;20191227141614.png&quot; style=&quot;zoom: 80%;&quot; /&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Part4.Vue速学(图文)</title>
    <link href="http://fightlee.fun/04-vue.html"/>
    <id>http://fightlee.fun/04-vue.html</id>
    <published>2019-12-26T01:55:55.000Z</published>
    <updated>2019-12-27T02:07:48.316Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cn.vuejs.org/images/logo.png" alt="20191223092306.png" style="zoom: 67%;" /><a id="more"></a><h1 id="v-for-补充"><a href="#v-for-补充" class="headerlink" title="v-for(补充)"></a><b style="color:rgb(65,184,131)">v-for(补充)</b></h1><h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><h3 id="1-遍历字符串数组拿到内容"><a href="#1-遍历字符串数组拿到内容" class="headerlink" title="1.遍历字符串数组拿到内容"></a>1.遍历字符串数组拿到内容</h3><p>语法 : v-for=”value in array”  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"name in names"</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">   <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el:<span class="string">'#app'</span>,</span></span><br><span class="line">    data:&#123;</span><br><span class="line"><span class="actionscript">     names:[<span class="string">'Lily'</span>,<span class="string">'Lucy'</span>,<span class="string">'Tom'</span>,<span class="string">'Jack'</span>]</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226100925.png" alt="20191226100925.png"></p><h3 id="2-遍历字符串数组拿到内容并获取对应内容下标"><a href="#2-遍历字符串数组拿到内容并获取对应内容下标" class="headerlink" title="2.遍历字符串数组拿到内容并获取对应内容下标"></a>2.遍历字符串数组拿到内容并获取对应内容下标</h3><p>语法 : v-for=”(value,index) in array”  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(name,index) in names"</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">   el:<span class="string">'#app'</span>,</span></span><br><span class="line">   data:&#123;</span><br><span class="line"><span class="actionscript">    names:[<span class="string">'Lily'</span>,<span class="string">'Lucy'</span>,<span class="string">'Tom'</span>,<span class="string">'Jack'</span>]</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226101005.png" alt="20191226101005.png"></p><h3 id="3-遍历对象"><a href="#3-遍历对象" class="headerlink" title="3.遍历对象"></a>3.遍历对象</h3><p>语法 : v-for=”(value,key,index) in obj”  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(value,key,index) in obj"</span>&gt;</span>&#123;&#123;value&#125;&#125;---&#123;&#123;key&#125;&#125;---&#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">   el:<span class="string">'#app'</span>,</span></span><br><span class="line">   data:&#123;</span><br><span class="line">    obj:&#123;</span><br><span class="line"><span class="actionscript">     name:<span class="string">'Lily'</span>,</span></span><br><span class="line">     age:12,</span><br><span class="line"><span class="actionscript">     address:<span class="string">'NewYork'</span></span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226101332.png" alt="20191226101332.png"></p><h3 id="4-遍历数字"><a href="#4-遍历数字" class="headerlink" title="4.遍历数字"></a>4.遍历数字</h3><p>语法 : v-for=”n in number”  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"n in number"</span>&gt;</span>&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">   el:<span class="string">'#app'</span>,</span></span><br><span class="line">   data:&#123;</span><br><span class="line">    number : 4</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226101717.png" alt="20191226101717.png"></p><h2 id="v-for中-key值的使用"><a href="#v-for中-key值的使用" class="headerlink" title="v-for中 key值的使用"></a>v-for中 key值的使用</h2><p>通常在使用v-for的时候,我们应当在v-for的后面 补充上 key属性 这里要使用 v-bind:key=”绑定的key必须是一个唯一的值,比如对象中的id属性等.”</p><p>语法 : v-for = “pro in proList” :key=”pro.id”</p><p><strong>注 : 使用key的作用更高效的更新虚拟Dom</strong></p><p>解释 : <a href="https://www.jianshu.com/p/4bd5e745ce95" target="_blank" rel="noopener">https://www.jianshu.com/p/4bd5e745ce95</a> , 参考一下别人的文章,看不懂就先放放.使用v-for的时候 记得加就好了(太麻烦了,懒得自己给大家总结了,用用现成的)</p><h1 id="计算属性-computed"><a href="#计算属性-computed" class="headerlink" title="计算属性 computed"></a><b style="color:rgb(65,184,131)">计算属性 computed</b></h1><h2 id="computed的使用"><a href="#computed的使用" class="headerlink" title="computed的使用"></a>computed的使用</h2><p>在options参数对象中添加computed属性,使用方式和methods一样 , 调用有一定区别</p><p>来自官网的一个栗子 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>html显示 : &#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>字符串拼接 : &#123;&#123;firstName + ' ' + lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- methods 的调用后有小括号 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>methods: &#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- computed 的 直接属性名调用即可 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>computed : &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">   el:<span class="string">'#app'</span>,</span></span><br><span class="line">   data:&#123;</span><br><span class="line"><span class="actionscript">    firstName:<span class="string">'Lebron'</span>,</span></span><br><span class="line"><span class="actionscript">    lastName:<span class="string">'James'</span></span></span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line">    getFullName()&#123;</span><br><span class="line"><span class="actionscript">     <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;,</span><br><span class="line"><span class="actionscript">               <span class="comment">//从这里可以看到 computed 和 methods 简直一模一样</span></span></span><br><span class="line">   computed:&#123;</span><br><span class="line">    fullName()&#123;</span><br><span class="line"><span class="actionscript">     <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226163732.png" alt="20191226163732.png"></p><h2 id="computed和methods的区别"><a href="#computed和methods的区别" class="headerlink" title="computed和methods的区别"></a>computed和methods的区别</h2><p>从上个栗子中我们可以看出,methods调用方法名后需要加括号(),computed直接写属性名即可,那还有什么区别呢?</p><p><strong>methods 多次调用 函数会触发多次</strong><br><strong>computed 只要值没发生改变,函数只会调用一次.值发生改变后,重新调用并缓存</strong></p><h3 id="例"><a href="#例" class="headerlink" title="例"></a>例</h3><p><strong>在上个栗子中调用3次methods和computed</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>methods: &#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>methods: &#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>methods: &#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>computed : &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>computed : &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>computed : &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">   el:<span class="string">'#app'</span>,</span></span><br><span class="line">   data:&#123;</span><br><span class="line"><span class="actionscript">    firstName:<span class="string">'Lebron'</span>,</span></span><br><span class="line"><span class="actionscript">    lastName:<span class="string">'James'</span></span></span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line">    getFullName()&#123;</span><br><span class="line"><span class="javascript">     <span class="built_in">console</span>.log(<span class="string">"methods..run"</span>)</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;,</span><br><span class="line"><span class="actionscript">               <span class="comment">//从这里可以看到 computed 和 methods 简直一模一样</span></span></span><br><span class="line">   computed:&#123;</span><br><span class="line">    fullName()&#123;</span><br><span class="line"><span class="javascript">     <span class="built_in">console</span>.log(<span class="string">"computed..run"</span>)</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226164507.png" alt="20191226164507.png"></p><p><strong>从此处可以看出 methods 多次调用会触发多次函数,消耗性能.</strong></p><h2 id="computed中的getter和setter"><a href="#computed中的getter和setter" class="headerlink" title="computed中的getter和setter"></a>computed中的getter和setter</h2><p>computed 既然叫计算属性,如果熟悉Java的同学对属性这个概念不会陌生,在Java对象中就有成员属性的概念,而成员属性我们一般对其私有化,然后提供公共的getter和setter供外界访问和调用.在上例中如果对计算属性直接赋值,会出现下面这种情况.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227094229.png" alt="20191227094229.png"></p><p>那这个时候我们就需要给fullName添加setter方法.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fullName : &#123;</span><br><span class="line">    <span class="keyword">get</span>()&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="keyword">set</span>(newValue)&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(newValue);<span class="comment">//newValue 为app.fullName = '值' 字符串中的值</span></span><br><span class="line">       <span class="keyword">this</span>.firstName = newValue.split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">       <span class="keyword">this</span>.lastName = newValue.split(<span class="string">' '</span>)[<span class="number">1</span>]</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>添加完后重新给computed赋值</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227094712.png" alt="20191227094712.png"></p><p>在代码中,get和set和Java中的非常类似,有木有? <strong>这里还是推荐使用最开始的fullName的写法就好,因为使用到setter情况不多,使用最开始的写法就够用了,因为其本身就提供了getter方法</strong></p><h1 id="侦听属性-watch"><a href="#侦听属性-watch" class="headerlink" title="侦听属性 watch"></a><b style="color:rgb(65,184,131)">侦听属性 watch</b></h1><p>在Vue中还有另外一种能够监听和观察Vue实例中数据变化的对象 : <strong>侦听属性 watch</strong>,我们来简单的看下其用法 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">   <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el:<span class="string">'#app'</span>,</span></span><br><span class="line">    data:&#123;</span><br><span class="line"><span class="actionscript">     firstName:<span class="string">'Lebron'</span>,</span></span><br><span class="line"><span class="actionscript">     lastName:<span class="string">'James'</span>,</span></span><br><span class="line"><span class="actionscript">     fullName:<span class="string">''</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    watch:&#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//监听到firstName的值发生变化时,接收传入的值,然后修改fullName的值</span></span></span><br><span class="line">     firstName(newValue)&#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fullName = newValue + <span class="keyword">this</span>.lastName</span></span><br><span class="line">     &#125;,</span><br><span class="line"><span class="actionscript">                    <span class="comment">//监听到lastName的值发生变化时,接收传入的值,然后修改fullName的值</span></span></span><br><span class="line">     lastName(newValue)&#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fullName = <span class="keyword">this</span>.firstName + newValue</span></span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对比一下, computed.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算属性</span></span><br><span class="line">computed:&#123;</span><br><span class="line">    fullName()&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="comment">//侦听属性</span></span><br><span class="line">   watch:&#123;</span><br><span class="line">    firstName(newValue)&#123;</span><br><span class="line">     <span class="keyword">this</span>.fullName = newValue + <span class="keyword">this</span>.lastName</span><br><span class="line">    &#125;,</span><br><span class="line">    lastName(newValue)&#123;</span><br><span class="line">     <span class="keyword">this</span>.fullName = <span class="keyword">this</span>.firstName + newValue</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这里我们看一下,使用computed是不是更优雅?那为什么还要使用watch呢?</p><p><strong>需要在数据变化时执行异步或开销较大的操作时,建议使用watch.这里要涉及到ajax/axios的使用,我们放到后面几篇讲.</strong> </p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a><b style="color:rgb(65,184,131)">总结</b></h1><ol><li>v-for key值 (<strong>重点</strong>)</li><li>computed计算属性 (<strong>重点</strong>)</li><li>watch 侦听属性 (<strong>先了解</strong>)</li></ol><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227100746.png" alt="20191227100746.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://cn.vuejs.org/images/logo.png&quot; alt=&quot;20191223092306.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://fightlee.fun/categories/web/"/>
    
    
      <category term="vue" scheme="http://fightlee.fun/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Part3.Vue速学(图文)</title>
    <link href="http://fightlee.fun/03-vue.html"/>
    <id>http://fightlee.fun/03-vue.html</id>
    <published>2019-12-24T06:45:22.000Z</published>
    <updated>2019-12-24T09:00:47.672Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cn.vuejs.org/images/logo.png" alt="20191223092306.png" style="zoom: 67%;" /><a id="more"></a><h1 id="Vue常用指令"><a href="#Vue常用指令" class="headerlink" title="Vue常用指令"></a><b style="color:rgb(65,184,131)">Vue常用指令</b></h1><h2 id="v-if-v-else-v-else-if"><a href="#v-if-v-else-v-else-if" class="headerlink" title="v-if,v-else,v-else-if"></a>v-if,v-else,v-else-if</h2><p>v-if这几个指令只要会Java的应该不会太陌生,会js的也应该懂.</p><p>代码 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">"isLogin"</span>&gt;</span>欢迎您 : &#123;&#123;userName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>请<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">"age &gt; 18"</span>&gt;</span>购买全票<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">"age &gt; 5"</span>&gt;</span>购买半票<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>免票<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">          isLogin: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">          userName: <span class="string">'zhangsan'</span>,</span></span><br><span class="line">          age: 20</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue2.gif" alt=""></p><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>v-show的效果和v-if很类似</p><p>代码 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">"isAgree"</span>&gt;</span>立即注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">       el: <span class="string">'#app'</span>,</span></span><br><span class="line">       data: &#123;</span><br><span class="line"><span class="actionscript">         isAgree: <span class="literal">true</span> <span class="comment">//是否同意</span></span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue3.gif" alt=""></p><p><strong>可以看出,v-show中值为false的元素会在当前元素上加上style=”display:none”, 即隐藏该元素.而如果是v-if中值为false,则该元素不会<span style="color:red">渲染</span>.</strong></p><h2 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h2><p>v-for 循环</p><p>代码 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"person in persons"</span>&gt;</span>&#123;&#123;person&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">       el: <span class="string">'#app'</span>,</span></span><br><span class="line">       data: &#123;</span><br><span class="line"><span class="actionscript">         <span class="comment">//定义数组内容</span></span></span><br><span class="line">         persons: [</span><br><span class="line"><span class="actionscript">           <span class="string">'冬泳怪鸽---奥里给'</span>,</span></span><br><span class="line"><span class="actionscript">           <span class="string">'影流之主---劫'</span>,</span></span><br><span class="line"><span class="actionscript">           <span class="string">'吃粑粑---李老八'</span>,</span></span><br><span class="line"><span class="actionscript">           <span class="string">'练习生---kunkun'</span></span></span><br><span class="line">         ]</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue4.gif" alt=""></p><h2 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h2><p>用来绑定原生js事件和自定义事件</p><p>代码 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        &#123;&#123;number&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"number++"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">          number: 0</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue5.gif" alt=""></p><p>除了这种写法,还能在v-on:click=”increment”中调用方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>调用方法需要在vue 的 options对象中使用methods进行声明 :</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">       el: <span class="string">'#app'</span>,</span><br><span class="line">       data: &#123;</span><br><span class="line">         number: <span class="number">0</span></span><br><span class="line">       &#125;,</span><br><span class="line">       methods: &#123;</span><br><span class="line">         increment() &#123;</span><br><span class="line">           <span class="keyword">this</span>.number++</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><h4 id="缩写"><a href="#缩写" class="headerlink" title="缩写 :"></a>缩写 :</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h2><p>给vue中的属性绑定值.</p><p>代码 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/*定义样式 .one*/</span></span></span><br><span class="line"><span class="css">      <span class="selector-class">.one</span> &#123;</span></span><br><span class="line">        font-style: italic;</span><br><span class="line">        color: red;</span><br><span class="line">        font-weight: bolder;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>v-bind:src<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">"imgSrc"</span> <span class="attr">height</span>=<span class="string">"80px"</span> <span class="attr">width</span>=<span class="string">"80px"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>v-bind:class 对象写法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:class</span>=<span class="string">"&#123;one:true&#125;"</span>&gt;</span>奥里给<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>v-bind:style 对象写法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:style</span>=<span class="string">"&#123;fontSize:fs,color:fc&#125;"</span>&gt;</span>奥里给<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">          imgSrc: <span class="string">'https://cn.vuejs.org/images/logo.png'</span>,</span></span><br><span class="line"><span class="actionscript">          fs: <span class="string">'24px'</span>,</span></span><br><span class="line"><span class="actionscript">          fc: <span class="string">'green'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224160658.png" alt="20191224160658.png"></p><h4 id="缩写-1"><a href="#缩写-1" class="headerlink" title="缩写 :"></a>缩写 :</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">:class</span>=<span class="string">"&#123;one:true&#125;"</span>&gt;</span>奥里给<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">:style</span>=<span class="string">"&#123;fontSize:fs,color:fc&#125;"</span>&gt;</span>奥里给<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><p>用来结合表单使用, 负责监听用户的输入事件以更新数据</p><p>代码 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"userName"</span>&gt;</span>用户名 :</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userName"</span> <span class="attr">v-model</span>=<span class="string">"userName"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"psw"</span>&gt;</span>密码 : <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"psw"</span> <span class="attr">v-model</span>=<span class="string">"psw"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pswConfrim"</span>&gt;</span>确认密码 : <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"pswConfrim"</span> <span class="attr">v-model</span>=<span class="string">"pswConfrim"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">v-model</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">v-model</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">label</span>&gt;</span>兴趣爱好 : <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">v-model</span>=<span class="string">"hobbies"</span> <span class="attr">value</span>=<span class="string">"sing"</span>&gt;</span>唱</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">v-model</span>=<span class="string">"hobbies"</span> <span class="attr">value</span>=<span class="string">"dance"</span>&gt;</span>跳</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">v-model</span>=<span class="string">"hobbies"</span> <span class="attr">value</span>=<span class="string">"rap"</span>&gt;</span>rap</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">v-model</span>=<span class="string">"hobbies"</span> <span class="attr">value</span>=<span class="string">"basketball"</span>&gt;</span>篮球</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">label</span>&gt;</span>选择城市 : <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"citys"</span> <span class="attr">id</span>=<span class="string">"citys"</span> <span class="attr">v-model</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>长沙<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"isAgree"</span>&gt;</span>是否同意协议<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">"!isAgree"</span>&gt;</span>注 册<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">                您当前的用户名 : &#123;&#123;userName&#125;&#125;,</span><br><span class="line">                您当前的密码 : &#123;&#123;psw&#125;&#125;,</span><br><span class="line">                确认密码:&#123;&#123;pswConfrim&#125;&#125;,</span><br><span class="line">                您当前选择的性别是 :&#123;&#123;gender&#125;&#125;</span><br><span class="line">    您当前选中的兴趣爱好 :&#123;&#123;hobbies&#125;&#125;,</span><br><span class="line">                您当前选中的城市 : &#123;&#123;city&#125;&#125;</span><br><span class="line">                您当前是否同意此协议 : &#123;&#123;isAgree&#125;&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">   <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el:<span class="string">'#app'</span>,</span></span><br><span class="line">    data:&#123;</span><br><span class="line"><span class="actionscript">     userName:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">     psw:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">     pswConfrim:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">     gender:<span class="string">''</span>,</span></span><br><span class="line">     hobbies:[],</span><br><span class="line"><span class="actionscript">     isAgree:<span class="literal">false</span>,</span></span><br><span class="line">     city:0</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图 :</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue6.gif" alt=""></p><p><strong>注意 : v-model绑定单个checkbox 是绑定到一个布尔值中, 比如上例中的 是否同意协议, 绑定多个checkbox是 绑定到一个数组中 , 比如上例中的 兴趣爱好</strong></p><h2 id="v-on中的修饰符"><a href="#v-on中的修饰符" class="headerlink" title="v-on中的修饰符"></a>v-on中的修饰符</h2><h3 id="prevent-stop-once-等"><a href="#prevent-stop-once-等" class="headerlink" title=".prevent .stop .once 等"></a>.prevent .stop .once 等</h3><h4 id="prevent"><a href="#prevent" class="headerlink" title=".prevent"></a>.prevent</h4><p>阻止事件的默认行为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-on:click.prevent = "testPrevent"</span><br></pre></td></tr></table></figure><h5 id="例-没有使用prevent"><a href="#例-没有使用prevent" class="headerlink" title="例 :  没有使用prevent"></a>例 :  没有使用prevent</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 给超链接Baidu绑定一个点击事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">v-on:click</span>=<span class="string">"go2Baidu"</span>&gt;</span>BaiDu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        methods: &#123;</span><br><span class="line">          go2Baidu() &#123;</span><br><span class="line"><span class="actionscript">            alert(<span class="string">'是否离开当前页面?'</span>)</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue7.gif" alt=""></p><h5 id="使用了prevent后"><a href="#使用了prevent后" class="headerlink" title="使用了prevent后"></a>使用了prevent后</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">v-on:click.prevent</span>=<span class="string">"go2Baidu"</span>&gt;</span>BaiDu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue8.gif" alt=""></p><h4 id="stop"><a href="#stop" class="headerlink" title=".stop"></a>.stop</h4><p>停止事件冒泡</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-on:click.stop = "testStop"</span><br></pre></td></tr></table></figure><h5 id="例-没有使用stop"><a href="#例-没有使用stop" class="headerlink" title="例 : 没有使用stop"></a>例 : 没有使用stop</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 监听在高宽为100的div中的鼠标移动事件,并更新div内部span中的x,y坐标 这里 $event 是event事件参数对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-on:mousemove</span>=<span class="string">"showXY($event)"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"height: 100px; width: 100px; border: 1px solid red;text-align: center; line-height: 100px;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>x : &#123;&#123;x&#125;&#125; , y : &#123;&#123;y&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">          x: 0,</span><br><span class="line">          y: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">          showXY(event) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.x = event.offsetX</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.y = event.offsetY</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue9.gif" alt=""></p><h5 id="加上stop"><a href="#加上stop" class="headerlink" title="加上stop"></a>加上stop</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在span标签内部 事件停止冒泡 阻止触发mousemove事件向外层div传播--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-on:mousemove.stop</span>&gt;</span>x : &#123;&#123;x&#125;&#125; , y : &#123;&#123;y&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue10.gif" alt=""></p><h4 id="once"><a href="#once" class="headerlink" title=".once"></a>.once</h4><p>事件只触发一次</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-on:click.once = "testOnce"</span><br></pre></td></tr></table></figure><h5 id="例-添加once的效果"><a href="#例-添加once的效果" class="headerlink" title="例 : 添加once的效果"></a>例 : 添加once的效果</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 给按钮添加点击事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      &#123;&#123;number&#125;&#125; <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">"number++"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue11.gif" alt=""></p><h2 id="v-model中的修饰符"><a href="#v-model中的修饰符" class="headerlink" title="v-model中的修饰符"></a>v-model中的修饰符</h2><h3 id="trim-lazy-number"><a href="#trim-lazy-number" class="headerlink" title=".trim, .lazy .number"></a>.trim, .lazy .number</h3><ol><li>trim  去除字符串俩端空格</li><li>lazy  延迟输入,如果在model后添加lazy则只有当输入框失去焦点或者用户敲下回车的时候,数据才会更新</li><li>number 将数据转换成 number 类型</li></ol><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224165849.png" alt="20191224165849.png" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://cn.vuejs.org/images/logo.png&quot; alt=&quot;20191223092306.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://fightlee.fun/categories/web/"/>
    
    
      <category term="vue" scheme="http://fightlee.fun/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Part2.Vue速学(图文)</title>
    <link href="http://fightlee.fun/02-vue.html"/>
    <id>http://fightlee.fun/02-vue.html</id>
    <published>2019-12-24T03:15:22.000Z</published>
    <updated>2019-12-26T07:22:59.354Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cn.vuejs.org/images/logo.png" alt="20191223092306.png" style="zoom: 67%;" /><a id="more"></a><p><b style="color:red">——学习 Vue 之前需要大家对 HTML,CSS 和 JS 有所掌握——</b><br><b style="color:red">——下面这点东西不想看就略过——</b></p><h1 id="What-is-the-Fu-ing-Vue"><a href="#What-is-the-Fu-ing-Vue" class="headerlink" title="What is the Fu***ing Vue?"></a><b style="color:rgb(65,184,131)">What is the Fu***ing Vue?</b></h1><h3 id="来自官网的介绍"><a href="#来自官网的介绍" class="headerlink" title="来自官网的介绍"></a>来自官网的介绍</h3><p><strong>Vue</strong> (读音 /vjuː/，类似于 <strong>view</strong>) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><h1 id="Why-do-we-need-to-use-Vue"><a href="#Why-do-we-need-to-use-Vue" class="headerlink" title="Why do we need to use Vue?"></a><b style="color:rgb(65,184,131)">Why do we need to use Vue?</b></h1><h3 id="同样来自官网的介绍和我的理解"><a href="#同样来自官网的介绍和我的理解" class="headerlink" title="同样来自官网的介绍和我的理解"></a>同样来自官网的介绍和我的理解</h3><ol><li><p><strong>体积小</strong> : 压缩后的体积仅为 33k</p></li><li><p><strong>更高的运行效率</strong> : 基于虚拟 dom,一种可以预先通过 JavaScript 进行各种计算,把最终的 DOM 操作计算出来并优化的技术,由于这个 DOM 操作属于预处理操作,并没有真实的操作 DOM,所以叫做虚拟 DOM .</p></li><li><p><strong>双向数据绑定</strong> : 让开发者不用再去操作 DOM 对象,把更多的精力投入到业务逻辑的处理上</p></li><li><p><strong>生态丰富,学习成本低</strong> : 市场上有大量成熟,稳定的基于 Vue.js 的 ui 框架,常用组件 比如 element-ui 等拿来就能实现快速开发,对初学者比较友好,入门简单,学习资料也多.</p></li><li><p><strong>各大小厂都要求需要至少掌握一种现在前沿的前端技,如 Vue,React 等</strong></p></li></ol><p><b style="color:red">——下面这点东西还是需要看一下——</b></p><h1 id="2-个核心"><a href="#2-个核心" class="headerlink" title="2 个核心"></a><b style="color:rgb(65,184,131)">2 个核心</b></h1><ol><li><strong>数据绑定</strong> : 数据改变驱动了视图的自动更新，传统的做法你得手动改变 DOM 来改变视图，Vue.js 只需要改变数据，就会自动改变视图，一个字：爽。再也不用你去操心 DOM 的更新了，这就是 MVVM 思想的实现。</li><li><strong>视图组件</strong> : 把整一个网页的拆分成一个个区块，每个区块我们可以看作成一个组件。网页由多个组件拼接或者嵌套组成。</li></ol><p><b style="color:red">——这里开始就是重点拉!!——</b></p><h1 id="How-do-we-use-the-Vue"><a href="#How-do-we-use-the-Vue" class="headerlink" title="How do we use the Vue?"></a><b style="color:rgb(65,184,131)">How do we use the Vue?</b></h1><h3 id="Vue-安装"><a href="#Vue-安装" class="headerlink" title="Vue 安装"></a>Vue 安装</h3><ol><li><strong>使用 cdn 引入 vue 所需要的 js 文件</strong><br>官网提供了 CDN :</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>直接在项目中引入 js 本地文件</strong></p><p>进入官网 : <a href="https://cn.vuejs.org/v2/guide/installation.html" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/installation.html</a><br><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224113959.png" alt="20191224113959.png"><br>点击图片中的按钮 下载对应版本,然后拖放到项目中使用 script 标签引用即可</p></li><li><p><strong>通过 vue-cli 脚手架工具创建 vue 项目</strong></p></li></ol><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue // 这就要使用到我们之前的<span class="keyword">node</span><span class="title">中的npm</span>来进行安装了,安装步骤到后面详解.</span><br></pre></td></tr></table></figure><h3 id="Vue-使用步骤"><a href="#Vue-使用步骤" class="headerlink" title="Vue 使用步骤"></a>Vue 使用步骤</h3><ol><li>使用 VSCode 创建文件夹,文件夹中创建 index.html</li><li>引入 Vue.js 文件</li><li>在 body 中添加 div 标签,并加上 id 属性</li><li>在 div 标签中插入</li><li>在 div 标签下创建 script 标签并创建 Vue 对象并传入一个 options 对象参数</li><li>配置 options 对象属性,如 el,data.</li></ol><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/vue1.gif" alt=""></p><p><strong>代码如下</strong> : </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.创建Div标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 3.插入message --&gt;</span></span><br><span class="line">      &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">​    <span class="comment">&lt;!-- 4.script 创建Vue对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>, <span class="comment">//选中id为app的元素</span></span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">          message: <span class="string">'Hello World!'</span> <span class="comment">//设置message变量的值为 Hello World!</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建Vue传入的options对象参数中不仅有el和data属性,在接下来的课程中我们会慢慢学到.</p><ol><li><p>el : element,选中html中哪一个div块为vue实例</p></li><li><p>data : 数据,vue实例中使用到的变量需要先在data中定义.</p></li><li><p>可以使用app来接收vue实例对象,可以在浏览器的console中对app实例下的数据进行修改</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el:<span class="string">'#app'</span>,</span></span><br><span class="line">    data:&#123;</span><br><span class="line"><span class="actionscript">        message:<span class="string">'Hello World!'</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   <img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/v1.png" alt=""></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/v2.png" alt=""></p><h1 id="Vue-插值语法"><a href="#Vue-插值语法" class="headerlink" title="Vue 插值语法"></a><b style="color:rgb(65,184,131)">Vue 插值语法</b></h1><h2 id="mustache-插值语法"><a href="#mustache-插值语法" class="headerlink" title="mustache 插值语法"></a>mustache 插值语法</h2><p>在 html 中使用,语法结构位 { { } } 俩个大括号 里层大括号中可以写表达式和变量等.</p><p>…</p><p>…</p><p>好了这一章内容就到这,我们下一张快速的将 Vue 中比较常用的指令练习一遍.下一章篇幅有点长,大家做好心理准备…</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224144948.png" alt="20191224144948.png"></p><p>```</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://cn.vuejs.org/images/logo.png&quot; alt=&quot;20191223092306.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://fightlee.fun/categories/web/"/>
    
    
      <category term="vue" scheme="http://fightlee.fun/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Part3·Java转义符&amp;运算符(图文)</title>
    <link href="http://fightlee.fun/05-java.html"/>
    <id>http://fightlee.fun/05-java.html</id>
    <published>2019-12-24T00:40:41.000Z</published>
    <updated>2019-12-27T01:36:34.326Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224084248.png" alt="20191224084248.png"></p><a id="more"></a><h1 id="Section-1-前文回顾-amp-转义符"><a href="#Section-1-前文回顾-amp-转义符" class="headerlink" title="Section.1  前文回顾&amp;转义符"></a>Section.1  前文回顾&amp;转义符</h1><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><p>在上一篇课程中,我们重点介绍了Java中的变量和各种数据类型,我们再用一个小练习来进行简单的回顾.</p><h5 id="练习-1"><a href="#练习-1" class="headerlink" title="练习 1"></a>练习 1</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">声明变量保存以下信息</span></span><br><span class="line"><span class="comment">品种(brand) : 哈士奇 String</span></span><br><span class="line"><span class="comment">昵称(nickName) : 旺财 String</span></span><br><span class="line"><span class="comment">年龄(age) : 16 int</span></span><br><span class="line"><span class="comment">性别(gender) : 公 char</span></span><br><span class="line"><span class="comment">是否绝育(isSterilized) : true boolean</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">输出对应信息 :</span></span><br><span class="line"><span class="comment"> ...</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VariableDemo03</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.声明变量 并赋值</span></span><br><span class="line">        String brand = <span class="string">"哈士奇"</span>;</span><br><span class="line">        String nickName = <span class="string">"旺财"</span>;</span><br><span class="line">        <span class="keyword">int</span> age = <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">char</span> gender = <span class="string">'公'</span>;</span><br><span class="line">        <span class="keyword">boolean</span> isSterilized = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//2.输出信息到控制台</span></span><br><span class="line">        System.out.println(<span class="string">"品种 : "</span> + brand);</span><br><span class="line">        System.out.println(<span class="string">"昵称 : "</span> + nickName);</span><br><span class="line">        System.out.println(<span class="string">"年龄 : "</span> + age);</span><br><span class="line">        System.out.println(<span class="string">"性别 : "</span> + gender);</span><br><span class="line">        System.out.println(<span class="string">"是否绝育 : "</span> + isSterilized);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注 : 在这里我 “System.out.println()” 做一个补充.</strong></p><ol><li>System.out.<strong>println</strong>(); 的作用是向控制台上输出完一行信息并换行,也就是说每当输出完小括号中的内容将会执行一个回车换行的操作.</li><li>System.out.<strong>print</strong>();的作用同上,但是区别是输出完信息后不会另起一行</li><li>如果想用System.out.<strong>print</strong>();同样达到换行的效果,我们可以在小括号中加上转义字符 “\n”.</li></ol><h5 id="例-1"><a href="#例-1" class="headerlink" title="例 1"></a>例 1</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> TestDemo01&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.</span></span><br><span class="line">        System.out.print(<span class="string">"今天天气不错"</span>);</span><br><span class="line">        System.out.print(<span class="string">",我们去唱,跳,rap,篮球吧!"</span>);</span><br><span class="line">        <span class="comment">//2.</span></span><br><span class="line">        System.out.print(<span class="string">"今天天气不错\n"</span>);</span><br><span class="line">        System.out.print(<span class="string">",我们去唱,跳,rap,篮球吧!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">今天天气不错,我们去唱,跳,rap,篮球吧!今天天气不错</span><br><span class="line">,我们去唱,跳,rap,篮球吧!</span><br></pre></td></tr></table></figure><p>可以看出 第一个,第二个第三个print都处于一行,因为第一个和第二个print输出后没有另起一行,第三个print字符串末尾加上了\n所以就会开始另起一行开始输出.同学们自己使用<strong>println</strong>再来试一次吧!</p><h3 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h3><p>转义符 : 反斜杠 <b style="color:red">\</b> .</p><p>作用 : 用来在字符串中改变字符或者符号本身的含义 . 比如我们想要在控制台输出</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Hello World"</span></span><br></pre></td></tr></table></figure><p>按照之前的思路是不是得这么写呢?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"> System.out.println(<span class="string">""</span>Hello World<span class="string">""</span>); <span class="comment">// 程序报错</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为在Java中 一对双引号就代表一个字符串,那第一对双引号即为一个字符串,然后中间 Hello World ,后面还有一对双引号,这种写法在Java中是不允许的.所以我们需要转义符来对包裹Hello World的双引号转义,将其转义成普通的双引号,不代表字符串.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"> System.out.println(<span class="string">"\"Hello World\""</span>); <span class="comment">// 程序正确</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java 中有很多有特殊意义的转义符, 比如 之前提到的 “\n” 换行 , “\r” 回车, “\t”  横向制表(HT) (跳到下一个TAB位置)  等..</p><h1 id="Section-2-运算符"><a href="#Section-2-运算符" class="headerlink" title="Section.2  运算符"></a>Section.2  运算符</h1><h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><p>表达式的概念其实应该在初中数学或者小学数学中我们已经接触过了,比如俩数之和 <strong>x + y</strong>   , 圆面积表达式  <strong>Π <em>r</em> r</strong> , 这些都是一些比较简单的表达式, 稍微复杂一点的 如 : (a + b) * (x + y)  等等, 通过不同的<strong>运算符</strong>将表达式组合在一起得到不同类型的结果, 比如整型,浮点型,布尔型(<strong>真or假</strong>)的结果等.那下面我们来看下Java中有哪些运算符?</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li>算术运算符</li><li>赋值运算符</li><li>关系运算符</li><li>逻辑运算符</li><li>三目/三元运算符</li></ol><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>算术运算符一般用于做数值运算,比如 加,减,乘,除,取余,自增或者自减的操作</p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加</td><td align="center">2 + 4</td></tr><tr><td align="center">-</td><td align="center">减</td><td align="center">2 - 4</td></tr><tr><td align="center">*</td><td align="center">乘</td><td align="center">2 * 4</td></tr><tr><td align="center">/</td><td align="center">除</td><td align="center">4 / 2 结果为 :  2</td></tr><tr><td align="center">%</td><td align="center">取余</td><td align="center">5 % 2 结果为 : 1 <br>2 % 5 结果为 : 2</td></tr><tr><td align="center">++</td><td align="center">自增 , 在变量自身的基础上 + 1</td><td align="center">a++,++a 等同于 a = a + 1</td></tr><tr><td align="center">–</td><td align="center">自减 , 在变量自身的基础上 - 1</td><td align="center">a–,–a  等同于 a = a - 1</td></tr></tbody></table><h5 id="例-2"><a href="#例-2" class="headerlink" title="例 2"></a>例 2</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo02</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="number">2</span> + <span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="number">2</span> - <span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="number">2</span> * <span class="number">4</span>);</span><br><span class="line">        <span class="comment">//除法 注意数据类型</span></span><br><span class="line">        System.out.println(<span class="number">2</span> / <span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span> / <span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="number">5.0</span> / <span class="number">2</span>);</span><br><span class="line">        <span class="comment">//取余</span></span><br><span class="line">        System.out.println(<span class="number">2</span> % <span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="number">5</span> % <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加减乘</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">-2</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="comment">//除法(整数跟整数运算 得到的结果也是整数,5 / 2 得到 2.5取整即为2 , 5.0为浮点型小数与整数的运算在后面讲)</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2.5</span></span><br><span class="line"><span class="comment">//取余(如果左边的数比运算符右边的数要小,余数取左边的数)</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="自增-amp-自减的执行顺序"><a href="#自增-amp-自减的执行顺序" class="headerlink" title="自增&amp;自减的执行顺序"></a>自增&amp;自减的执行顺序</h4><p>自增或者自减都是单目运算符,只需要一个操作数就可以进行运算,通常配合变量一起使用,如对变量a做自增或者自减的操作 : <strong>a++</strong>, <strong>a–</strong> ,<strong>++a</strong>, <strong>–a</strong></p><p><strong>a++,a–</strong> :  如果运算符在后边,则为先执行代码,再运算 ,我们通常称之为 后加加,后减减</p><p><strong>++a,–a</strong> : 如果运算符在前边,则为先运算,再执行代码, 我们通常称之为 前加加,前减减</p><h5 id="例-3"><a href="#例-3" class="headerlink" title="例 3"></a>例 3</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo03</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">        System.out.println(++a);</span><br><span class="line">        System.out.println(a++);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>分析 :</p><p>第一个 System.out.println(++a);  因为运算符在前边,所以<b style="color:red">先运算</b><strong>自增1</strong>,然后执行代码输出 <strong>2</strong></p><p>第二个 System.out.println(a++); 运算符在后边,所以<b style="color:red">先执行代码</b>输出 <strong>2</strong>, 然后自增1, 自增后a中的值为 <strong>3</strong></p><p>第三个 System.out.println(a); 没有运算符,直接输出a变量中的值 3</p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值运算符,将运算符右边的值赋值给左边, 如 a = a + 1, 将变量 a 的值 + 1 再 重新赋值给 a .</p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th>举例</th></tr></thead><tbody><tr><td align="center">=</td><td align="center">将右边的值直接赋值给左边</td><td>a = 33</td></tr><tr><td align="center">+=</td><td align="center">将右边的值与左边的变量的值相加后再赋值给左边</td><td>a += 33 等同于 a = a + 33</td></tr><tr><td align="center">-=</td><td align="center">将右边的值与左边的变量的值相减后再赋值给左边</td><td>a -= 33 等同于 a = a - 33</td></tr><tr><td align="center">*=</td><td align="center">将右边的值与左边的变量的值相乘后再赋值给左边</td><td>a <em>= 33 等同于 a = a</em> 33</td></tr><tr><td align="center">/=</td><td align="center">将右边的值与左边的变量的值相除后再赋值给左边</td><td>a /= 33 等同于 a = a / 33</td></tr><tr><td align="center">%=</td><td align="center">将右边的值与左边的变量的值取余后再赋值给左边</td><td>a %= 33 等同于 a = a % 33</td></tr></tbody></table><h3 id="关系-比较运算符"><a href="#关系-比较运算符" class="headerlink" title="关系/比较运算符"></a>关系/比较运算符</h3><p>将俩个表达式使用比较运算符来操作得到比较结果,结果为布尔类型,true或者false</p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">&gt;</td><td align="center">大于</td><td align="center">假设int  a = 30 , b = 20;<br> a &gt; b (结果为 : <strong>true</strong>)</td></tr><tr><td align="center">&gt;=</td><td align="center">大于或者等于</td><td align="center">a &gt;= b (结果为 : <strong>true</strong>)</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td><td align="center">a &lt; b (结果为 : <strong>false</strong>)</td></tr><tr><td align="center">&lt;=</td><td align="center">小于或者等于</td><td align="center">a &lt;= b (结果为 : <strong>false</strong>)</td></tr><tr><td align="center">==</td><td align="center">等等于,检测运算符俩边表达式的值是否相等</td><td align="center">a == b (结果为 : <strong>false</strong>)</td></tr><tr><td align="center">!=</td><td align="center">不等于</td><td align="center">a != b (结果为 : <strong>true</strong>)</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>用来连接俩个关系表达式或者布尔类型的值,得到对应的布尔类型结果.</p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">与操作符 (and)</td><td align="center">true &amp;&amp; false 结果为 false <br>与操作符俩边为true结果才为true,否则为false</td></tr><tr><td align="center">||</td><td align="center">或操作符(or)</td><td align="center">true || false 结果为 true<br/>或操作符俩边为false结果才为false,否则为true</td></tr><tr><td align="center">!</td><td align="center">非(not),单目运算符</td><td align="center">!true 结果为 false <br/>与当前值取反</td></tr></tbody></table><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><p>没什么好解释的看下面.</p><table><thead><tr><th align="center">符号</th><th align="center">说明</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">表达式 ? 值1 : 值2</td><td align="center">表达式的结果通常为boolean类型,<br/>可以使用比较运算符运算符或者逻辑运算符连接,<br>如果表达式的结果为真(true),则得到值1,<br/>如果表达式的结果为假(false),则得到值2</td><td align="center">假设 a = 10,<br>a &gt; 5 ? “大于”:”小于” <br>得到结果 : 大于</td></tr></tbody></table><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p>位运算符是可以直接进行二进制数据的计算处理</p><table><thead><tr><th align="center">符号</th><th align="center">说明</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">&amp;</td><td align="center">与运算</td><td align="center">4 &amp; 5 = 4</td></tr><tr><td align="center">|</td><td align="center">或运算</td><td align="center">4 | 5 =5</td></tr><tr><td align="center">^</td><td align="center">异或运算</td><td align="center">4 ^ 5 = 1</td></tr><tr><td align="center">~</td><td align="center">取反,反码运算</td><td align="center">~ 4 = -5</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">二进制位右移运算</td><td align="center">8 &gt;&gt; 1 = 4</td></tr><tr><td align="center">&lt;&lt;</td><td align="center">二进制位左移运算</td><td align="center">2 &lt;&lt; 3 = 16</td></tr></tbody></table><h4 id="amp-与运算"><a href="#amp-与运算" class="headerlink" title="&amp; : 与运算"></a>&amp; : 与运算</h4><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224141725.png" alt="20191224141725.png"></p><p>结论 : 做与运算的时候,参与运算的数字,低位对齐，高位不足的补零,当二进制位都为1则结果为1,否则为0.</p><h4 id="或运算"><a href="#或运算" class="headerlink" title="| : 或运算"></a>| : 或运算</h4><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191227093632.png" alt="20191227093632.png"></p><p>结论 : 做与运算的时候,参与运算的数字,低位对齐，高位不足的补零,当二进制位都为0则结果为0,否则为1.</p><p><b style="color:red">总结 : 这里想一下是不是和逻辑运算符 &amp;&amp; 很类似呢? 我们把1看成true,0看成false即可</b></p><h4 id="异或运算"><a href="#异或运算" class="headerlink" title="^ : 异或运算"></a>^ : 异或运算</h4><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224141545.png" alt="20191224141545.png"></p><p>结论 : 做与运算的时候,参与运算的数字,低位对齐，高位不足的补零,当二进制位都相同结果为0,不相同为1.</p><h4 id="取反"><a href="#取反" class="headerlink" title="~ : 取反"></a>~ : 取反</h4><p>不做演示了,就是将二进制位的0变成1,1变成0</p><h4 id="gt-gt-和-lt-lt-左移-amp-右移"><a href="#gt-gt-和-lt-lt-左移-amp-右移" class="headerlink" title="&gt;&gt;和&lt;&lt; : 左移&amp;右移"></a>&gt;&gt;和&lt;&lt; : 左移&amp;右移</h4><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224142536.png" alt="20191224142536.png"></p><p>结论 : 将左边3位0舍弃, 再末尾添加3位.</p><h3 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h3><p>简单来说 :  <strong>算术运算符优先级较高，关系和逻辑运算符优先级较低,有括号先算括号内部的,如果算术运算中包含单目运算符,则单目优先级比算术运算符高. 并不要求去记忆运算符的优先级,理解为主.</strong></p><h1 id="Section-3-字面量"><a href="#Section-3-字面量" class="headerlink" title="Section.3  字面量"></a>Section.3  字面量</h1><p>字面量是指在程序中通过源代码直接给出的值 , 如 int a = 1; String name = “zhangsan”; 此处  1 和 “zhangsan”则分别为 整数字面量和字符串字面量.</p><p>不同类型的字面量赋值 :</p><p><strong>int 类型</strong> :   整数字面量, 可以为 二进制 ( 0b0011 ),八进制( 020 ),十进制( 12 ),十六进制 (0x12a).</p><p><strong>long类型</strong> : 长整型字面量,在赋值时,需要在整型后加上l或者L , 如 : 18L , 18l</p><p><strong>float类型</strong> : 单精度浮点型 , 需要在小数后加上f 或者 F , 如 : 1.8f ,1.8F</p><p><strong>double类型</strong> : 双精度浮点型, 直接赋值小数即可, 如 : 3.4</p><p><strong>boolean类型</strong> : 布尔类型,只有 true 和 false 俩个字面量</p><p><strong>String类型</strong> : 双引号标识的就是字符串字面量</p><p><strong>char类型</strong> : 用单引号括起来的字符、转义字符和 Unicode 值表示的字符。例如 ‘a’，‘\n’ 和 ‘\u0036’ 都代表char类型字面量</p><h1 id="Section-4-总结"><a href="#Section-4-总结" class="headerlink" title="Section.4 总结"></a>Section.4 总结</h1><p>1.转义符 (掌握)</p><p>2.<b style="color:red">运算符</b>(<strong>重点</strong>)</p><p>3.字面量(掌握)</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224105532.png" alt="20191224105532.png" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191224084248.png&quot; alt=&quot;20191224084248.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Part1.Vue环境搭建(图文)</title>
    <link href="http://fightlee.fun/01-vue.html"/>
    <id>http://fightlee.fun/01-vue.html</id>
    <published>2019-12-23T01:21:14.000Z</published>
    <updated>2019-12-26T07:23:37.128Z</updated>
    
    <content type="html"><![CDATA[<img src="https://cn.vuejs.org/images/logo.png" alt="20191223092306.png" style="zoom: 67%;" /><a id="more"></a><h1 id="Vue环境搭建"><a href="#Vue环境搭建" class="headerlink" title="Vue环境搭建"></a>Vue环境搭建</h1><p>废话不多说,vue环境的搭建其实不是很难,我们来看一下我们要准备一些什么东西?</p><ol><li><p>git</p><ul><li><p>下载地址 :  <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a>  直接点击右边的download下载.</p></li><li><p>安装步骤 :  没有什么太多要求的话,傻瓜式下一步安装即可.</p></li><li><p>如果在github中注册过,就在桌面右键 选择git bash 输入命令</p></li></ul></li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name lee #将用户名设为lee</span><br><span class="line">git<span class="built_in"> config </span>--global user.email lee@163.com #将用户邮箱设为163邮箱</span><br><span class="line"></span><br><span class="line">输入完后继续输入,查看配置的用户名和邮箱</span><br><span class="line">git<span class="built_in"> config </span>user.name</span><br><span class="line">git<span class="built_in"> config </span>user.email</span><br></pre></td></tr></table></figure><ol start="2"><li><p>node</p><ul><li><p>下载地址 :  <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a>  点击download 下载.</p></li><li><p>安装步骤 : 同上,傻瓜式下一步安装</p></li><li><p>安装完毕后 , 打开cmd 输入命令</p></li></ul></li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">node - v <span class="comment">// 输出版本信息无误</span></span><br><span class="line">npm - v <span class="comment">// 输出版本信息无误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里最好将npm的镜像换成淘宝镜像cnpm</span></span><br><span class="line">npm install -g cnpm --registry=<span class="string">https:</span><span class="comment">//registry.npm.taobao.org</span></span><br><span class="line">cnpm -v <span class="comment">//查看版本信息</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>VScode</p><ul><li><p>下载地址 :  <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a>  点击 download 下载.</p></li><li><p>安装步骤 : 傻瓜式 下一步安装</p></li><li><p>插件安装 : <img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191223095210.png" alt="20191223095210.png"></p></li><li><p>推荐插件 :</p><ol><li><strong>Chinese (Simplified) Language…</strong> 中文简体,如果英语够好,使用英文版即可</li><li><strong>Prettier</strong>  代码格式化工具</li><li><strong>ESLint</strong>和<strong>TSLint</strong> 用来统一JavaScript 和 TypeScript的风格,当前项目用Js则装ESlint,Ts用TSLint</li><li><strong>EditorConfig</strong>  VSCode的扩展插件   在当前项目根目录下添加<code>.editorconfig</code>文件,普通项目练习不用配置也可以,用Prettier足够 , 这个的作用是为项目统一编辑器的实时格式。</li><li><strong>Bootstrap 3 Snippets</strong> 或者 <strong>4 Snippets</strong> 如果项目中使用了 Bootstrap 可以用来出现模板代码</li><li><strong>Vetur,Vue 2Snippets,Vue VSCode Snippets</strong>  Vue语法提示等作用.</li></ol></li><li><p>插件配置 :  点击左上角 <strong>文件</strong> –&gt; <strong>首选项</strong> –&gt; <strong>设置</strong> –&gt; <strong>右上角第一个图标,打开json</strong></p></li></ul></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"editor.renderIndentGuides"</span>: <span class="literal">false</span>, <span class="comment">//控制编辑器是否显示缩进参考线。</span></span><br><span class="line">  <span class="attr">"editor.fontSize"</span>: <span class="number">26</span>, <span class="comment">//以像素为单位控制字体大小。</span></span><br><span class="line">  <span class="attr">"files.autoSave"</span>: <span class="string">"afterDelay"</span>, <span class="comment">//自动保存</span></span><br><span class="line">  <span class="attr">"editor.lineNumbers"</span>: <span class="string">"on"</span>, <span class="comment">//打开行号</span></span><br><span class="line">  <span class="attr">"editor.quickSuggestions"</span>: &#123;</span><br><span class="line">    <span class="comment">//开启自动显示建议</span></span><br><span class="line">    <span class="attr">"other"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"comments"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"strings"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"editor.tabSize"</span>: <span class="number">2</span>, <span class="comment">//制表符符号eslint</span></span><br><span class="line">  <span class="attr">"editor.formatOnSave"</span>: <span class="literal">true</span>, <span class="comment">//保存时自动格式化</span></span><br><span class="line">  <span class="attr">"editor.codeActionsOnSave"</span>: &#123;</span><br><span class="line">    <span class="attr">"source.fixAll"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;, <span class="comment">//让prettier使用eslint的代码格式进行校验</span></span><br><span class="line">  <span class="attr">"prettier.semi"</span>: <span class="literal">false</span>, <span class="comment">//去掉代码结尾的分号</span></span><br><span class="line">  <span class="attr">"prettier.singleQuote"</span>: <span class="literal">true</span>, <span class="comment">//使用带引号替代双引号</span></span><br><span class="line">  <span class="attr">"javascript.format.insertSpaceBeforeFunctionParenthesis"</span>: <span class="literal">true</span>, <span class="comment">//让函数(名)和后面的括号之间加个空格</span></span><br><span class="line">  <span class="attr">"vetur.format.defaultFormatter.html"</span>: <span class="string">"js-beautify-html"</span>, <span class="comment">//格式化.vue中html</span></span><br><span class="line">  <span class="attr">"vetur.format.defaultFormatter.js"</span>: <span class="string">"vscode-typescript"</span>, <span class="comment">//让vue中的js按编辑器自带的ts格式进行格式化</span></span><br><span class="line">  <span class="attr">"vetur.format.defaultFormatterOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"js-beautify-html"</span>: &#123;</span><br><span class="line">      <span class="attr">"wrap_attributes"</span>: <span class="string">"force-aligned"</span> <span class="comment">//属性强制折行对齐</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"eslint.validate"</span>: [</span><br><span class="line">    <span class="comment">//开启对.vue文件中错误的检查</span></span><br><span class="line">    <span class="string">"javascript"</span>,</span><br><span class="line">    <span class="string">"javascriptreact"</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"language"</span>: <span class="string">"html"</span>,</span><br><span class="line">      <span class="attr">"autoFix"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"language"</span>: <span class="string">"vue"</span>,</span><br><span class="line">      <span class="attr">"autoFix"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"emmet.triggerExpansionOnTab"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"files.associations"</span>: &#123;</span><br><span class="line">    <span class="comment">//要进行html补全的文件</span></span><br><span class="line">    <span class="attr">"*.js"</span>: <span class="string">"html"</span>,</span><br><span class="line">    <span class="attr">"*.vue"</span>: <span class="string">"html"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"workbench.colorTheme"</span>: <span class="string">"Quiet Light"</span>,</span><br><span class="line">  <span class="attr">"explorer.confirmDelete"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"terminal.integrated.fontSize"</span>: <span class="number">24</span>,</span><br><span class="line">  <span class="attr">"editor.autoClosingBrackets"</span>: <span class="string">"always"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>Chrome 这个装个最新版本的就好,然后装一个谷歌访问助手 , 然后打开设置.点击左侧高级下的扩展程序 ,然后点击扩展程序左边的菜单按钮,然后打开谷歌应用商店搜索devtools 安装<strong>Vue.js devtools</strong>即可.下图我已经安装过了所以没有显示 添加到 Chrome.<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/r3.gif" alt=""></p></li><li><p>如果想美化Google标签页的话 在应用商城搜索 <strong>momentum</strong> 即可</p></li></ol><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191223092306.png" alt="20191223092306.png" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://cn.vuejs.org/images/logo.png&quot; alt=&quot;20191223092306.png&quot; style=&quot;zoom: 67%;&quot; /&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://fightlee.fun/categories/web/"/>
    
    
      <category term="vue" scheme="http://fightlee.fun/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Part2·Java结构&amp;基本语法(图文)</title>
    <link href="http://fightlee.fun/04-java.html"/>
    <id>http://fightlee.fun/04-java.html</id>
    <published>2019-12-22T04:37:53.000Z</published>
    <updated>2019-12-26T07:33:36.699Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191222183619.png" alt="20191222183619.png"></p><a id="more"></a><h2 id="Section-1-Java程序结构"><a href="#Section-1-Java程序结构" class="headerlink" title="Section.1  Java程序结构"></a>Section.1  Java程序结构</h2><p>在第一篇文章中我们已经学会了如何在系统中安装Java开发工具和开发Java所需要的环境,并创建了我们第一个Java项目,建立了第一个Java类文件并成功运行.那现在我们来分析一下之前的代码是什么意思.</p><p>首先我们再来回顾一下之前的第一个Java程序 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span></span>&#123; <span class="comment">//程序的外层框架</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123; <span class="comment">//程序的内层框架</span></span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>); <span class="comment">//程序所要执行的代码</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="main方法"><a href="#main方法" class="headerlink" title="main方法"></a>main方法</h4><p>这里我着重的讲解一下上篇代码中的 public static void main(String[] args){} 这个程序的内层框架, 我们把它简称为<strong>main方法</strong>,是整个Java程序的入口.那在这里我再简单介绍一下一些基本的概念.</p><ol><li><p>程序 : 什么是程序? <img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191222195458.png" alt="20191222195458.png">这里字典给我们解释的非常清楚了.  就是一件事情进行的步骤和次序. 在计算机中 程序就是一堆有次序的<strong>指令</strong>的集合.那指令又是什么? 这里我们把指令就理解为步骤就好.在实际生活中,程序无所不在,比如去银行办理各种业务就是一个程序.<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191222200359.png" alt="20191222200359.png">对于我们现在看到的这个办理业务的程序而言,程序是从上至下,依次执行,不能将以上的顺序打乱,因为我们不能直接去了银行就去柜台输密码,签字什么的.没取号,没排队,银行职员也不知道你要办理什么业务咱们输密码有什么用?<strong>所以程序的执行是有顺序的,并且缺一不可的.</strong></p></li><li><p><strong>main 方法</strong> : main : 主要的 . main方法就是Java程序的主入口,也就是说Java程序要从main方法开始来执行我们设计的程序, 相当于我要去银行办理业务,那首先得从银行的大门进去才能正式开始我们银行办理业务的程序,那银行的大门就是我们的main方法,main方法有4要素,4者缺一不可.</p><ol><li>public</li><li>static</li><li>void</li><li>String[] args</li></ol></li><li><p>上面第一条我们介绍到了指令的概念,现在我们在代码中新加入几行代码</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     System.out.println(<span class="string">"1.输入用户名"</span>);</span><br><span class="line">     System.out.println(<span class="string">"2.输入密码"</span>);</span><br><span class="line">     System.out.println(<span class="string">"3.点击登陆按钮"</span>);</span><br><span class="line">     System.out.println(<span class="string">"4.登陆成功"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   然后点击绿色的箭头开始运行代码.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>输入用户名</span><br><span class="line"><span class="number">2.</span>输入密码</span><br><span class="line"><span class="number">3.</span>点击登陆按钮</span><br><span class="line"><span class="number">4.</span>登陆成功</span><br></pre></td></tr></table></figure><p>   从上面的执行结果我们就能看出来,程序是从main方法开始执行,然后从main方法的大括号内部由上至下依次执行的,而其中写的代码 <strong>System.out.println(“xxx”);</strong> 的作用就是将双引号 <b style="color:red">“ “</b> 内部的内容输出到控制台上,我们就能看到输出结果.</p><h2 id="Section-2-注释-amp-关键字-amp-标识符"><a href="#Section-2-注释-amp-关键字-amp-标识符" class="headerlink" title="Section.2  注释&amp;关键字&amp;标识符"></a>Section.2  注释&amp;关键字&amp;标识符</h2><h4 id="A-Java严格区分大小写"><a href="#A-Java严格区分大小写" class="headerlink" title="A. Java严格区分大小写"></a>A. Java严格区分大小写</h4><p>首先我们在编写Java程序的时候要注意 Java 是大小写敏感的,严格区分大小写, Class 和 class 的 意义和作用都不一样.</p><h4 id="B-关键字"><a href="#B-关键字" class="headerlink" title="B. 关键字"></a>B. 关键字</h4><p>在java中有一些单词是具备特殊含义的,不能作为其他用途来使用,下面用一个表格来整理Java中所有的关键字和保留字</p><table><thead><tr><th>类别</th><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>权限控制</td><td>private</td><td>私有的</td></tr><tr><td></td><td>public</td><td>公共的</td></tr><tr><td></td><td>protected</td><td>受保护的</td></tr><tr><td>类、方法和变量修饰符</td><td>class</td><td>类</td></tr><tr><td></td><td>static</td><td>静态</td></tr><tr><td></td><td>final</td><td>最终,不可变</td></tr><tr><td></td><td>extends</td><td>继承</td></tr><tr><td></td><td>abstract</td><td>抽象</td></tr><tr><td></td><td>implements</td><td>实现</td></tr><tr><td></td><td>interface</td><td>接口</td></tr><tr><td></td><td>new</td><td>新建,创建</td></tr><tr><td></td><td>native</td><td>本地,原生</td></tr><tr><td></td><td>strictfp</td><td>精确</td></tr><tr><td></td><td>synchronized</td><td>同步</td></tr><tr><td></td><td>transient</td><td>瞬态</td></tr><tr><td></td><td>volatile</td><td>易变的</td></tr><tr><td>程序控制语句</td><td>break</td><td>跳出</td></tr><tr><td></td><td>case</td><td>和switch结合使用,用来选择</td></tr><tr><td></td><td>continue</td><td>跳出当前循环,继续下一轮循环</td></tr><tr><td></td><td>default</td><td>默认值</td></tr><tr><td></td><td>do</td><td>执行</td></tr><tr><td></td><td>else</td><td>否则</td></tr><tr><td></td><td>if</td><td>如果</td></tr><tr><td></td><td>for</td><td>循环</td></tr><tr><td></td><td>while</td><td>循环</td></tr><tr><td></td><td>switch</td><td>选择结构</td></tr><tr><td></td><td>return</td><td>返回</td></tr><tr><td></td><td>instanceof</td><td>判断是否为该类实例</td></tr><tr><td>异常处理</td><td>try</td><td>尝试</td></tr><tr><td></td><td>catch</td><td>捕捉异常</td></tr><tr><td></td><td>finally</td><td>不管是否出现异常都会执行</td></tr><tr><td></td><td>throw</td><td>抛出一个异常对象</td></tr><tr><td></td><td>throws</td><td>声明一个或者多个异常类</td></tr><tr><td></td><td>assert</td><td>断言</td></tr><tr><td>包</td><td>import</td><td>导入</td></tr><tr><td></td><td>package</td><td>包</td></tr><tr><td>数据类型</td><td>byte</td><td>字节型</td></tr><tr><td></td><td>short</td><td>短整型</td></tr><tr><td></td><td>int</td><td>整型</td></tr><tr><td></td><td>long</td><td>长整型</td></tr><tr><td></td><td>float</td><td>单精度浮点</td></tr><tr><td></td><td>double</td><td>双精度浮点</td></tr><tr><td></td><td>boolean</td><td>布尔</td></tr><tr><td></td><td>char</td><td>字符</td></tr><tr><td></td><td>void</td><td>无返回值类型</td></tr><tr><td>引用</td><td>this</td><td>当前类引用</td></tr><tr><td></td><td>super</td><td>父类引用</td></tr><tr><td>保留字</td><td>goto</td><td>不能使用</td></tr><tr><td></td><td>const</td><td>不能使用</td></tr><tr><td>值</td><td>null</td><td>空</td></tr></tbody></table><h5 id="注"><a href="#注" class="headerlink" title="注"></a>注</h5><p>有些同学可能一看,哇这么多单词,对于一些英语可能比较差的同学在这里可能就懵逼了,其实这里我要补充一句,要想学了Java然后出去找一份工作的话,其实需要掌握的词汇量也就100 200个就足够了,每天记10个单词,不到1个月就记完了,所以每天学习所涉及到不懂的单词,当天就即时的消化掉.这里也要注意,<strong>关键字不需要死记硬背</strong>,,<strong>关键字不需要死记硬背</strong>,<strong>关键字不需要死记硬背</strong>,咱们在后面的学习过程中,慢慢的就掌握了,只要代码敲的多就好.这里还要提醒一句,其实有了工具后关键字在工具中有着和其他单词不同的颜色,用眼睛就能看出来哪个是关键字,哪个不是了.</p><h4 id="C-标识符"><a href="#C-标识符" class="headerlink" title="C. 标识符"></a>C. 标识符</h4><p> Java 所有的组成部分都需要名字。类名、变量名,常量名以及方法名都被称为标识符。</p><p>关于标识符我们要注意的是标识符的命名规则和命名规范 :</p><p>规则 :  </p><ol><li>标识符不能用数字开头</li><li>标识符由字母数字和符号组成,符号中不能有特殊符号除了下划线 _ 和 美元符号 $</li><li>关键字不能用来做为标识符使用</li><li>标识符大小写是敏感的,也就是说 name 和 Name 是不同的标识符</li></ol><p>规范:</p><ol><li>命名尽量要有意义.</li><li>类名,也就是关键字后class后的名称 , class名称一般都是每个单词首字母大写,比如 : Student,Teacher,ProdcutInfo,OrderInfo,OrderService,等等</li><li>变量名 , 一般都是第一个单词字母小写,之后的每个单词首字母都大写,比如 : studentName,orderName,productPrice,等等</li><li>常量名, 一般都是每个单词都大写,单词之间使用下划线隔开 . 如 : ERROR_CODE , MAX_VALUE, MIN_VALUE</li><li>方法名 : 和变量名类似 , 如 getElementById() , getStudentByName() , 通常是根据要实现的功能来进行相应的命名</li></ol><h5 id="注-规则是一定要遵守的-但是规范我这里总结的只是大部分程序猿都这么去写-没有按照规范来不会错-但是希望大家去遵守-就跟排队一样的-插队体现了人品素质差-没有遵守代码规范也只是代表着你的编程素质差而已-除非是你的公司有明文规范要求你这么写-那我们还是要以公司为主"><a href="#注-规则是一定要遵守的-但是规范我这里总结的只是大部分程序猿都这么去写-没有按照规范来不会错-但是希望大家去遵守-就跟排队一样的-插队体现了人品素质差-没有遵守代码规范也只是代表着你的编程素质差而已-除非是你的公司有明文规范要求你这么写-那我们还是要以公司为主" class="headerlink" title="注 : 规则是一定要遵守的,但是规范我这里总结的只是大部分程序猿都这么去写,没有按照规范来不会错,但是希望大家去遵守,就跟排队一样的,插队体现了人品素质差,没有遵守代码规范也只是代表着你的编程素质差而已,除非是你的公司有明文规范要求你这么写,那我们还是要以公司为主"></a>注 : 规则是一定要遵守的,但是规范我这里总结的只是大部分程序猿都这么去写,没有按照规范来不会错,但是希望大家去遵守,就跟排队一样的,插队体现了人品素质差,没有遵守代码规范也只是代表着你的编程素质差而已,除非是你的公司有明文规范要求你这么写,那我们还是要以公司为主</h5><h4 id="D-注释"><a href="#D-注释" class="headerlink" title="D. 注释"></a>D. 注释</h4><p>注释 : 解释.比如说我们定义了一个方法,或者写了一段代码,或者定义了一个变量,都可以加上注释,注释中的文字不会被Java所执行,起一个解释的作用.</p><p>Java中有3种注释</p><ol><li><strong>单行注释</strong>    // 注释内容       这里要注意, 单行注释只会注释掉 双斜杠后面的内容.</li><li><strong>多行注释</strong>    /*    注释内容  */</li><li><strong>文档注释</strong>    /**  注释内容   */</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 这是一个show方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//声明了一个局部变量a,并赋值为1</span></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    String name;<span class="comment">//声明了一个局部变量name</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    给局部变量name赋值</span></span><br><span class="line"><span class="comment">    同时输出变量name中的值</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    name = <span class="string">"zhangsan"</span>;</span><br><span class="line">    System.out.println(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Section-3-变量-amp-数据类型"><a href="#Section-3-变量-amp-数据类型" class="headerlink" title="Section.3  变量&amp;数据类型"></a>Section.3  变量&amp;数据类型</h2><p>OK 介绍完一些Java中的标识符和关键字等概念后.我们继续开始讲解下面的内容.</p><h3 id="变量-variable"><a href="#变量-variable" class="headerlink" title="变量 [variable]"></a>变量 [variable]</h3><h4 id="变量的概念"><a href="#变量的概念" class="headerlink" title="变量的概念"></a>变量的概念</h4><p>在讲变量之前我还是用一个例子来帮助大家理解变量.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191226153157.png" alt="20191226153157.png"></p><p>小明有1000块钱,小明不管是出去Shopping也好,还是出去玩也好携带在身上很不方便.那按照我们现在的人的思维是不是可以把钱存在支付宝或者微信里呢?然后想要用钱的时候就用支付宝或者微信支付就可以了,这样是不是更加方便?</p><p>那在上面这个例子里,支付宝或者微信就是我们用来存储或者保存钱的一个容器.小明想要花钱或者存钱的时候只需要选用一种容器,然后用容器来去操作就好了.然后,容器中可以用来操作钱的种类又有很多,比如说花呗,借呗,余额宝,账户余额等等,那现在小明现在操作或者存储的是哪种类型的钱呢?</p><p>到了这里我们就来总结一下上面的例子 ;</p><ol><li>存储钱的容器    ======&gt;  变量</li><li>使用 支付宝 or 微信 ?  ======&gt;  变量名称</li><li>1000块钱             ======&gt;     数据值</li><li>账户余额,花呗,借呗              ======&gt;     数据类型</li></ol><p>到这里我们再来用专业一点的语言来描述这几个概念 :</p><p><strong>变量  :  Java内存中的一块存储空间,这块空间中存储的数据是可变的</strong> =====&gt;     容器</p><p><strong>变量名  : 引用存储空间所起的名称</strong> ======&gt;    支付宝,微信</p><p><strong>数据类型 : 在java中,根据存储空间所存储的数据不同,划分了多种数据类型,比如说,存储的是数字,数字又分小数类型和整数类型,存储的是字母或者汉字或者拼音等,可以称之为字符或者字符串类型等等</strong></p><p>======&gt;  余额,花呗,借呗</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">变量的语法 :</span><br><span class="line"></span><br><span class="line">数据类型 变量名1 [<span class="string"> = 数据值2</span>][<span class="symbol">, 变量名2 [= 数据值2</span>] ...] ;</span><br><span class="line"></span><br><span class="line">---这里要注意的是 [] 中的内容代表可写可不写---</span><br></pre></td></tr></table></figure><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>刚刚讲到了在Java中会根据数据的不同而划分了不同的数据类型,那现在我们来看一下具体有多少种数据类型</p><ol><li>基本数据类型<ol><li>整数类型 : 整数分为4种 byte short <b style="color:red;">int </b> long  如 : 1,2,3,4 100 ,200 , -100,-200..</li><li>浮点类型 : 浮点型 2种 float <b style="color:red;">double</b>  如 : 0.1, 1.1234, -0.123…</li><li>布尔类型 : <b style="color:red;">boolean</b> 如 : true ,false  </li><li>字符类型 : char 如 : ‘a’ ‘b’ ‘我’ ‘好’ ‘了’</li></ol></li><li>引用数据类型  :   数组,类类型 等…  <b style="color:red;">String </b></li></ol><p>上面列表中我标红的类型就是在java基础学习的过程中常见的数据类型.</p><p><b style="color:red">int &amp; double</b> : 在 Java 中 整数和浮点型小数的默认类型</p><p><b style="color:red">boolean</b> : 在 Java 中 称之为 boolean类型 , boolean类型只有2个值, <strong>true</strong> 和 <strong>false</strong>. 代表<strong>真</strong>或者<strong>假</strong></p><h5 id="String和char的区别"><a href="#String和char的区别" class="headerlink" title="String和char的区别"></a><b style="color:red">String和char的区别</b></h5><ol><li><p>char 称之为 字符 , 在Java语言中,所有的单个字母,数字,或者汉字和字符,都能被’’单引号所标识,比如 ‘a’,’b’,’我’,’1’ ,’=’ 都称之为字符</p></li><li><p>String 称之为 字符串 , 通俗一点理解,字符串即一串字符, 也就是如果有多个字母或者符号,我们就需要用 “” 双引号来标识, 如  : “我好了”, “下次一定” , “湖人总冠军” , “abc” , “123” 等等..</p></li></ol><h5 id="注意-并不是说一定要多个字符才称之为字符串-只要用双引号标识的-我们都认为是字符串-打个比方-一块羊肉叫羊肉-一根竹子上串5块羊肉就叫羊肉串了-那羊肉串被你吃了4块-还剩一块-那不还得是羊肉串嘛"><a href="#注意-并不是说一定要多个字符才称之为字符串-只要用双引号标识的-我们都认为是字符串-打个比方-一块羊肉叫羊肉-一根竹子上串5块羊肉就叫羊肉串了-那羊肉串被你吃了4块-还剩一块-那不还得是羊肉串嘛" class="headerlink" title="注意 : 并不是说一定要多个字符才称之为字符串,只要用双引号标识的,我们都认为是字符串,打个比方,一块羊肉叫羊肉,一根竹子上串5块羊肉就叫羊肉串了, 那羊肉串被你吃了4块,还剩一块,那不还得是羊肉串嘛!"></a>注意 : 并不是说一定要多个字符才称之为字符串,只要用双引号标识的,我们都认为是字符串,打个比方,一块羊肉叫羊肉,一根竹子上串5块羊肉就叫羊肉串了, 那羊肉串被你吃了4块,还剩一块,那不还得是羊肉串嘛!<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/xiao111.gif" alt=""></h5><p>   比如 “Hello World!” , “abc123”  这些都是多个字符组成的 必须用双引号标识,代表字符串, 但是 如果 是 <strong>“a”</strong>,双引号只标识了单个字符 也是代表字符串,只有 <strong>‘a’</strong> 才是 字符.</p><h4 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h4><p>变量的使用分为2步 :</p><ol><li>声明变量</li><li>给变量赋值</li><li>使用变量来对数据进行操作</li></ol><p>也可以一步到位 :  声明变量并赋值,然后再操作</p><p>按照第一篇文章介绍的方式我们再创建一个VariableDemo01的class,用上面的语法来描述小明存钱到支付宝或者微信,然后到使用钱的过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VariableDemo01</span></span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">  <span class="comment">//1.确定小明要存什么类型的数据,数据为1000 那数据类型在Java中就为整数类型</span></span><br><span class="line">        <span class="comment">//整数类型 int</span></span><br><span class="line">        <span class="comment">//2.小明将钱存入哪一个容器中</span></span><br><span class="line">        <span class="comment">//容器名称,也就是变量名 weixin</span></span><br><span class="line">        <span class="comment">//上面2步就是 : 声明变量的过程 .</span></span><br><span class="line">        <span class="keyword">int</span> weixin ;</span><br><span class="line">        <span class="comment">//3.小明要存1000  存到 weixin 中</span></span><br><span class="line">        <span class="comment">//这一步就是给变量赋值</span></span><br><span class="line">        weixin = <span class="number">1000</span>;</span><br><span class="line">        <span class="comment">//现在我们要去操作变量了.比如小明逛街花了100</span></span><br><span class="line">        System.out.println(weixin - <span class="number">100</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">900</span></span><br></pre></td></tr></table></figure><p>然后我们还可以换另一种方式 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">//1.声明变量并赋值</span></span><br><span class="line">    <span class="keyword">int</span> zhifubao = <span class="number">2000</span>;</span><br><span class="line">    <span class="comment">//2.使用变量,查看支付宝中有多少余额</span></span><br><span class="line">    System.out.println(zhifubao);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2000</span></span><br></pre></td></tr></table></figure><h5 id="注-我们如果想要输出这种结果"><a href="#注-我们如果想要输出这种结果" class="headerlink" title="注 : 我们如果想要输出这种结果"></a>注 : 我们如果想要输出这种结果</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">余额 = <span class="number">2000</span></span><br></pre></td></tr></table></figure><p>就要修改代码为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"余额 = "</span> + zhifubao);</span><br></pre></td></tr></table></figure><h2 id="Section-4-练习"><a href="#Section-4-练习" class="headerlink" title="Section.4 练习"></a>Section.4 练习</h2><p>好了..现在我们应该已经对变量有了一些基本的理解,来几个练习吧</p><ol><li>在main方法中声明并使用变量存储以下内容,并输出<ol><li>名称(name)  Lucy  String 类型</li><li>身高(height) 1.7    double 类型</li><li>体重(weight) 50    int 类型</li><li>性别(gender) 女    char 类型</li><li>是否结婚(isMarried) 否(false) boolean类型</li></ol></li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">名称 : <span class="type">Lucy</span></span><br><span class="line">身高 : 1.7</span><br><span class="line">体重 : 50</span><br><span class="line">性别 : 女</span><br><span class="line">是否结婚 : <span class="type">false</span></span><br></pre></td></tr></table></figure><h2 id="Section-5-总结"><a href="#Section-5-总结" class="headerlink" title="Section.5 总结"></a>Section.5 总结</h2><p>今天内容有点多 , 就简单总结一下 :</p><ol><li>java中的 main方法 (理解,多敲拿这个练手感)</li><li><strong>关键字&amp;标识符&amp;注释</strong> (掌握概念,不用死记)</li><li><b style="color:red">变量&amp;数据类型</b> (重点掌握)</li></ol><p>好了,来个詹韦连线激情一下.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/james&wade.gif" alt=""></p><p>  <img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191223005929.png" alt="20191223005929.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191222183619.png&quot; alt=&quot;20191222183619.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo next7.X主题 添加版权信息</title>
    <link href="http://fightlee.fun/01-next.html"/>
    <id>http://fightlee.fun/01-next.html</id>
    <published>2019-12-22T04:22:03.000Z</published>
    <updated>2019-12-26T07:26:43.828Z</updated>
    
    <content type="html"><![CDATA[<p style="text-align:center">hexo 7.x next 版权配置.</p><a id="more"></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Creative Commons 4.0 International License.</span></span><br><span class="line"></span><br><span class="line"><span class="section"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"></span><br><span class="line"><span class="section"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"></span><br><span class="line"><span class="section"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"></span><br><span class="line"><span class="section"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line"></span><br><span class="line">creative_commons:</span><br><span class="line">license: by-nc-sa</span><br><span class="line">sidebar: true</span><br><span class="line">post: true</span><br><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><p>把 post 和 sidebar 和 language 配置下即可.. OK.</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center&quot;&gt;hexo 7.x next 版权配置.&lt;/p&gt;
    
    </summary>
    
    
      <category term="next" scheme="http://fightlee.fun/categories/next/"/>
    
    
      <category term="next主题" scheme="http://fightlee.fun/tags/next%E4%B8%BB%E9%A2%98/"/>
    
      <category term="版权信息" scheme="http://fightlee.fun/tags/%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>Part7·面向对象编程·二(图文)</title>
    <link href="http://fightlee.fun/03-java.html"/>
    <id>http://fightlee.fun/03-java.html</id>
    <published>2019-12-21T07:59:35.000Z</published>
    <updated>2019-12-22T16:59:33.750Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191221160614.png" alt="20191221160614.png"></p><a id="more"></a><h2 id="Section-1-前文引入"><a href="#Section-1-前文引入" class="headerlink" title="Section. 1 前文引入"></a>Section. 1 前文引入</h2><p>在上一篇文章中我们知道了在 Java 中如何设计一个类,来定义类中的属性和行为,那属性这个东西呢,和咱们之前学过的变量非常相似.所以我们这里暂时先不提,这篇文章主要来给大家分析我们类中的<b style="color:red">行为</b>.</p><h2 id="Section-2-理论"><a href="#Section-2-理论" class="headerlink" title="Section. 2 理论"></a>Section. 2 理论</h2><p>行为 : 在程序语言中,我们可以用 function 或者 method 这俩个单词来对他进行翻译,也可以称之为函数或者方法.在 class(类,以后我这里都写成 class)中,通常有 4 种形态的方法.那在掌握不同形态方法之前我们首先来了解一下创建方法的语法是什么?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法的基本语法</span></span><br><span class="line">[修饰符] 返回值类型 方法名([参数类型<span class="number">1</span> 参数名<span class="number">1</span>,参数类型<span class="number">2</span> 参数名<span class="number">2</span>,...])&#123;</span><br><span class="line">    方法体</span><br><span class="line">    ...</span><br><span class="line">    [<span class="keyword">return</span> 返回值;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里来对上面的语法来做一个简单的解释 :</p><p><strong>修饰符</strong> : 方法的修饰符有很多,不同的修饰符作用也不同 比如 : 对方法权限限定的 public private protected , 是否静态 static ,能否被重写 final 等.. 这里目前我们先使用一个 public(公共的)</p><p><strong>返回值类型</strong> : 方法的返回值类型就是 一个数据类型, 但是 返回值类型不能随便定义,我们需要通过具体方法所设计到的需求来决定是否给定具体返回值类型,如果该方法没有具体返回值类型 我们可以定义为 <strong>void</strong></p><p><strong>方法名</strong> : 方法的名称.注意取名的规范即可,和变量一样,尽量要有意义,首个单词小写,其余单词首字母大写,如 showProductInfo , getStudentById 等等…</p><p><strong>参数类型和参数名</strong> : 在调用该方法的时候,比如我们前文设计的猫和狗类种吃东西的方法 , 那具体猫和狗吃什么呢?对于吃的食物不确定,我们就可以通过传入参数的形式来决定,比如猫吃鱼,狗吃骨头,那 鱼和骨头 我们简单认为就是一个字符串,那传入的参数类型就是 String 参数名称就是 food</p><p><strong>方法体</strong> : 方法中所需要执行的代码</p><p><strong>return 返回值</strong> : 如果方法中定义了返回值类型,我们就必须要在方法的最后加上 <strong>return</strong> 关键字 .理解起来也很简单,调用该方法有返回值 那是不是应该给我返回 一个值出来了? 这里 正好和返回值类型呼应, 返回什么类型的值,方法上就应该填写什么返回值类型或者能够兼容的返回值类型.</p><h5 id="举例-1"><a href="#举例-1" class="headerlink" title="举例 1 :"></a>举例 1 :</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//现在我们设计一个计算器类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calucator</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//那计算器中肯定具备了一些行为,比如 加减乘除</span></span><br><span class="line">    <span class="comment">//那我们定义一个最基本的 加法的 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">plus1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"这是计算器中的加法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上面是一个最基本的方法,调用方法应该这么调用.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     <span class="comment">//1.创建计算器对象</span></span><br><span class="line">        Calucator calucator = <span class="keyword">new</span> Calucator();</span><br><span class="line">        <span class="comment">//2.调用计算器中的加法</span></span><br><span class="line">        calucator.plus1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用的结果 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是计算器中的加法</span><br></pre></td></tr></table></figure><p>很显然,这个结果虽然正确的运行了计算器中的加法方法,但是并不是我们想要的.这个时候我们就需要其他几种形态的方法了.那先介绍一下有几种 :</p><ol><li>无返回值 无参数的方法 —&gt;就是上面的 plus1 方法</li><li>无返回值 有参数的方法</li><li>有返回值 无参数的方法</li><li>有返回值 有参数的方法</li></ol><p>其实总的来说就是看是否有没有返回值,是否有没有参数?那我们在定义方法的时候怎么决定是否定义返回值,是否传入参数呢?也是通过 2 个方面来决定</p><ol><li>在调用方法的时候,方法体中的代码需不需要使用到未知的数据?</li><li>在调用方法完成的时候,调用者是否需要拿到方法产生的结果?</li></ol><p>好.根据上面 2 个问题 我们重新来设计我们计算器中的 plus 方法,在上面的代码中我们重新设计 :</p><h5 id="举例-2"><a href="#举例-2" class="headerlink" title="举例 2 :"></a>举例 2 :</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*第一 : 方法体中的代码需不需要使用到未知的数据 ? 很明显计算器要做加法运算肯定是要对2个未知的数来进行加法运算,比如 : a + b , 那也就是说我们方法体在运行的时候需要用到一个 数字 a  和 数字 b ,那这样我们就确定了当前方法的参数类型和参数名称.</span></span><br><span class="line"><span class="comment">参数类型1 : int 参数名1 : a</span></span><br><span class="line"><span class="comment">    参数类型2 : int 参数名2 : b</span></span><br><span class="line"><span class="comment">  第二 : 调用者是否需要拿到方法产生的数据? 计算器在计算完 a 和 b 的和之后,我们需要拿到运算后的结果,这样我们就确定了当前方法的返回值.</span></span><br><span class="line"><span class="comment">    return a+b的和; //记住分号一定要写</span></span><br><span class="line"><span class="comment">  那确定了参数和返回值 我们重新来定义plus方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calucator</span></span>&#123;</span><br><span class="line">    <span class="comment">//返回值 是 2 个 int 类型的和 那也是 int类型</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">plus2</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = a + b;<span class="comment">//声明变量sum来接收a和b的和</span></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//又是创建对象和调用的过程</span></span><br><span class="line">        Calucator calucator = <span class="keyword">new</span> Calucator();</span><br><span class="line">        <span class="comment">//调用的时候要注意,既然我们在方法上声明了参数,那我们就要传入对应的参数类型的值.</span></span><br><span class="line">        <span class="comment">//比如我们要计算3和5的值</span></span><br><span class="line">        <span class="comment">//因为我们将和从方法中返回了出来,所以我们可以用对应的sum的数据类型来对返回值进行接收</span></span><br><span class="line">        <span class="keyword">int</span> sum = calucator.plus2(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="comment">//最后打印输出 我们得到的结果</span></span><br><span class="line">        System.out.println(<span class="string">"3 + 5 = "</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到结果 :</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span>+ <span class="number">5</span> = <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="Section-3-练习"><a href="#Section-3-练习" class="headerlink" title="Section. 3 练习"></a>Section. 3 练习</h2><p>好了,经过上文的学习后,我们自己来练习一下具体方法的定义和调用</p><p>练习 1 : 在 Calucator 中完善其他减法(sub)乘法(mul)和除法(div),方法名已经给出来了哦.</p><p>练习 2 : 重新设计之前敲过的猫和狗类的吃东西的方法,比如说给一种食物(food) 就代表狗或者猫在吃什么? 食物我们先定义为 String 类型即可.</p><h2 id="Section-4-总结"><a href="#Section-4-总结" class="headerlink" title="Section. 4 总结"></a>Section. 4 总结</h2><ol><li><p>方法的定义</p><ol><li>方法具体用来干什么? 确定方法名称,比如说方法的作用是 吃饭 eat ,计算总价 getTotalPrice,根据学生的名称来查询学生信息 getStudentInfoByName 等.</li><li>方法体中需不需要用到未知的参数. 确定参数类型和参数名</li><li>方法结束后调用者需不需要使用方法调用完的结果. 如果需要 就应该写返回值类型 和 在方法体中 使用 return 返回对应类型的值</li></ol></li><li><p>方法的调用</p><ol><li><strong>有参数</strong> 比如 void plus(int a,int b) 那在调用时,就必须传入对应参数列表的参数,第一个参数是 int 类型,那就要传入 int 类型数据,第二个类型如果是 String 那就要传入 String. 该 plus 方法 2 个参数都是 int 类型,</li></ol><ul><li>调用方式 : <strong>对象.plus(1,2);</strong></li></ul><ol start="2"><li><strong>有返回值</strong> 比如 int plus(int a,int b) 那在调用时,我们就能通过 对应的返回值类型来接收数据</li></ol><ul><li>调用方式 : <strong>int sum = 对象.plus(3,4);</strong></li></ul></li></ol><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/baodao.gif" />]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191221160614.png&quot; alt=&quot;20191221160614.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
      <category term="面向对象" scheme="http://fightlee.fun/tags/oops/"/>
    
  </entry>
  
  <entry>
    <title>Part6·面向对象编程(图文)</title>
    <link href="http://fightlee.fun/02-java.html"/>
    <id>http://fightlee.fun/02-java.html</id>
    <published>2019-12-20T06:11:03.000Z</published>
    <updated>2019-12-22T10:39:24.244Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/xiao1.jpg" alt=""></p><a id="more"></a><h2 id="Section-1-前文引入"><a href="#Section-1-前文引入" class="headerlink" title="Section. 1 前文引入"></a>Section. 1 前文引入</h2><p>OK!今天咱们正式进入到 Java 的核心思想的学习了.标题的面向对象编程是什么意思呢?是不是这样呢?</p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/xiao2.jpeg" alt="xiao2" style="zoom:67%;" /><p>开个玩笑了,那什么是面向对象编程呢?要搞清楚面向对象是什么?首先我们得知道什么是对象?在学 Java 的当中 90%的人应该都听说过一句话 : <strong>万物皆对象</strong></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/xiao3.png" alt=""></p><h2 id="Section-2-理论"><a href="#Section-2-理论" class="headerlink" title="Section. 2 理论"></a>Section. 2 理论</h2><p><b style="color:red">万物皆对象</b> : 故名思意 , 世间万物在 Java 中我们都可以认为是一个对象,比如一花一草,一人一物,具体点的,比如从你眼前驶过的车辆,无论是小汽车还是公共汽车还是货车,还是从你头上飞过的飞禽,燕子,乌鸦,鸽子,还是从你脚边跑过的走兽,哈士奇,萨摩耶,橘猫,等等…. 这些都可以称之为<strong>对象</strong>,也就是对象就是一些实际存在于我们生活中的个体</p><p>了解了对象的概念后,我们再来思考,大部分对象之间是不是都有一些共同的特征,我们人类再对这些具有共同的特征的对象统一归类,比如说刚才我们提到的燕子,乌鸦,鸽子,这些物种都具备<b style="color:red">飞的行为</b>,还有他们都有体重,大小,和年龄的一些<b style="color:red">特征</b>,所以我们人类都将具备此类对象相同的<b style="color:red">行为和属性</b>归纳成鸟类.同样的还有无论是哈士奇还是萨摩耶还是阿拉斯加,他们也有着相同的<b style="color:red">特征</b>比如,他们的主要生活地点都是寒冷区域,也有体重,性别,身高,体重等,还具备着拉雪橇,看家,打猎等<b style="color:red">行为</b>,我们人类也将具备此类对象相同的行为的属性归纳成狗类.</p><p>注意上一段中我大量的引用到了 2 个词,<b style="color:red">行为</b>和<b style="color:red">属性特征</b>,也就是说我们将根据一些对象相同的行为或者属性特征描述成了某一类事物,并且只要具备了该事物的行为和属性特征的具体的实例对象都是属于同一类事物.再来看图说话.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/b1.png" alt=""></p><p>那我们在 Java 中如何来描述以上这一归纳成狗类的过程呢?</p><p>在 Java 中 我们用并不陌生的一个关键字 <b style="color: red;font-size: 20px;">class </b>来描述一类事物,接下来我们用代码来演示如何通过一个事物的属性和行为描述一个类.</p><p>在工程中 src 文件夹对应的 package 中创建 Dog 类 new –&gt; Class –&gt; 名称为 Dog</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  狗类</span></span><br><span class="line"><span class="comment">  属性特征 :</span></span><br><span class="line"><span class="comment">  智商(iq)    0--&gt;   整数  int</span></span><br><span class="line"><span class="comment">  外号(nickName)  二哈 --&gt; 字符串  String</span></span><br><span class="line"><span class="comment">  体重(weight)  60  --&gt; 正数    int</span></span><br><span class="line"><span class="comment">  品种(brand)    哈士奇 --&gt; 字符串  String</span></span><br><span class="line"><span class="comment">  行为 :</span></span><br><span class="line"><span class="comment">  拉雪橇 komatik();//英语随便百度的....</span></span><br><span class="line"><span class="comment">  吃东西 eat();</span></span><br><span class="line"><span class="comment">  看家 lookHome();</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span>&#123;</span><br><span class="line">    <span class="comment">//描述狗类的属性</span></span><br><span class="line">    <span class="keyword">int</span> iq;</span><br><span class="line">    String nickName;</span><br><span class="line">    <span class="keyword">int</span> weight;</span><br><span class="line">    String brand;</span><br><span class="line">    <span class="comment">//描述狗类的行为</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">komatik</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(nickName + <span class="string">"拉雪橇咯..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"吃饭饭..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lookHome</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"一只体重 : "</span> + weight + <span class="string">"斤的"</span> + brand + <span class="string">"正在看家,"</span> + <span class="string">"看起来智商为 : "</span> + iq);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面我们用一个 class 关键字来定义一个狗类, 然后 在狗类中对狗类进行具体的描述,比如,根据上面的图片中的狗体现的属性和行为,我们定义了 智商,外号等属性,看家,吃东西等行为.OK! 在 Java 中我们已经将狗类描述好了,那怎么在 Java 中根据狗的描述来创建一个具体的二哈对象呢?同样看代码.</p><p>在创建另一个名字为 TestClass 的 class 文件,我们在 main 方法中输入代码 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestClass</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建第一只狗东西  ---&gt; 通过 new关键字来创建</span></span><br><span class="line">        Dog dog = <span class="keyword">new</span> Dog();<span class="comment">//大写的Dog就是要创建的对象所属的类的名称</span></span><br><span class="line">        <span class="comment">//给创建出来的小dog的属性赋值.</span></span><br><span class="line">        dog.iq = <span class="number">0</span>;</span><br><span class="line">        dog.nickName = <span class="string">"二哈"</span>;</span><br><span class="line">        dog.weight = <span class="number">80</span>;</span><br><span class="line">        dog.brand = <span class="string">"哈士奇"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用小dog具备的行为</span></span><br><span class="line">        dog.eat();<span class="comment">//给小dog吃饭</span></span><br><span class="line">        dog.komatik();<span class="comment">//拉出去溜溜,</span></span><br><span class="line">        dog.lookHome();<span class="comment">//再回来看家</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码写完后我们看一下程序运行的结果 :</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">吃饭饭...</span><br><span class="line">二哈拉雪橇咯...</span><br><span class="line">一只体重 : <span class="number">80</span>斤的哈士奇正在看家,看起来智商为 : <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="Section-3-练习"><a href="#Section-3-练习" class="headerlink" title="Section. 3 练习"></a>Section. 3 练习</h2><p>OK,到现在我们已经成功在 Java 中创建出了一个对象,该对象所属于 Dog 类,对象具备的属性为: 昵称,体重,品种等.有着吃东西和看门等行为.那我就出另外几个练习,大家在 Java 中练习一下.</p><hr><table><thead><tr><th>class 名称</th><th>猫 Cat</th><th></th></tr></thead><tbody><tr><td><strong>属性</strong></td><td></td><td>数据类型</td></tr><tr><td>品种 brand</td><td>美短</td><td>String</td></tr><tr><td>昵称 nickName</td><td>招财</td><td>String</td></tr><tr><td>体重 weight</td><td>20</td><td>int</td></tr><tr><td>体型大小 size</td><td>中型</td><td>String</td></tr><tr><td><strong>行为</strong></td><td></td><td>行为中的代码</td></tr><tr><td>吃东西</td><td>eat</td><td>输出 : 吃饭饭…</td></tr><tr><td>抓老鼠</td><td>catchMouse</td><td>输出 : 体重,品种,体型的猫在捕捉老鼠</td></tr><tr><td>睡觉</td><td>sleep</td><td>输出 : 谁在睡觉</td></tr></tbody></table><hr><h2 id="Section-4-总结"><a href="#Section-4-总结" class="headerlink" title="Section. 4 总结"></a>Section. 4 总结</h2><p>对于面向对象编程思想而言,其实就是要掌握在 Java 中如何设计类和根据类来创建对应的对象,然后再给对象赋值.总的来说我们简单归纳为 3 步 :</p><p>考试时根据题目描述的或者实际开发中根据需求所掌握的内容来设计类.而设计类无非就是要掌握 3 个方面.</p><ol><li>当前需要创建的类的名称是什么? 这里名称必须是一个每个单词首字母大写的英文单词,并且起名要有意义 : 比如说,商品详情类 : ProductInfo , 订单详情类 : OrderInfo 等等..</li><li>创建的类具备哪些静态属性? 比如 商品详情类中 应该有 商品名称 : productName, 商品价格 : prodcutPrice , 商品的数量 : productNum …等等 . <strong>要注意的是 这些静态属性的命名和前面学习的变量是一样的</strong></li><li>创建的类中具备哪些动态行为? 比如 商品详情类中 有描述商品具体信息的方法 . showProdcutInfo<br>此方法内部具体的描述所有属性内容即可.</li></ol><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191221155629.png" alt="20191221155629.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/xiao1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
      <category term="面向对象" scheme="http://fightlee.fun/tags/oops/"/>
    
  </entry>
  
  <entry>
    <title>Part1·初识Java(图文)</title>
    <link href="http://fightlee.fun/01-java.html"/>
    <id>http://fightlee.fun/01-java.html</id>
    <published>2019-12-19T03:45:10.000Z</published>
    <updated>2019-12-26T07:29:52.223Z</updated>
    
    <content type="html"><![CDATA[<p>Hello,各位小朋友,不知道在前面的网页制作课程中有没有提升大家对编程的兴趣和信心?从现在开始我们将要进入到<strong>Java</strong>的学习中来了.废话不多说,直接上手.</p><h1 id="Java-环境搭建"><a href="#Java-环境搭建" class="headerlink" title="Java 环境搭建"></a>Java 环境搭建</h1><p>相信大家在学校的课程中,已经通过老师的讲解已经知道 Java 是什么?用来干嘛的?在这里我将直接从 Java 的环境搭建开始.这里主要以 windows10 为例:</p><h2 id="jdk-amp-jre-amp-jvm"><a href="#jdk-amp-jre-amp-jvm" class="headerlink" title="jdk&amp;jre&amp;jvm"></a>jdk&amp;jre&amp;jvm</h2><p> 在安装 jdk 之前,还是先介绍一下 jdk 的作用.</p><p> <strong>jdk</strong> : Java Development Kit 是<strong>Java</strong>语言的软件开发工具包.鲁迅先生曾经说过:<strong>想要建高楼,先得学会使锤子,锤子都不会用,还建个锤子的高楼</strong>(:smile:是不是鲁迅说的我就不知道了) . 在 jdk 中的 bin 目录中存放着我们在开发一幢高楼<strong>(Java 应用程序</strong>)中要使用到的一些锤子(<strong>工具</strong>)，比如 javac.exe(将源文件<strong>.java</strong>文件编译成<strong>.class</strong>文件),java.exe（运行<strong>.class</strong>文件）等工具.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/1.png" alt=""> <a id="more"></a></p><p> <strong>jre</strong> : Java Runtime Environment <strong>Java 程序的运行环境</strong>.也就是说咱们开发的 Java 程序想要运行起来就得依靠 jre 的支持,你想想我们人类是不是也得靠地球这个大环境才能生存呢？在 jre 中有<strong>Java 虚拟机(JVM)</strong>,Java 核心类库和一些支持文件.</p><p> <strong>jvm</strong> : Java Virtual Machine <strong>Java 虚拟机</strong> ，有了 Java 虚拟机,Java 语言在不同平台上运行时不需要重新编译 .也就是说有了虚拟机，咱们就可以把 Java 程序运行在各种不同的平台，让 Java 具备了跨平台性.</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p> 好了，介绍完一些基本概念，咱们开始正式安装，首先我们得去官网下载一个 jdk，现在市面主流还是以 jdk8 为主 所以我这里提供 8 的链接给各位同学下载 链接地址 : <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a> . 进入页面后往下翻就能看到下面图片，按照图片说明进行下载，我这里以 windows 64 位为例，如果是 32 位系统 就选择上面的 x86 下载即可.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/2.png" alt=""></p><h5 id="下载完毕后，双击安装，建议一直下一步（next）即可。直到安装（finish）完毕"><a href="#下载完毕后，双击安装，建议一直下一步（next）即可。直到安装（finish）完毕" class="headerlink" title="下载完毕后，双击安装，建议一直下一步（next）即可。直到安装（finish）完毕"></a>下载完毕后，双击安装，建议一直<strong>下一步</strong>（next）即可。直到安装（finish）完毕</h5><h2 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h2><ol><li><h4 id="安装好-jdk-之后，我们还需要配置一下系统环境变量，右键我的电脑-此电脑-计算机，如果桌面的计算机图标被删除的话进入到文件夹中左侧此电脑右键也可以。然后选择属性"><a href="#安装好-jdk-之后，我们还需要配置一下系统环境变量，右键我的电脑-此电脑-计算机，如果桌面的计算机图标被删除的话进入到文件夹中左侧此电脑右键也可以。然后选择属性" class="headerlink" title="安装好 jdk 之后，我们还需要配置一下系统环境变量，右键我的电脑/此电脑/计算机，如果桌面的计算机图标被删除的话进入到文件夹中左侧此电脑右键也可以。然后选择属性"></a>安装好 jdk 之后，我们还需要配置一下系统环境变量，右键<strong>我的电脑</strong>/<strong>此电脑</strong>/<strong>计算机</strong>，如果桌面的计算机图标被删除的话进入到文件夹中左侧<strong>此电脑</strong>右键也可以。然后选择<strong>属性</strong><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/1.gif" alt=""></h4></li><li><h4 id="在属性中选择左侧的高级系统设置然后选择高级选项卡，再点击环境变量按钮"><a href="#在属性中选择左侧的高级系统设置然后选择高级选项卡，再点击环境变量按钮" class="headerlink" title="在属性中选择左侧的高级系统设置然后选择高级选项卡，再点击环境变量按钮."></a>在属性中选择左侧的<strong>高级系统设置</strong>然后选择<strong>高级</strong>选项卡，再点击<strong>环境变量</strong>按钮.<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/2.gif" alt=""></h4></li><li><h4 id="点击按钮后-在下面的系统变量中新建-JAVA-HOME-记住最后一定要点确定"><a href="#点击按钮后-在下面的系统变量中新建-JAVA-HOME-记住最后一定要点确定" class="headerlink" title="点击按钮后,在下面的系统变量中新建 JAVA_HOME,记住最后一定要点确定"></a>点击按钮后,在下面的系统变量中新建 JAVA_HOME,记住最后一定要点<strong>确定</strong><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/r2.gif" alt=""></h4></li><li><h4 id="查找-CLASSPATH-如没有就新建-JAVA-HOME-lib-JAVA-HOME-lib-tools-jar-前面的点别忘了"><a href="#查找-CLASSPATH-如没有就新建-JAVA-HOME-lib-JAVA-HOME-lib-tools-jar-前面的点别忘了" class="headerlink" title="查找 CLASSPATH,如没有就新建. .;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar; 前面的点别忘了"></a>查找 CLASSPATH,如没有就新建. <strong>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar;</strong> 前面的点别忘了<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/4.gif" alt=""></h4></li><li><h4 id="找到-Path-变量进行编辑-添加-JAVA-HOME-bin-JAVA-HOME-jre-bin”-最后别忘了点确定哦"><a href="#找到-Path-变量进行编辑-添加-JAVA-HOME-bin-JAVA-HOME-jre-bin”-最后别忘了点确定哦" class="headerlink" title="找到 Path 变量进行编辑,添加 %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin” , 最后别忘了点确定哦!)"></a>找到 Path 变量进行编辑,添加 %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin” , <strong>最后别忘了点确定哦!</strong><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/3.png" alt="">)<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/4.png" alt=""></h4></li><li><h4 id="最后测试环境变量是否配置成功-win-r-输入-cmd-回车-打开-cmd-界面-输入-javac-如果没有报错-出现-error-或者出现以下界面均配置-OK"><a href="#最后测试环境变量是否配置成功-win-r-输入-cmd-回车-打开-cmd-界面-输入-javac-如果没有报错-出现-error-或者出现以下界面均配置-OK" class="headerlink" title="最后测试环境变量是否配置成功.win + r 输入 cmd 回车 打开 cmd 界面 输入 javac , 如果没有报错(出现 error)或者出现以下界面均配置 OK"></a>最后测试环境变量是否配置成功.win + r 输入 cmd 回车 打开 cmd 界面 输入 javac , 如果没有报错(出现 error)或者出现以下界面均配置 OK<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/5.png" alt="5" style="zoom: 80%;" /></h4></li><li><h4 id="如果还有错-把-Path-环境变量中的下方所示的第一个删除"><a href="#如果还有错-把-Path-环境变量中的下方所示的第一个删除" class="headerlink" title="如果还有错 把 Path 环境变量中的下方所示的第一个删除"></a>如果还有错 把 Path 环境变量中的下方所示的第一个删除<img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191221163244.png" alt="20191221163244.png"></h4></li></ol><h2 id="开发工具的介绍"><a href="#开发工具的介绍" class="headerlink" title="开发工具的介绍"></a>开发工具的介绍</h2><p> 配置好 jdk 之后.就开始安装我们的 Java 开发工具了,孔子曾说过: <strong>工欲善其事,必先利其器</strong>.那我们想要开发自己的 Java 应用程序,选择一款合适的开发工具肯定会事半功倍.</p><p>这里我要给各位同学提几点要求.在学习的阶段要对自己狠一点,学习是一个长久,循序渐进的过程,不能三天打鱼两天晒网.所以当我们做好准备开始学习就需要严格要求自己每天都吸收一点新知识和回顾之前的内容,一开始接触 Java 肯定是比较困难的,但是也有无数个成功的例子,而这些成功的人无疑是每天都在努力,所以,如果大家对 Java 或者编程感兴趣的话,坚持下去,你就能成功!</p><p>现在市面上的 Java 开发工具主流无非 2 种,Eclipse <img src="https://dss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=2712477069,1146026712&fm=179&app=42&f=JPEG?w=56&h=56" alt="img"> 和 Idea <img src="https://dss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=2995446634,2852731158&amp;fm=179&amp;app=42&amp;f=JPG?w=121&amp;h=140" alt="img" style="zoom:50%;" /></p><p><strong>说明</strong> : 我这个博客针对的人群可能在校大学生居多,这样有一些大学生在校期间没有自己的电脑,这样工具的选择就会很尴尬,因为有一些大学机房里都装的是 Eclipse,Idea 没有,那这样的话我们学起来肯定有差别,所以我接下来的课程还是以 Eclipse 为主,到了 JavaEE 阶段我们再更换成 Idea 来进行开发,这样我们就学会使用了 2 种工具,而在校期间同学如果对 Java 很感兴趣,那可以在学习的后期跟父母沟通或者自己勤工俭学来获取一台自己的笔记本,笔记本的购买我这里也建议一下,最好还是 8G 内存为主,最好有固态硬盘,显卡不用太好,cpu 可以好一点即可.具体的购买,大家可以参考各种笔记本网站的推荐即可.</p><p>有了自己的笔记本后,我这里还是推荐大家直接从 Idea 开始入门,但是没有 Idea 的同学也不用太担心,工具只是工具,就算你有高达,你不会写代码拿 Idea 有什么用呢?所以还是要以 Java 核心内容学习为主,工具为辅.</p><p>根据上面的说明,简单来说,现在大部分还是以 Idea 为主,但是不是说 Eclipse 就被完全淘汰了,很多公司很多项目还是在使用 Eclipse 甚至 MyEclipse 的.所以学习 2 个工具的使用我觉得还是很有必要哦.好了先来介绍 Eclipse 的使用.</p><h5 id="Eclipse-的安装-如果大学机房有的话可以省略此步骤-但是可以在自己笔记本上安装试一试-环境变量也是一样"><a href="#Eclipse-的安装-如果大学机房有的话可以省略此步骤-但是可以在自己笔记本上安装试一试-环境变量也是一样" class="headerlink" title="Eclipse 的安装 : (如果大学机房有的话可以省略此步骤,但是可以在自己笔记本上安装试一试,环境变量也是一样)"></a>Eclipse 的安装 : (如果大学机房有的话可以省略此步骤,但是可以在自己笔记本上安装试一试,环境变量也是一样)</h5><ol><li><h5 id="下载-直接官网-https-www-eclipse-org-downloads-点击-Download-下载即可"><a href="#下载-直接官网-https-www-eclipse-org-downloads-点击-Download-下载即可" class="headerlink" title="下载 直接官网 https://www.eclipse.org/downloads/ 点击 Download 下载即可"></a>下载 直接官网 <a href="https://www.eclipse.org/downloads/" target="_blank" rel="noopener">https://www.eclipse.org/downloads/</a> 点击 Download 下载即可</h5></li><li><h5 id="安装-选择-Eclipse-IDE-for-Enterprise-Java-Developers-也就是第二个"><a href="#安装-选择-Eclipse-IDE-for-Enterprise-Java-Developers-也就是第二个" class="headerlink" title="安装 选择 Eclipse IDE for Enterprise Java Developers 也就是第二个"></a>安装 选择 <strong>Eclipse IDE for Enterprise Java Developers</strong> 也就是第二个</h5></li></ol><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/6.png" alt=""></p><h5 id="选择你要安装的路径-然后点击-Install-即可"><a href="#选择你要安装的路径-然后点击-Install-即可" class="headerlink" title="选择你要安装的路径 然后点击 Install 即可"></a>选择你要安装的路径 然后点击 Install 即可</h5><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/7.png" alt=""></p><h5 id="如果出现以下界面-点击-AcceptNow-即可"><a href="#如果出现以下界面-点击-AcceptNow-即可" class="headerlink" title="如果出现以下界面 点击 AcceptNow 即可"></a>如果出现以下界面 点击 AcceptNow 即可</h5><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/8.png" alt=""></p><h5 id="如果又出现下方界面-勾选-Remember-accepted-licenese-再点击-Accept-即可"><a href="#如果又出现下方界面-勾选-Remember-accepted-licenese-再点击-Accept-即可" class="headerlink" title="如果又出现下方界面 勾选 Remember accepted licenese 再点击 Accept 即可"></a>如果又出现下方界面 勾选 Remember accepted licenese 再点击 Accept 即可</h5><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/9.png" alt=""></p><h2 id="创建第一个-Java-应用程序"><a href="#创建第一个-Java-应用程序" class="headerlink" title="创建第一个 Java 应用程序"></a>创建第一个 Java 应用程序</h2><h4 id="创建-Java-程序"><a href="#创建-Java-程序" class="headerlink" title="创建 Java 程序"></a>创建 Java 程序</h4><p> 好了,到了激动人心的时刻了.在创建 Java 程序之前我们先打开 Eclipse 对工具进行简单的设置和页面的介绍</p><ol><li><h5 id="设置字体大小和切换工作面板"><a href="#设置字体大小和切换工作面板" class="headerlink" title="设置字体大小和切换工作面板"></a>设置字体大小和切换工作面板</h5><p> 在打开后的 Eclipse 界面中.</p></li></ol><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/10.png" alt=""></p><p>图中的 Workspace 对应的路径是工作空间的路径,就是我们编写代码存放的目录.设置好后点击 Launch 启动 Eclipse. <strong>注意</strong>:我们在安装软件的过程中或者创建的文件夹目录都尽量不要有中文路径和特殊符号.</p><p>启动后关闭 welcome 界面,在 Eclipse 的上方菜单栏中找到 Window 修改字体样式和大小</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/a1.png" alt=""></p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/g1.gif" alt=""></p><p>修改完字体后还需要将 Eclipse 当前的工作面板切换成普通 Java 的面板,因为现在默认安装的是 JavaEE 的开发面板</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/g2.gif" alt=""></p><p>留下如图所示 3 块空白区域即可.如果不小心关闭了 Package Explorer 面板或者其他面板我们都可以通过 Window 中的 Show View 来找到对应的面板</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/20191221170735.png" alt="20191221170735.png"></p><ol start="2"><li><h5 id="创建-Java-程序-1"><a href="#创建-Java-程序-1" class="headerlink" title="创建 Java 程序"></a>创建 Java 程序</h5></li></ol><p>在左侧 Package Explorer 中右键选择 new Java Project 即可</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/a2.png" alt=""></p><p>在弹出的窗口中填写 Java 工程的名称.这里 Project:工程的意思(<strong>在前面我们提过写代码就像建高楼,建楼是一个工程,敲代码亦如此</strong>.)</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/a3.png" alt=""></p><p>填写完工程名点击 Finish,在 Package Explorer 中出现工程</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/a4.png" alt=""></p><p>Package Explorer : 包资源管理器.在这里我们可以认为这是用来管理当前工程中的各种文件的.</p><p>上图中的 src 文件夹就是我们放置 java 源代码文件的根目录.</p><p>创建好工程后,我们可以去观察下我们之前的工作空间目录下会有一个新建的目录就是我们当前的工程,以后我们每次创建的工程都可以在此处找到.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/a5.png" alt=""></p><p>继续右键选中 src 文件夹选择 new –&gt; Package,然后填写 Package 名称,名称的格式一般为公司域名的倒写+模块名. 如 xxx.xxx.xxx.xx, com.java.firstlearn.p1.创建好 package 后,观察原项目会发现在 src 下创建了对应层级的文件夹目录,这样的好处就是我们可以<strong>方便的对当前工程下的不同作用类型的 java 源文件进行分类管理</strong>.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/g3.gif" alt=""></p><p>创建好 Package 后继续选中对应的 package 右键 new –&gt; Class</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/g4.gif" alt=""></p><p>这里我们再去工程下的 p1 文件夹下查看是否有 FirstLearn1.java 源文件</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/a6.png" alt=""></p><p>好了,终于到了最后一步了,编写 Java 代码,查看运行效果.根据如下图所示输入代码.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/g5.gif" alt=""></p><p>代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.firstlearn.p1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstLearn01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意 :</strong> 虽然给出了代码,但是一定要自己手动的操作几遍加深印象.代码是什么意思不需要理解我们下节课再分解.</p><p>但是代码的</p><p><strong>英文大小写</strong>和<strong>空格</strong>还有<strong>中英文符号</strong>的问题</p><p><strong>英文大小写</strong>和<strong>空格</strong>还有<strong>中英文符号</strong>的问题</p><p><strong>英文大小写</strong>和<strong>空格</strong>还有<strong>中英文符号</strong>的问题</p><p>一定要注意(<strong>重要的事情一定得强调三遍</strong>)</p><p>就是大家在敲代码的时候一定要把输入法调成英文输入来进行编写.代码的缩进处理可以使用 <strong>Tab</strong>键来进行缩进 大家可以试一下.下节课我会继续给大家讲解 Eclipse 的具体使用.今天就到这,同学们再把前面的操作回顾一下,我们下章再见.</p><p><img src="https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/a7.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hello,各位小朋友,不知道在前面的网页制作课程中有没有提升大家对编程的兴趣和信心?从现在开始我们将要进入到&lt;strong&gt;Java&lt;/strong&gt;的学习中来了.废话不多说,直接上手.&lt;/p&gt;
&lt;h1 id=&quot;Java-环境搭建&quot;&gt;&lt;a href=&quot;#Java-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Java 环境搭建&quot;&gt;&lt;/a&gt;Java 环境搭建&lt;/h1&gt;&lt;p&gt;相信大家在学校的课程中,已经通过老师的讲解已经知道 Java 是什么?用来干嘛的?在这里我将直接从 Java 的环境搭建开始.这里主要以 windows10 为例:&lt;/p&gt;
&lt;h2 id=&quot;jdk-amp-jre-amp-jvm&quot;&gt;&lt;a href=&quot;#jdk-amp-jre-amp-jvm&quot; class=&quot;headerlink&quot; title=&quot;jdk&amp;amp;jre&amp;amp;jvm&quot;&gt;&lt;/a&gt;jdk&amp;amp;jre&amp;amp;jvm&lt;/h2&gt;&lt;p&gt; 在安装 jdk 之前,还是先介绍一下 jdk 的作用.&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;jdk&lt;/strong&gt; : Java Development Kit 是&lt;strong&gt;Java&lt;/strong&gt;语言的软件开发工具包.鲁迅先生曾经说过:&lt;strong&gt;想要建高楼,先得学会使锤子,锤子都不会用,还建个锤子的高楼&lt;/strong&gt;(:smile:是不是鲁迅说的我就不知道了) . 在 jdk 中的 bin 目录中存放着我们在开发一幢高楼&lt;strong&gt;(Java 应用程序&lt;/strong&gt;)中要使用到的一些锤子(&lt;strong&gt;工具&lt;/strong&gt;)，比如 javac.exe(将源文件&lt;strong&gt;.java&lt;/strong&gt;文件编译成&lt;strong&gt;.class&lt;/strong&gt;文件),java.exe（运行&lt;strong&gt;.class&lt;/strong&gt;文件）等工具.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://fightlee-blog.oss-cn-shenzhen.aliyuncs.com/img/1.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="后台" scheme="http://fightlee.fun/categories/server/"/>
    
    
      <category term="java" scheme="http://fightlee.fun/tags/java/"/>
    
      <category term="jdk" scheme="http://fightlee.fun/tags/jdk/"/>
    
      <category term="eclipse" scheme="http://fightlee.fun/tags/eclipse/"/>
    
  </entry>
  
</feed>
